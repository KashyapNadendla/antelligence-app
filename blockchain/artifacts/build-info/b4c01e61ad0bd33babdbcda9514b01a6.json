{"id":"b4c01e61ad0bd33babdbcda9514b01a6","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/ColonyMemory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @notice Extended \"shared trust memory\" ledger for ant colony and tumor nanobot simulations.\n///         Stores visited cells, food collection, drug delivery events, and tumor treatment outcomes.\ncontract ColonyMemory {\n    // ===== Ant Colony Simulation =====\n    struct Visit { uint32 x; uint32 y; address ant; }\n    event CellVisited(Visit v);\n    event FoodCollected(uint256 tokenId, uint32 x, uint32 y, address ant);\n\n    mapping(bytes32 => bool) public visited;  // hashed (x,y) → true\n\n    function markVisited(uint32 x, uint32 y) external {\n        bytes32 key = keccak256(abi.encodePacked(x, y));\n        if (!visited[key]) {\n            visited[key] = true;\n            emit CellVisited(Visit(x, y, msg.sender));\n        }\n    }\n\n    function recordFood(uint256 id, uint32 x, uint32 y) external {\n        emit FoodCollected(id, x, y, msg.sender);\n    }\n\n    function hasVisited(uint32 x, uint32 y) external view returns (bool) {\n        return visited[keccak256(abi.encodePacked(x, y))];\n    }\n\n    // ===== Tumor Nanobot Simulation =====\n    \n    /// @notice Drug delivery event from a nanobot\n    struct DrugDelivery {\n        uint32 x;           // Position in micrometers (x coordinate)\n        uint32 y;           // Position in micrometers (y coordinate)\n        uint32 z;           // Position in micrometers (z coordinate)\n        uint32 timestamp;   // Simulation time in minutes * 100 (for 2 decimal precision)\n        address nanobot;    // Address of the nanobot agent\n        uint16 payloadAmount; // Drug units delivered (scaled by 100)\n    }\n    \n    /// @notice Tumor cell kill event (apoptosis from drug)\n    struct TumorKill {\n        uint256 cellId;     // Unique tumor cell identifier\n        uint32 x;           // Cell position (x)\n        uint32 y;           // Cell position (y)\n        uint32 z;           // Cell position (z)\n        uint32 timestamp;   // Simulation time when cell died\n        address nanobot;    // Nanobot that delivered the lethal dose\n    }\n    \n    /// @notice Simulation run metadata\n    struct SimulationRun {\n        bytes32 runHash;          // Unique hash of simulation parameters\n        uint32 startTime;         // Block timestamp when simulation started\n        uint32 totalSteps;        // Total simulation steps executed\n        uint16 cellsKilled;       // Total tumor cells killed\n        uint16 drugDeliveries;    // Total drug delivery events\n        address submitter;        // Address that submitted the run\n        bool completed;           // Whether simulation completed successfully\n    }\n    \n    // Events for tumor simulation\n    event DrugDelivered(\n        bytes32 indexed runHash,\n        uint32 x, uint32 y, uint32 z,\n        uint32 timestamp,\n        address indexed nanobot,\n        uint16 payloadAmount\n    );\n    \n    event TumorCellKilled(\n        bytes32 indexed runHash,\n        uint256 indexed cellId,\n        uint32 x, uint32 y, uint32 z,\n        uint32 timestamp,\n        address indexed nanobot\n    );\n    \n    event SimulationCompleted(\n        bytes32 indexed runHash,\n        uint32 totalSteps,\n        uint16 cellsKilled,\n        uint16 drugDeliveries,\n        address indexed submitter\n    );\n    \n    // Storage for tumor simulations\n    mapping(bytes32 => SimulationRun) public simulations;\n    mapping(bytes32 => DrugDelivery[]) public deliveriesByRun;\n    mapping(bytes32 => TumorKill[]) public killsByRun;\n    \n    /// @notice Record a drug delivery event during simulation\n    function recordDrugDelivery(\n        bytes32 runHash,\n        uint32 x, uint32 y, uint32 z,\n        uint32 timestamp,\n        uint16 payloadAmount\n    ) external {\n        DrugDelivery memory delivery = DrugDelivery({\n            x: x,\n            y: y,\n            z: z,\n            timestamp: timestamp,\n            nanobot: msg.sender,\n            payloadAmount: payloadAmount\n        });\n        \n        deliveriesByRun[runHash].push(delivery);\n        \n        emit DrugDelivered(\n            runHash, x, y, z, timestamp, msg.sender, payloadAmount\n        );\n    }\n    \n    /// @notice Record a tumor cell kill event\n    function recordTumorKill(\n        bytes32 runHash,\n        uint256 cellId,\n        uint32 x, uint32 y, uint32 z,\n        uint32 timestamp\n    ) external {\n        TumorKill memory kill = TumorKill({\n            cellId: cellId,\n            x: x,\n            y: y,\n            z: z,\n            timestamp: timestamp,\n            nanobot: msg.sender\n        });\n        \n        killsByRun[runHash].push(kill);\n        \n        emit TumorCellKilled(\n            runHash, cellId, x, y, z, timestamp, msg.sender\n        );\n    }\n    \n    /// @notice Initialize a new simulation run\n    function initializeSimulation(bytes32 runHash) external {\n        require(simulations[runHash].startTime == 0, \"Run already exists\");\n        \n        simulations[runHash] = SimulationRun({\n            runHash: runHash,\n            startTime: uint32(block.timestamp),\n            totalSteps: 0,\n            cellsKilled: 0,\n            drugDeliveries: 0,\n            submitter: msg.sender,\n            completed: false\n        });\n    }\n    \n    /// @notice Complete a simulation run and record final statistics\n    function completeSimulation(\n        bytes32 runHash,\n        uint32 totalSteps,\n        uint16 cellsKilled,\n        uint16 drugDeliveries\n    ) external {\n        SimulationRun storage run = simulations[runHash];\n        require(run.startTime > 0, \"Run not initialized\");\n        require(!run.completed, \"Run already completed\");\n        require(msg.sender == run.submitter, \"Only submitter can complete\");\n        \n        run.totalSteps = totalSteps;\n        run.cellsKilled = cellsKilled;\n        run.drugDeliveries = drugDeliveries;\n        run.completed = true;\n        \n        emit SimulationCompleted(\n            runHash, totalSteps, cellsKilled, drugDeliveries, msg.sender\n        );\n    }\n    \n    /// @notice Get delivery count for a simulation run\n    function getDeliveryCount(bytes32 runHash) external view returns (uint256) {\n        return deliveriesByRun[runHash].length;\n    }\n    \n    /// @notice Get kill count for a simulation run\n    function getKillCount(bytes32 runHash) external view returns (uint256) {\n        return killsByRun[runHash].length;\n    }\n    \n    /// @notice Get simulation run info\n    function getSimulationRun(bytes32 runHash) external view returns (SimulationRun memory) {\n        return simulations[runHash];\n    }\n}\n"},"contracts/ExperienceRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @notice Experience Registry for continual learning and knowledge sharing.\n///         Stores simulation run metadata, IPFS pointers, and quality attestations.\n///         Enables agents to learn from previous successful strategies.\ncontract ExperienceRegistry {\n    /// @notice Simulation experience record\n    struct Experience {\n        bytes32 runHash;        // Unique hash of simulation parameters\n        string ipfsCid;         // IPFS content ID with full simulation data\n        bytes32 dataHash;       // Hash of simulation results for integrity\n        uint256 score;          // Performance score (cells killed, efficiency, etc.)\n        address submitter;      // Address that submitted the experience\n        uint32 timestamp;       // Block timestamp\n        uint16 attestations;    // Number of quality attestations received\n        bool verified;          // Whether experience has been verified\n    }\n    \n    /// @notice Strategy metadata for categorizing experiences\n    struct StrategyMeta {\n        string strategyType;    // e.g., \"pheromone-guided\", \"LLM-queen\", \"hybrid\"\n        string modelUsed;       // LLM model identifier\n        uint16 nanobotCount;    // Number of nanobots\n        uint16 tumorRadius;     // Tumor size parameter\n        bytes32 datasetHash;    // Hash of tumor geometry (BraTS subject)\n    }\n    \n    /// @notice Attestation from a validator\n    struct Attestation {\n        address validator;\n        uint32 timestamp;\n        uint8 quality;          // Quality score 0-100\n        string notes;           // Optional notes\n    }\n    \n    // Events\n    event ExperienceSubmitted(\n        bytes32 indexed runHash,\n        string ipfsCid,\n        bytes32 dataHash,\n        uint256 score,\n        address indexed submitter\n    );\n    \n    event ExperienceAttested(\n        bytes32 indexed runHash,\n        address indexed validator,\n        uint8 quality\n    );\n    \n    event ExperienceVerified(\n        bytes32 indexed runHash,\n        address indexed verifier\n    );\n    \n    // Storage\n    mapping(bytes32 => Experience) public experiences;\n    mapping(bytes32 => StrategyMeta) public strategies;\n    mapping(bytes32 => Attestation[]) public attestations;\n    mapping(address => bool) public authorizedValidators;\n    \n    // Owner for managing validators\n    address public owner;\n    \n    // Minimum attestations required for verification\n    uint8 public minAttestations = 2;\n    \n    constructor() {\n        owner = msg.sender;\n        authorizedValidators[msg.sender] = true;\n    }\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner\");\n        _;\n    }\n    \n    modifier onlyValidator() {\n        require(authorizedValidators[msg.sender], \"Not authorized validator\");\n        _;\n    }\n    \n    /// @notice Submit a new simulation experience\n    function submitExperience(\n        bytes32 runHash,\n        string calldata ipfsCid,\n        bytes32 dataHash,\n        uint256 score,\n        string calldata strategyType,\n        string calldata modelUsed,\n        uint16 nanobotCount,\n        uint16 tumorRadius,\n        bytes32 datasetHash\n    ) external {\n        require(experiences[runHash].timestamp == 0, \"Experience already exists\");\n        \n        experiences[runHash] = Experience({\n            runHash: runHash,\n            ipfsCid: ipfsCid,\n            dataHash: dataHash,\n            score: score,\n            submitter: msg.sender,\n            timestamp: uint32(block.timestamp),\n            attestations: 0,\n            verified: false\n        });\n        \n        strategies[runHash] = StrategyMeta({\n            strategyType: strategyType,\n            modelUsed: modelUsed,\n            nanobotCount: nanobotCount,\n            tumorRadius: tumorRadius,\n            datasetHash: datasetHash\n        });\n        \n        emit ExperienceSubmitted(runHash, ipfsCid, dataHash, score, msg.sender);\n    }\n    \n    /// @notice Attest to the quality of an experience\n    function attestExperience(\n        bytes32 runHash,\n        uint8 quality,\n        string calldata notes\n    ) external onlyValidator {\n        require(experiences[runHash].timestamp > 0, \"Experience does not exist\");\n        require(quality <= 100, \"Quality must be 0-100\");\n        \n        // Check if validator already attested\n        Attestation[] storage existingAttestations = attestations[runHash];\n        for (uint i = 0; i < existingAttestations.length; i++) {\n            require(existingAttestations[i].validator != msg.sender, \"Already attested\");\n        }\n        \n        attestations[runHash].push(Attestation({\n            validator: msg.sender,\n            timestamp: uint32(block.timestamp),\n            quality: quality,\n            notes: notes\n        }));\n        \n        experiences[runHash].attestations++;\n        \n        // Auto-verify if threshold reached and quality is high enough\n        if (experiences[runHash].attestations >= minAttestations) {\n            uint256 avgQuality = calculateAverageQuality(runHash);\n            if (avgQuality >= 70) {\n                experiences[runHash].verified = true;\n                emit ExperienceVerified(runHash, msg.sender);\n            }\n        }\n        \n        emit ExperienceAttested(runHash, msg.sender, quality);\n    }\n    \n    /// @notice Calculate average quality score for an experience\n    function calculateAverageQuality(bytes32 runHash) public view returns (uint256) {\n        Attestation[] storage atts = attestations[runHash];\n        if (atts.length == 0) return 0;\n        \n        uint256 sum = 0;\n        for (uint i = 0; i < atts.length; i++) {\n            sum += atts[i].quality;\n        }\n        return sum / atts.length;\n    }\n    \n    /// @notice Query top experiences by score for a specific strategy type\n    /// @dev Off-chain indexer should be used for efficient queries\n    function getExperience(bytes32 runHash) external view returns (\n        Experience memory exp,\n        StrategyMeta memory strategy,\n        uint256 avgQuality\n    ) {\n        exp = experiences[runHash];\n        strategy = strategies[runHash];\n        avgQuality = calculateAverageQuality(runHash);\n    }\n    \n    /// @notice Get all attestations for an experience\n    function getAttestations(bytes32 runHash) external view returns (Attestation[] memory) {\n        return attestations[runHash];\n    }\n    \n    /// @notice Add an authorized validator\n    function addValidator(address validator) external onlyOwner {\n        authorizedValidators[validator] = true;\n    }\n    \n    /// @notice Remove an authorized validator\n    function removeValidator(address validator) external onlyOwner {\n        authorizedValidators[validator] = false;\n    }\n    \n    /// @notice Update minimum attestations required\n    function setMinAttestations(uint8 min) external onlyOwner {\n        minAttestations = min;\n    }\n    \n    /// @notice Check if an experience is verified\n    function isVerified(bytes32 runHash) external view returns (bool) {\n        return experiences[runHash].verified;\n    }\n}\n\n"},"contracts/FoodToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\n/// @title ERC-721 that represents a single piece of food in the grid.\n///        Minted by the simulation and transferred to the ant that picks it up.\ncontract FoodToken is ERC721 {\n    uint256 public nextId;\n    address public colony;          // Antelligence back-end address\n\n    constructor(address _colony) ERC721(\"AntelligenceFood\", \"FOOD\") {\n        colony = _colony;\n    }\n\n    function mint(address to) external {\n        require(msg.sender == colony, \"Only colony may mint\");\n        _safeMint(to, nextId++);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:141:0","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"290:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"309:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"629:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"662:6:0","nodeType":"VariableDeclaration","scope":11,"src":"654:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"678:7:0","nodeType":"VariableDeclaration","scope":11,"src":"670:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"695:6:0","nodeType":"VariableDeclaration","scope":11,"src":"687:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:0"},"src":"623:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"709:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"872:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"899:6:0","nodeType":"VariableDeclaration","scope":16,"src":"891:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:0"},"src":"866:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"913:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1104:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:0"},"src":"1077:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1128:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1519:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1528:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1555:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1547:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:0"},"src":"1478:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1569:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1754:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1783:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1775:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:0"},"src":"1748:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1799:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2005:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2033:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2025:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:0"},"src":"1999:43:0"}],"scope":137,"src":"280:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2046:143:0","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2200:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2220:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2450:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2477:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2469:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:0"},"src":"2444:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2490:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2633:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2656:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:0"},"src":"2627:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2679:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3008:6:0","nodeType":"VariableDeclaration","scope":61,"src":"3000:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3016:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3041:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3033:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:0"},"src":"2973:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3054:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3217:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3245:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:0"},"src":"3211:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3259:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3451:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:0"},"src":"3423:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3475:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3768:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3778:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:0"},"src":"3727:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3801:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3986:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4016:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4008:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:0"},"src":"3980:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4032:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4240:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4270:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4262:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:0"},"src":"4234:46:0"}],"scope":137,"src":"2190:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4284:145:0","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4440:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4461:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4868:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4860:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4884:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4876:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4901:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4893:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4909:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:0"},"src":"4827:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4932:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5095:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5124:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5116:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:0"},"src":"5089:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5138:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5331:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:0"},"src":"5302:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5355:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5659:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5651:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5677:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5669:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:0"},"src":"5616:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5690:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5906:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5898:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:0"},"src":"5869:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5922:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6161:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6153:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:0"},"src":"6124:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6177:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6494:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6513:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:0"},"src":"6462:73:0"}],"scope":137,"src":"4430:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6426:0"},"id":0},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1363],"ERC165":[2841],"ERC721":[1093],"ERC721Utils":[1333],"IERC165":[2853],"IERC721":[1210],"IERC721Errors":[89],"IERC721Metadata":[1256],"Strings":[2817]},"id":1094,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1094,"sourceUnit":1211,"src":"133:38:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1094,"sourceUnit":1257,"src":"172:65:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"180:15:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1094,"sourceUnit":1334,"src":"238:52:1","symbolAliases":[{"foreign":{"id":143,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"246:11:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1094,"sourceUnit":1364,"src":"291:48:1","symbolAliases":[{"foreign":{"id":145,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"299:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":148,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1094,"sourceUnit":2818,"src":"340:48:1","symbolAliases":[{"foreign":{"id":147,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"348:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1094,"sourceUnit":2842,"src":"389:69:1","symbolAliases":[{"foreign":{"id":149,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"397:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":150,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"406:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1094,"sourceUnit":137,"src":"459:66:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"467:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":155,"name":"Context","nameLocations":["803:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1363,"src":"803:7:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"803:7:1"},{"baseName":{"id":157,"name":"ERC165","nameLocations":["812:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"812:6:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"812:6:1"},{"baseName":{"id":159,"name":"IERC721","nameLocations":["820:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"820:7:1"},"id":160,"nodeType":"InheritanceSpecifier","src":"820:7:1"},{"baseName":{"id":161,"name":"IERC721Metadata","nameLocations":["829:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":1256,"src":"829:15:1"},"id":162,"nodeType":"InheritanceSpecifier","src":"829:15:1"},{"baseName":{"id":163,"name":"IERC721Errors","nameLocations":["846:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"846:13:1"},"id":164,"nodeType":"InheritanceSpecifier","src":"846:13:1"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"527:247:1","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1093,"linearizedBaseContracts":[1093,89,1256,1210,2841,2853,1363],"name":"ERC721","nameLocation":"793:6:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":167,"libraryName":{"id":165,"name":"Strings","nameLocations":["872:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2817,"src":"872:7:1"},"nodeType":"UsingForDirective","src":"866:26:1","typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"931:5:1","nodeType":"VariableDeclaration","scope":1093,"src":"916:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:1","nodeType":"VariableDeclaration","scope":1093,"src":"963:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":175,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:1","nodeType":"VariableDeclaration","scope":1093,"src":"992:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":174,"keyName":"tokenId","keyNameLocation":"1008:7:1","keyType":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":179,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:1","nodeType":"VariableDeclaration","scope":1093,"src":"1050:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":178,"keyName":"owner","keyNameLocation":"1066:5:1","keyType":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":183,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:1","nodeType":"VariableDeclaration","scope":1093,"src":"1108:59:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":182,"keyName":"tokenId","keyNameLocation":"1124:7:1","keyType":{"id":180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":189,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:1","nodeType":"VariableDeclaration","scope":1093,"src":"1174:86:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":188,"keyName":"owner","keyNameLocation":"1190:5:1","keyType":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":187,"keyName":"operator","keyNameLocation":"1215:8:1","keyType":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":186,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":205,"nodeType":"Block","src":"1436:57:1","statements":[{"expression":{"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":197,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1446:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":198,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"1454:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":200,"nodeType":"ExpressionStatement","src":"1446:13:1"},{"expression":{"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":201,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1469:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":202,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1479:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":204,"nodeType":"ExpressionStatement","src":"1469:17:1"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"1267:108:1","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":206,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"name_","nameLocation":"1406:5:1","nodeType":"VariableDeclaration","scope":206,"src":"1392:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:1","nodeType":"VariableDeclaration","scope":206,"src":"1413:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":193,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:1"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"1436:0:1"},"scope":1093,"src":"1380:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2840,2852],"body":{"id":236,"nodeType":"Block","src":"1635:192:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":217,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"1664:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":219,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"1684:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1210_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1210_$","typeString":"type(contract IERC721)"}],"id":218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1210","typeString":"type(contract IERC721)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":223,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"1720:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":225,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"1740:15:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1256_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1256_$","typeString":"type(contract IERC721Metadata)"}],"id":224,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1256","typeString":"type(contract IERC721Metadata)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":232,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"1808:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":230,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1093_$","typeString":"type(contract super ERC721)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2840,"src":"1784:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":216,"id":235,"nodeType":"Return","src":"1645:175:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"1499:23:1","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:1","nodeType":"FunctionDefinition","overrides":{"id":213,"nodeType":"OverrideSpecifier","overrides":[{"id":211,"name":"ERC165","nameLocations":["1603:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"1603:6:1"},{"id":212,"name":"IERC165","nameLocations":["1611:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2853,"src":"1611:7:1"}],"src":"1594:25:1"},"parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:1","nodeType":"VariableDeclaration","scope":237,"src":"1554:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":208,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:1"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"1629:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":214,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:1"},"scope":1093,"src":"1527:300:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1135],"body":{"id":264,"nodeType":"Block","src":"1933:136:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":245,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"1947:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:1","typeDescriptions":{}}},"id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":259,"nodeType":"IfStatement","src":"1943:87:1","trueBody":{"id":258,"nodeType":"Block","src":"1968:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":251,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"1989:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"RevertStatement","src":"1982:37:1"}]}},{"expression":{"baseExpression":{"id":260,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"2046:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":262,"indexExpression":{"id":261,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"2056:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":244,"id":263,"nodeType":"Return","src":"2039:23:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"1833:23:1","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":265,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:1","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"owner","nameLocation":"1888:5:1","nodeType":"VariableDeclaration","scope":265,"src":"1880:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:1"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":265,"src":"1924:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:1"},"scope":1093,"src":"1861:208:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1143],"body":{"id":277,"nodeType":"Block","src":"2175:46:1","statements":[{"expression":{"arguments":[{"id":274,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2206:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":273,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2192:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":272,"id":276,"nodeType":"Return","src":"2185:29:1"}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"2075:23:1","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:1","nodeType":"FunctionDefinition","parameters":{"id":269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":268,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:1","nodeType":"VariableDeclaration","scope":278,"src":"2120:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:1"},"returnParameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"2166:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:1"},"scope":1093,"src":"2103:118:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1241],"body":{"id":286,"nodeType":"Block","src":"2323:29:1","statements":[{"expression":{"id":284,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"2340:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":283,"id":285,"nodeType":"Return","src":"2333:12:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"2227:31:1","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":287,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:1","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"2276:2:1"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":287,"src":"2308:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":281,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:1"},"scope":1093,"src":"2263:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1247],"body":{"id":295,"nodeType":"Block","src":"2456:31:1","statements":[{"expression":{"id":293,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2473:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":292,"id":294,"nodeType":"Return","src":"2466:14:1"}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"2358:31:1","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":296,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:1","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"2409:2:1"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":296,"src":"2441:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":290,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:1"},"scope":1093,"src":"2394:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1255],"body":{"id":331,"nodeType":"Block","src":"2608:176:1","statements":[{"expression":{"arguments":[{"id":305,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2632:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":304,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2618:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":307,"nodeType":"ExpressionStatement","src":"2618:22:1"},{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:1","nodeType":"VariableDeclaration","scope":331,"src":"2651:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":308,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"2675:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:1"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":315,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"2708:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":313,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:1","typeDescriptions":{}}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:1","memberName":"length","nodeType":"MemberAccess","src":"2702:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:1","trueExpression":{"arguments":[{"id":323,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"2744:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":324,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":299,"src":"2753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:1","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1529,"src":"2753:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":320,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:1","typeDescriptions":{}}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:1","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:1","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":303,"id":330,"nodeType":"Return","src":"2695:82:1"}]},"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"2493:31:1","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":332,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:1","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:1","nodeType":"VariableDeclaration","scope":332,"src":"2547:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:1"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"2593:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":301,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:1"},"scope":1093,"src":"2529:255:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":340,"nodeType":"Block","src":"3092:26:1","statements":[{"expression":{"hexValue":"","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":337,"id":339,"nodeType":"Return","src":"3102:9:1"}]},"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"2790:231:1","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":341,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:1","nodeType":"FunctionDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[],"src":"3043:2:1"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"3077:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":335,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:1"},"scope":1093,"src":"3026:92:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1183],"body":{"id":356,"nodeType":"Block","src":"3213:52:1","statements":[{"expression":{"arguments":[{"id":350,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"3232:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"3236:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"3245:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":349,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[960,1026],"referencedDeclaration":960,"src":"3223:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"3223:35:1"}]},"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"3124:23:1","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":357,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"to","nameLocation":"3177:2:1","nodeType":"VariableDeclaration","scope":357,"src":"3169:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:1","nodeType":"VariableDeclaration","scope":357,"src":"3181:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:1"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[],"src":"3213:0:1"},"scope":1093,"src":"3152:113:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1199],"body":{"id":373,"nodeType":"Block","src":"3375:78:1","statements":[{"expression":{"arguments":[{"id":366,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"3399:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":365,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"3385:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":368,"nodeType":"ExpressionStatement","src":"3385:22:1"},{"expression":{"arguments":[{"id":370,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"3438:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":369,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3425:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":364,"id":372,"nodeType":"Return","src":"3418:28:1"}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"3271:23:1","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":374,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:1","nodeType":"FunctionDefinition","parameters":{"id":361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:1","nodeType":"VariableDeclaration","scope":374,"src":"3320:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:1"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":374,"src":"3366:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:1"},"scope":1093,"src":"3299:154:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1191],"body":{"id":389,"nodeType":"Block","src":"3562:69:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":383,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"3591:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":385,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"3605:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"3615:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":382,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"3572:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"3572:52:1"}]},"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"3459:23:1","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":390,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:1","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"operator","nameLocation":"3522:8:1","nodeType":"VariableDeclaration","scope":390,"src":"3514:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"approved","nameLocation":"3537:8:1","nodeType":"VariableDeclaration","scope":390,"src":"3532:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":378,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:1"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3562:0:1"},"scope":1093,"src":"3487:144:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1209],"body":{"id":406,"nodeType":"Block","src":"3759:59:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":400,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3776:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":402,"indexExpression":{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"3795:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":404,"indexExpression":{"id":403,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"3802:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":399,"id":405,"nodeType":"Return","src":"3769:42:1"}]},"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"3637:23:1","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":407,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:1","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"owner","nameLocation":"3699:5:1","nodeType":"VariableDeclaration","scope":407,"src":"3691:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"operator","nameLocation":"3714:8:1","nodeType":"VariableDeclaration","scope":407,"src":"3706:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:1"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"3753:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:1"},"scope":1093,"src":"3665:153:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1175],"body":{"id":452,"nodeType":"Block","src":"3932:498:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":417,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3946:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:1","typeDescriptions":{}}},"id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":431,"nodeType":"IfStatement","src":"3942:87:1","trueBody":{"id":430,"nodeType":"Block","src":"3964:65:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:1","typeDescriptions":{}}},"id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":423,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"3985:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"RevertStatement","src":"3978:40:1"}]}},{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:1","nodeType":"VariableDeclaration","scope":452,"src":"4247:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":432,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[{"id":435,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"4279:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":436,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"4283:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":437,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"4292:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":434,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"4271:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":441,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"4319:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":442,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"4336:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":451,"nodeType":"IfStatement","src":"4315:109:1","trueBody":{"id":450,"nodeType":"Block","src":"4342:82:1","statements":[{"errorCall":{"arguments":[{"id":445,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"4384:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":446,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"4390:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":447,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"4399:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":444,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"4363:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":449,"nodeType":"RevertStatement","src":"4356:57:1"}]}}]},"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"3824:23:1","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"from","nameLocation":"3882:4:1","nodeType":"VariableDeclaration","scope":453,"src":"3874:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":412,"mutability":"mutable","name":"to","nameLocation":"3896:2:1","nodeType":"VariableDeclaration","scope":453,"src":"3888:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:1","nodeType":"VariableDeclaration","scope":453,"src":"3900:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:1"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"3932:0:1"},"scope":1093,"src":"3852:578:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1165],"body":{"id":470,"nodeType":"Block","src":"4540:56:1","statements":[{"expression":{"arguments":[{"id":464,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4567:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":465,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"4573:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":466,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"4577:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":463,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[471,501],"referencedDeclaration":501,"src":"4550:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":469,"nodeType":"ExpressionStatement","src":"4550:39:1"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"4436:23:1","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":471,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:1","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"from","nameLocation":"4498:4:1","nodeType":"VariableDeclaration","scope":471,"src":"4490:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"to","nameLocation":"4512:2:1","nodeType":"VariableDeclaration","scope":471,"src":"4504:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":460,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:1","nodeType":"VariableDeclaration","scope":471,"src":"4516:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":459,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:1"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"4540:0:1"},"scope":1093,"src":"4464:132:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1155],"body":{"id":500,"nodeType":"Block","src":"4733:130:1","statements":[{"expression":{"arguments":[{"id":484,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"4756:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"4762:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4766:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":483,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4743:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"4743:31:1"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":492,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"4818:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":494,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"4832:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":495,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"4838:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"4842:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":497,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4851:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":489,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"4784:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1333_$","typeString":"type(library ERC721Utils)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:1","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1332,"src":"4784:33:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":499,"nodeType":"ExpressionStatement","src":"4784:72:1"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"4602:23:1","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":501,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:1","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"from","nameLocation":"4664:4:1","nodeType":"VariableDeclaration","scope":501,"src":"4656:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"to","nameLocation":"4678:2:1","nodeType":"VariableDeclaration","scope":501,"src":"4670:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:1","nodeType":"VariableDeclaration","scope":501,"src":"4682:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"data","nameLocation":"4712:4:1","nodeType":"VariableDeclaration","scope":501,"src":"4699:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":479,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:1"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"4733:0:1"},"scope":1093,"src":"4630:233:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":513,"nodeType":"Block","src":"5453:40:1","statements":[{"expression":{"baseExpression":{"id":509,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"5470:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":511,"indexExpression":{"id":510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"5478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":508,"id":512,"nodeType":"Return","src":"5463:23:1"}]},"documentation":{"id":502,"nodeType":"StructuredDocumentation","src":"4869:504:1","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":514,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:1","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":504,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:1","nodeType":"VariableDeclaration","scope":514,"src":"5396:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:1"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"5444:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:1"},"scope":1093,"src":"5378:115:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"5688:48:1","statements":[{"expression":{"baseExpression":{"id":522,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"5705:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":524,"indexExpression":{"id":523,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"5721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":521,"id":525,"nodeType":"Return","src":"5698:31:1"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"5499:105:1","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":527,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:1","nodeType":"FunctionDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:1","nodeType":"VariableDeclaration","scope":527,"src":"5631:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:1"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"5679:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:1"},"scope":1093,"src":"5609:127:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"6156:163:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6185:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:1","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":545,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6223:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":546,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6232:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6260:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6267:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":548,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"6243:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":554,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6292:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":553,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"6279:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":556,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6304:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":538,"id":561,"nodeType":"Return","src":"6166:146:1"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"5742:300:1","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:1","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"owner","nameLocation":"6078:5:1","nodeType":"VariableDeclaration","scope":563,"src":"6070:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"spender","nameLocation":"6093:7:1","nodeType":"VariableDeclaration","scope":563,"src":"6085:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:1","nodeType":"VariableDeclaration","scope":563,"src":"6102:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":533,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:1"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":563,"src":"6150:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":536,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:1"},"scope":1093,"src":"6047:272:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":599,"nodeType":"Block","src":"6848:271:1","statements":[{"condition":{"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:1","subExpression":{"arguments":[{"id":574,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"6877:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6884:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":576,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"6893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":573,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"6863:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":598,"nodeType":"IfStatement","src":"6858:255:1","trueBody":{"id":597,"nodeType":"Block","src":"6903:210:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"6921:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:1","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":595,"nodeType":"Block","src":"7019:84:1","statements":[{"errorCall":{"arguments":[{"id":591,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"7071:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":592,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"7080:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":590,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"7044:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":594,"nodeType":"RevertStatement","src":"7037:51:1"}]},"id":596,"nodeType":"IfStatement","src":"6917:186:1","trueBody":{"id":589,"nodeType":"Block","src":"6942:71:1","statements":[{"errorCall":{"arguments":[{"id":586,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"6990:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":585,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"6967:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"RevertStatement","src":"6960:38:1"}]}}]}}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"6325:421:1","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":600,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:1","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"owner","nameLocation":"6785:5:1","nodeType":"VariableDeclaration","scope":600,"src":"6777:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"spender","nameLocation":"6800:7:1","nodeType":"VariableDeclaration","scope":600,"src":"6792:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:1","nodeType":"VariableDeclaration","scope":600,"src":"6809:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:1"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"6848:0:1"},"scope":1093,"src":"6751:368:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"7836:78:1","statements":[{"id":614,"nodeType":"UncheckedBlock","src":"7846:62:1","statements":[{"expression":{"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":608,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"7870:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":610,"indexExpression":{"id":609,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"7880:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"7892:5:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":613,"nodeType":"ExpressionStatement","src":"7870:27:1"}]}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"7125:631:1","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:1","nodeType":"FunctionDefinition","parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"account","nameLocation":"7795:7:1","nodeType":"VariableDeclaration","scope":616,"src":"7787:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"value","nameLocation":"7812:5:1","nodeType":"VariableDeclaration","scope":616,"src":"7804:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":604,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:1"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"7836:0:1"},"scope":1093,"src":"7761:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":705,"nodeType":"Block","src":"8602:700:1","statements":[{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"from","nameLocation":"8620:4:1","nodeType":"VariableDeclaration","scope":705,"src":"8612:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":633,"initialValue":{"arguments":[{"id":631,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"8636:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":630,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"8627:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"8704:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:1","typeDescriptions":{}}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":647,"nodeType":"IfStatement","src":"8700:86:1","trueBody":{"id":646,"nodeType":"Block","src":"8724:62:1","statements":[{"expression":{"arguments":[{"id":641,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"8755:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"8761:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":643,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"8767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":640,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"8738:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"8738:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"8830:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:1","typeDescriptions":{}}},"id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"8826:256:1","trueBody":{"id":674,"nodeType":"Block","src":"8850:232:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:1","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"8967:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:1","typeDescriptions":{}}},"id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":654,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[960,1026],"referencedDeclaration":1026,"src":"8946:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":666,"nodeType":"ExpressionStatement","src":"8946:48:1"},{"id":673,"nodeType":"UncheckedBlock","src":"9009:63:1","statements":[{"expression":{"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":667,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"9037:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":669,"indexExpression":{"id":668,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9047:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":672,"nodeType":"ExpressionStatement","src":"9037:20:1"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9096:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:1","typeDescriptions":{}}},"id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":690,"nodeType":"IfStatement","src":"9092:107:1","trueBody":{"id":689,"nodeType":"Block","src":"9114:85:1","statements":[{"id":688,"nodeType":"UncheckedBlock","src":"9128:61:1","statements":[{"expression":{"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":682,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"9156:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":684,"indexExpression":{"id":683,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9166:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":687,"nodeType":"ExpressionStatement","src":"9156:18:1"}]}]}},{"expression":{"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":691,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"9209:7:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":693,"indexExpression":{"id":692,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9217:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9228:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":696,"nodeType":"ExpressionStatement","src":"9209:21:1"},{"eventCall":{"arguments":[{"id":698,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9255:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9261:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9265:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":697,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"9246:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"EmitStatement","src":"9241:32:1"},{"expression":{"id":703,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9291:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":627,"id":704,"nodeType":"Return","src":"9284:11:1"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"7920:582:1","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":706,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:1","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"to","nameLocation":"8532:2:1","nodeType":"VariableDeclaration","scope":706,"src":"8524:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:1","nodeType":"VariableDeclaration","scope":706,"src":"8536:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"auth","nameLocation":"8561:4:1","nodeType":"VariableDeclaration","scope":706,"src":"8553:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:1"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"8593:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:1"},"scope":1093,"src":"8507:795:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":755,"nodeType":"Block","src":"9677:274:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"9691:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:1","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":728,"nodeType":"IfStatement","src":"9687:87:1","trueBody":{"id":727,"nodeType":"Block","src":"9709:65:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:1","typeDescriptions":{}}},"id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":720,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"9730:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"RevertStatement","src":"9723:40:1"}]}},{"assignments":[730],"declarations":[{"constant":false,"id":730,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:1","nodeType":"VariableDeclaration","scope":755,"src":"9783:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":729,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":739,"initialValue":{"arguments":[{"id":732,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"9815:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9819:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":734,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:1","typeDescriptions":{}}},"id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":731,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"9807:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":740,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"9853:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:1","typeDescriptions":{}}},"id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":754,"nodeType":"IfStatement","src":"9849:96:1","trueBody":{"id":753,"nodeType":"Block","src":"9882:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:1","typeDescriptions":{}}},"id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":746,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"9903:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"RevertStatement","src":"9896:38:1"}]}}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"9308:311:1","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":756,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:1","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"to","nameLocation":"9647:2:1","nodeType":"VariableDeclaration","scope":756,"src":"9639:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:1","nodeType":"VariableDeclaration","scope":756,"src":"9651:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:1"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"9677:0:1"},"scope":1093,"src":"9624:327:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":770,"nodeType":"Block","src":"10359:43:1","statements":[{"expression":{"arguments":[{"id":765,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"10379:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":766,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10383:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":764,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[771,801],"referencedDeclaration":801,"src":"10369:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":769,"nodeType":"ExpressionStatement","src":"10369:26:1"}]},"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"9957:340:1","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":771,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:1","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"to","nameLocation":"10329:2:1","nodeType":"VariableDeclaration","scope":771,"src":"10321:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:1","nodeType":"VariableDeclaration","scope":771,"src":"10333:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:1"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"10359:0:1"},"scope":1093,"src":"10302:100:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":800,"nodeType":"Block","src":"10707:123:1","statements":[{"expression":{"arguments":[{"id":782,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"10723:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":783,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"10727:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":781,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"10717:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":785,"nodeType":"ExpressionStatement","src":"10717:18:1"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":789,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"10779:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:1","typeDescriptions":{}}},"id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":795,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"10805:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"10809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":797,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"10818:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":786,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"10745:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1333_$","typeString":"type(library ERC721Utils)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:1","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1332,"src":"10745:33:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":799,"nodeType":"ExpressionStatement","src":"10745:78:1"}]},"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"10408:210:1","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:1","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"to","nameLocation":"10650:2:1","nodeType":"VariableDeclaration","scope":801,"src":"10642:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:1","nodeType":"VariableDeclaration","scope":801,"src":"10654:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"data","nameLocation":"10684:4:1","nodeType":"VariableDeclaration","scope":801,"src":"10671:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":777,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:1"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"10707:0:1"},"scope":1093,"src":"10623:207:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":833,"nodeType":"Block","src":"11197:186:1","statements":[{"assignments":[808],"declarations":[{"constant":false,"id":808,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:1","nodeType":"VariableDeclaration","scope":833,"src":"11207:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":820,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:1","typeDescriptions":{}}},"id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"11251:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:1","typeDescriptions":{}}},"id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":809,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"11231:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":821,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"11285:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:1","typeDescriptions":{}}},"id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":832,"nodeType":"IfStatement","src":"11281:96:1","trueBody":{"id":831,"nodeType":"Block","src":"11314:63:1","statements":[{"errorCall":{"arguments":[{"id":828,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"11358:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":827,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"11335:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":830,"nodeType":"RevertStatement","src":"11328:38:1"}]}}]},"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"10836:315:1","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":834,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:1","nodeType":"FunctionDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:1","nodeType":"VariableDeclaration","scope":834,"src":"11171:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:1"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[],"src":"11197:0:1"},"scope":1093,"src":"11156:227:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"11778:389:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"11792:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:1","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"IfStatement","src":"11788:87:1","trueBody":{"id":857,"nodeType":"Block","src":"11810:65:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:1","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"11831:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"RevertStatement","src":"11824:40:1"}]}},{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:1","nodeType":"VariableDeclaration","scope":893,"src":"11884:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":869,"initialValue":{"arguments":[{"id":862,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"11916:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":863,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"11920:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:1","typeDescriptions":{}}},"id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":861,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"11908:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"11954:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:1","typeDescriptions":{}}},"id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":881,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"12056:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":882,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"12073:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":891,"nodeType":"IfStatement","src":"12052:109:1","trueBody":{"id":890,"nodeType":"Block","src":"12079:82:1","statements":[{"errorCall":{"arguments":[{"id":885,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"12121:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"12127:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":887,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"12136:13:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":884,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"12100:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":889,"nodeType":"RevertStatement","src":"12093:57:1"}]}},"id":892,"nodeType":"IfStatement","src":"11950:211:1","trueBody":{"id":880,"nodeType":"Block","src":"11983:63:1","statements":[{"errorCall":{"arguments":[{"id":877,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"12027:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":876,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"12004:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"RevertStatement","src":"11997:38:1"}]}}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"11389:313:1","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:1","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"from","nameLocation":"11734:4:1","nodeType":"VariableDeclaration","scope":894,"src":"11726:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"to","nameLocation":"11748:2:1","nodeType":"VariableDeclaration","scope":894,"src":"11740:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:1","nodeType":"VariableDeclaration","scope":894,"src":"11752:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:1"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"11778:0:1"},"scope":1093,"src":"11707:460:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":911,"nodeType":"Block","src":"13176:53:1","statements":[{"expression":{"arguments":[{"id":905,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"13200:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"13206:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":907,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"13210:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":904,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[912,942],"referencedDeclaration":942,"src":"13186:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":910,"nodeType":"ExpressionStatement","src":"13186:36:1"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"12173:923:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":912,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:1","nodeType":"FunctionDefinition","parameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"from","nameLocation":"13132:4:1","nodeType":"VariableDeclaration","scope":912,"src":"13124:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"to","nameLocation":"13146:2:1","nodeType":"VariableDeclaration","scope":912,"src":"13138:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:1","nodeType":"VariableDeclaration","scope":912,"src":"13150:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:1"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[],"src":"13176:0:1"},"scope":1093,"src":"13101:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":941,"nodeType":"Block","src":"13568:127:1","statements":[{"expression":{"arguments":[{"id":925,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"13588:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"13594:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":927,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"13598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":924,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"13578:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"ExpressionStatement","src":"13578:28:1"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":933,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"13650:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"13664:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":936,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"13670:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":937,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"13674:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":938,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"13683:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":930,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"13616:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1333_$","typeString":"type(library ERC721Utils)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:1","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1332,"src":"13616:33:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"13616:72:1"}]},"documentation":{"id":913,"nodeType":"StructuredDocumentation","src":"13235:226:1","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":942,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:1","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":915,"mutability":"mutable","name":"from","nameLocation":"13497:4:1","nodeType":"VariableDeclaration","scope":942,"src":"13489:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"to","nameLocation":"13511:2:1","nodeType":"VariableDeclaration","scope":942,"src":"13503:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":916,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:1","nodeType":"VariableDeclaration","scope":942,"src":"13515:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"data","nameLocation":"13545:4:1","nodeType":"VariableDeclaration","scope":942,"src":"13532:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":920,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:1"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"13568:0:1"},"scope":1093,"src":"13466:229:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":959,"nodeType":"Block","src":"14208:50:1","statements":[{"expression":{"arguments":[{"id":953,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"14227:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"14231:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":955,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"14240:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":952,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[960,1026],"referencedDeclaration":1026,"src":"14218:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"14218:33:1"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"13701:432:1","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":960,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:1","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"to","nameLocation":"14164:2:1","nodeType":"VariableDeclaration","scope":960,"src":"14156:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:1","nodeType":"VariableDeclaration","scope":960,"src":"14168:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"auth","nameLocation":"14193:4:1","nodeType":"VariableDeclaration","scope":960,"src":"14185:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:1"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"14208:0:1"},"scope":1093,"src":"14138:120:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1025,"nodeType":"Block","src":"14534:568:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":972,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"14600:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"14613:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:1","typeDescriptions":{}}},"id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1018,"nodeType":"IfStatement","src":"14596:460:1","trueBody":{"id":1017,"nodeType":"Block","src":"14633:423:1","statements":[{"assignments":[981],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"owner","nameLocation":"14655:5:1","nodeType":"VariableDeclaration","scope":1017,"src":"14647:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":985,"initialValue":{"arguments":[{"id":983,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"14677:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":982,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"14663:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":986,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"14813:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:1","typeDescriptions":{}}},"id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"14835:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":993,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"14844:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:1","subExpression":{"arguments":[{"id":997,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"14870:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"14877:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":996,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"14853:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1007,"nodeType":"IfStatement","src":"14809:142:1","trueBody":{"id":1006,"nodeType":"Block","src":"14884:67:1","statements":[{"errorCall":{"arguments":[{"id":1003,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"14931:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1002,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"14909:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1005,"nodeType":"RevertStatement","src":"14902:34:1"}]}},{"condition":{"id":1008,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"14969:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1016,"nodeType":"IfStatement","src":"14965:81:1","trueBody":{"id":1015,"nodeType":"Block","src":"14980:66:1","statements":[{"eventCall":{"arguments":[{"id":1010,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"15012:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"15019:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1012,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"15023:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1009,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"15003:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"EmitStatement","src":"14998:33:1"}]}}]}},{"expression":{"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1019,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"15066:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1021,"indexExpression":{"id":1020,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"15082:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1022,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"15093:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1024,"nodeType":"ExpressionStatement","src":"15066:29:1"}]},"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"14264:171:1","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:1","nodeType":"FunctionDefinition","parameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"to","nameLocation":"14466:2:1","nodeType":"VariableDeclaration","scope":1026,"src":"14458:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":962,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:1","nodeType":"VariableDeclaration","scope":1026,"src":"14470:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"auth","nameLocation":"14495:4:1","nodeType":"VariableDeclaration","scope":1026,"src":"14487:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:1","nodeType":"VariableDeclaration","scope":1026,"src":"14501:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":968,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:1"},"returnParameters":{"id":971,"nodeType":"ParameterList","parameters":[],"src":"14534:0:1"},"scope":1093,"src":"14440:662:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1062,"nodeType":"Block","src":"15404:219:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1036,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"15418:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:1","typeDescriptions":{}}},"id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1047,"nodeType":"IfStatement","src":"15414:91:1","trueBody":{"id":1046,"nodeType":"Block","src":"15442:63:1","statements":[{"errorCall":{"arguments":[{"id":1043,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"15485:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1042,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"15463:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1045,"nodeType":"RevertStatement","src":"15456:38:1"}]}},{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1048,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"15514:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1051,"indexExpression":{"id":1049,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"15533:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1052,"indexExpression":{"id":1050,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"15540:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1053,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"15552:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1055,"nodeType":"ExpressionStatement","src":"15514:46:1"},{"eventCall":{"arguments":[{"id":1057,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"15590:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"15597:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"15607:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1056,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"15575:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"EmitStatement","src":"15570:46:1"}]},"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"15108:198:1","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1063,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:1","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"owner","nameLocation":"15347:5:1","nodeType":"VariableDeclaration","scope":1063,"src":"15339:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"operator","nameLocation":"15362:8:1","nodeType":"VariableDeclaration","scope":1063,"src":"15354:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"approved","nameLocation":"15377:8:1","nodeType":"VariableDeclaration","scope":1063,"src":"15372:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1032,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:1"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[],"src":"15404:0:1"},"scope":1093,"src":"15311:312:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1091,"nodeType":"Block","src":"15930:169:1","statements":[{"assignments":[1072],"declarations":[{"constant":false,"id":1072,"mutability":"mutable","name":"owner","nameLocation":"15948:5:1","nodeType":"VariableDeclaration","scope":1091,"src":"15940:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1076,"initialValue":{"arguments":[{"id":1074,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"15965:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1073,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"15956:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1077,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"15987:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:1","typeDescriptions":{}}},"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1088,"nodeType":"IfStatement","src":"15983:88:1","trueBody":{"id":1087,"nodeType":"Block","src":"16008:63:1","statements":[{"errorCall":{"arguments":[{"id":1084,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"16052:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1083,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"16029:22:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1086,"nodeType":"RevertStatement","src":"16022:38:1"}]}},{"expression":{"id":1089,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"16087:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1070,"id":1090,"nodeType":"Return","src":"16080:12:1"}]},"documentation":{"id":1064,"nodeType":"StructuredDocumentation","src":"15629:224:1","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:1","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:1","nodeType":"VariableDeclaration","scope":1092,"src":"15881:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:1"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1092,"src":"15921:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:1"},"scope":1093,"src":"15858:241:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1094,"src":"775:15326:1","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[1109,1118,1127]}],"src":"107:15995:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2853],"IERC721":[1210]},"id":1211,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1095,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1097,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1211,"sourceUnit":2854,"src":"134:62:2","symbolAliases":[{"foreign":{"id":1096,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"142:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1099,"name":"IERC165","nameLocations":["288:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2853,"src":"288:7:2"},"id":1100,"nodeType":"InheritanceSpecifier","src":"288:7:2"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"198:68:2","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1210,"linearizedBaseContracts":[1210,2853],"name":"IERC721","nameLocation":"277:7:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"302:88:2","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1109,"name":"Transfer","nameLocation":"401:8:2","nodeType":"EventDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:2","nodeType":"VariableDeclaration","scope":1109,"src":"410:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:2","nodeType":"VariableDeclaration","scope":1109,"src":"432:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:2","nodeType":"VariableDeclaration","scope":1109,"src":"452:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:2"},"src":"395:82:2"},{"anonymous":false,"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"483:94:2","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1118,"name":"Approval","nameLocation":"588:8:2","nodeType":"EventDefinition","parameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:2","nodeType":"VariableDeclaration","scope":1118,"src":"597:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1114,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:2","nodeType":"VariableDeclaration","scope":1118,"src":"620:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1116,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:2","nodeType":"VariableDeclaration","scope":1118,"src":"646:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:2"},"src":"582:89:2"},{"anonymous":false,"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"677:117:2","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1127,"name":"ApprovalForAll","nameLocation":"805:14:2","nodeType":"EventDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:2","nodeType":"VariableDeclaration","scope":1127,"src":"820:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:2","nodeType":"VariableDeclaration","scope":1127,"src":"843:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1125,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:2","nodeType":"VariableDeclaration","scope":1127,"src":"869:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1124,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:2"},"src":"799:85:2"},{"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"890:76:2","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:2","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"owner","nameLocation":"998:5:2","nodeType":"VariableDeclaration","scope":1135,"src":"990:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:2"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"balance","nameLocation":"1036:7:2","nodeType":"VariableDeclaration","scope":1135,"src":"1028:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:2"},"scope":1210,"src":"971:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1136,"nodeType":"StructuredDocumentation","src":"1051:131:2","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:2","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:2","nodeType":"VariableDeclaration","scope":1143,"src":"1204:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:2"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"owner","nameLocation":"1252:5:2","nodeType":"VariableDeclaration","scope":1143,"src":"1244:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:2"},"scope":1210,"src":"1187:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"1265:565:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1155,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:2","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"from","nameLocation":"1869:4:2","nodeType":"VariableDeclaration","scope":1155,"src":"1861:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"to","nameLocation":"1883:2:2","nodeType":"VariableDeclaration","scope":1155,"src":"1875:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:2","nodeType":"VariableDeclaration","scope":1155,"src":"1887:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"data","nameLocation":"1919:4:2","nodeType":"VariableDeclaration","scope":1155,"src":"1904:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1151,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:2"},"returnParameters":{"id":1154,"nodeType":"ParameterList","parameters":[],"src":"1933:0:2"},"scope":1210,"src":"1835:99:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"1940:706:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1165,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:2","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"from","nameLocation":"2685:4:2","nodeType":"VariableDeclaration","scope":1165,"src":"2677:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"to","nameLocation":"2699:2:2","nodeType":"VariableDeclaration","scope":1165,"src":"2691:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:2","nodeType":"VariableDeclaration","scope":1165,"src":"2703:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:2"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"2728:0:2"},"scope":1210,"src":"2651:78:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"2735:733:2","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1175,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:2","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"mutability":"mutable","name":"from","nameLocation":"3503:4:2","nodeType":"VariableDeclaration","scope":1175,"src":"3495:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"to","nameLocation":"3517:2:2","nodeType":"VariableDeclaration","scope":1175,"src":"3509:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:2","nodeType":"VariableDeclaration","scope":1175,"src":"3521:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:2"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"3546:0:2"},"scope":1210,"src":"3473:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"3553:452:2","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1183,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:2","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"to","nameLocation":"4035:2:2","nodeType":"VariableDeclaration","scope":1183,"src":"4027:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:2","nodeType":"VariableDeclaration","scope":1183,"src":"4039:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:2"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"4064:0:2"},"scope":1210,"src":"4010:55:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"4071:315:2","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1191,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:2","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"operator","nameLocation":"4426:8:2","nodeType":"VariableDeclaration","scope":1191,"src":"4418:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"approved","nameLocation":"4441:8:2","nodeType":"VariableDeclaration","scope":1191,"src":"4436:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1187,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:2"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"4459:0:2"},"scope":1210,"src":"4391:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1192,"nodeType":"StructuredDocumentation","src":"4466:139:2","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1199,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:2","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1194,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:2","nodeType":"VariableDeclaration","scope":1199,"src":"4631:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:2"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"operator","nameLocation":"4679:8:2","nodeType":"VariableDeclaration","scope":1199,"src":"4671:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:2"},"scope":1210,"src":"4610:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"4695:138:2","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1209,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:2","nodeType":"FunctionDefinition","parameters":{"id":1205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1202,"mutability":"mutable","name":"owner","nameLocation":"4872:5:2","nodeType":"VariableDeclaration","scope":1209,"src":"4864:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1201,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1204,"mutability":"mutable","name":"operator","nameLocation":"4887:8:2","nodeType":"VariableDeclaration","scope":1209,"src":"4879:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:2"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1209,"src":"4920:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1206,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:2"},"scope":1210,"src":"4838:88:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1211,"src":"267:4661:2","usedErrors":[],"usedEvents":[1109,1118,1127]}],"src":"108:4821:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1228]},"id":1229,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1212,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"142:154:3","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1228,"linearizedBaseContracts":[1228],"name":"IERC721Receiver","nameLocation":"307:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1214,"nodeType":"StructuredDocumentation","src":"329:500:3","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1227,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:3","nodeType":"FunctionDefinition","parameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1216,"mutability":"mutable","name":"operator","nameLocation":"877:8:3","nodeType":"VariableDeclaration","scope":1227,"src":"869:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"mutability":"mutable","name":"from","nameLocation":"903:4:3","nodeType":"VariableDeclaration","scope":1227,"src":"895:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1220,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:3","nodeType":"VariableDeclaration","scope":1227,"src":"917:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1222,"mutability":"mutable","name":"data","nameLocation":"957:4:3","nodeType":"VariableDeclaration","scope":1227,"src":"942:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1221,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:3"},"returnParameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1227,"src":"986:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1224,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:3"},"scope":1228,"src":"834:160:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1229,"src":"297:699:3","usedErrors":[],"usedEvents":[]}],"src":"116:881:3"},"id":3},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1210],"IERC721Metadata":[1256]},"id":1257,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1230,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1257,"sourceUnit":1211,"src":"153:39:4","symbolAliases":[{"foreign":{"id":1231,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"161:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1234,"name":"IERC721","nameLocations":["357:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1210,"src":"357:7:4"},"id":1235,"nodeType":"InheritanceSpecifier","src":"357:7:4"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1233,"nodeType":"StructuredDocumentation","src":"194:133:4","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1256,"linearizedBaseContracts":[1256,1210,2853],"name":"IERC721Metadata","nameLocation":"338:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"371:58:4","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1241,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:4","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[],"src":"447:2:4"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"473:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1238,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:4"},"scope":1256,"src":"434:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"494:60:4","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1247,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:4","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[],"src":"574:2:4"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1247,"src":"600:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1244,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:4"},"scope":1256,"src":"559:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1248,"nodeType":"StructuredDocumentation","src":"621:90:4","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1255,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:4","nodeType":"FunctionDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:4","nodeType":"VariableDeclaration","scope":1255,"src":"734:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:4"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1255,"src":"774:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1252,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:4"},"scope":1256,"src":"716:73:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1257,"src":"328:463:4","usedErrors":[],"usedEvents":[1109,1118,1127]}],"src":"127:665:4"},"id":4},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1333],"IERC721Errors":[89],"IERC721Receiver":[1228]},"id":1334,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1258,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1260,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1334,"sourceUnit":1229,"src":"144:55:5","symbolAliases":[{"foreign":{"id":1259,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"152:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1262,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1334,"sourceUnit":137,"src":"200:69:5","symbolAliases":[{"foreign":{"id":1261,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"208:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"271:159:5","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1333,"linearizedBaseContracts":[1333],"name":"ERC721Utils","nameLocation":"439:11:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1331,"nodeType":"Block","src":"1159:760:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1277,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1173:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:5","memberName":"code","nodeType":"MemberAccess","src":"1173:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:5","memberName":"length","nodeType":"MemberAccess","src":"1173:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1330,"nodeType":"IfStatement","src":"1169:744:5","trueBody":{"id":1329,"nodeType":"Block","src":"1193:720:5","statements":[{"clauses":[{"block":{"id":1307,"nodeType":"Block","src":"1303:214:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"1325:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1295,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"1335:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1228_$","typeString":"type(contract IERC721Receiver)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:5","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"1335:32:5","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:5","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1306,"nodeType":"IfStatement","src":"1321:182:5","trueBody":{"id":1305,"nodeType":"Block","src":"1378:125:5","statements":[{"errorCall":{"arguments":[{"id":1302,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1481:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1299,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"1445:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$89_$","typeString":"type(contract IERC721Errors)"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:5","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":71,"src":"1445:35:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"RevertStatement","src":"1438:46:5"}]}}]},"errorName":"","id":1308,"nodeType":"TryCatchClause","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"retval","nameLocation":"1295:6:5","nodeType":"VariableDeclaration","scope":1308,"src":"1288:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1291,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:5"},"src":"1279:238:5"},{"block":{"id":1326,"nodeType":"Block","src":"1546:357:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1312,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"1568:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:5","memberName":"length","nodeType":"MemberAccess","src":"1568:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1324,"nodeType":"Block","src":"1736:153:5","statements":[{"AST":{"nativeSrc":"1783:88:5","nodeType":"YulBlock","src":"1783:88:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:5","nodeType":"YulIdentifier","src":"1820:6:5"},{"kind":"number","nativeSrc":"1828:4:5","nodeType":"YulLiteral","src":"1828:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:5","nodeType":"YulIdentifier","src":"1816:3:5"},"nativeSrc":"1816:17:5","nodeType":"YulFunctionCall","src":"1816:17:5"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:5","nodeType":"YulIdentifier","src":"1841:6:5"}],"functionName":{"name":"mload","nativeSrc":"1835:5:5","nodeType":"YulIdentifier","src":"1835:5:5"},"nativeSrc":"1835:13:5","nodeType":"YulFunctionCall","src":"1835:13:5"}],"functionName":{"name":"revert","nativeSrc":"1809:6:5","nodeType":"YulIdentifier","src":"1809:6:5"},"nativeSrc":"1809:40:5","nodeType":"YulFunctionCall","src":"1809:40:5"},"nativeSrc":"1809:40:5","nodeType":"YulExpressionStatement","src":"1809:40:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1310,"isOffset":false,"isSlot":false,"src":"1820:6:5","valueSize":1},{"declaration":1310,"isOffset":false,"isSlot":false,"src":"1841:6:5","valueSize":1}],"flags":["memory-safe"],"id":1323,"nodeType":"InlineAssembly","src":"1758:113:5"}]},"id":1325,"nodeType":"IfStatement","src":"1564:325:5","trueBody":{"id":1322,"nodeType":"Block","src":"1588:142:5","statements":[{"errorCall":{"arguments":[{"id":1319,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1708:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1316,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"1672:13:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$89_$","typeString":"type(contract IERC721Errors)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:5","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":71,"src":"1672:35:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1321,"nodeType":"RevertStatement","src":"1665:46:5"}]}}]},"errorName":"","id":1327,"nodeType":"TryCatchClause","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"reason","nameLocation":"1538:6:5","nodeType":"VariableDeclaration","scope":1327,"src":"1525:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1309,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:5"},"src":"1518:385:5"}],"externalCall":{"arguments":[{"id":1286,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"1248:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1287,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"1258:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1288,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"1264:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1289,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1273:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1283,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1227:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1282,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"1211:15:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1228_$","typeString":"type(contract IERC721Receiver)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1228","typeString":"contract IERC721Receiver"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:5","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1227,"src":"1211:36:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:5","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1328,"nodeType":"TryStatement","src":"1207:696:5"}]}}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"457:531:5","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1332,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:5","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"operator","nameLocation":"1041:8:5","nodeType":"VariableDeclaration","scope":1332,"src":"1033:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"from","nameLocation":"1067:4:5","nodeType":"VariableDeclaration","scope":1332,"src":"1059:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1267,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"to","nameLocation":"1089:2:5","nodeType":"VariableDeclaration","scope":1332,"src":"1081:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:5","nodeType":"VariableDeclaration","scope":1332,"src":"1101:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"data","nameLocation":"1139:4:5","nodeType":"VariableDeclaration","scope":1332,"src":"1126:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1273,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:5"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"1159:0:5"},"scope":1333,"src":"993:926:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1334,"src":"431:1490:5","usedErrors":[],"usedEvents":[]}],"src":"118:1804:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1363]},"id":1364,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1335,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"127:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1363,"linearizedBaseContracts":[1363],"name":"Context","nameLocation":"642:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1344,"nodeType":"Block","src":"718:34:6","statements":[{"expression":{"expression":{"id":1341,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"sender","nodeType":"MemberAccess","src":"735:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1340,"id":1343,"nodeType":"Return","src":"728:17:6"}]},"id":1345,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:6","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"675:2:6"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1345,"src":"709:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:6"},"scope":1363,"src":"656:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"825:32:6","statements":[{"expression":{"expression":{"id":1350,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:6","memberName":"data","nodeType":"MemberAccess","src":"842:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1349,"id":1352,"nodeType":"Return","src":"835:15:6"}]},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:6","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[],"src":"775:2:6"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"809:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1347,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:6"},"scope":1363,"src":"758:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1361,"nodeType":"Block","src":"935:25:6","statements":[{"expression":{"hexValue":"30","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1358,"id":1360,"nodeType":"Return","src":"945:8:6"}]},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:6","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[],"src":"892:2:6"},"returnParameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1362,"src":"926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:6"},"scope":1363,"src":"863:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1364,"src":"624:338:6","usedErrors":[],"usedEvents":[]}],"src":"101:862:6"},"id":6},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1415]},"id":1416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1365,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"125:489:7","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1415,"linearizedBaseContracts":[1415],"name":"Panic","nameLocation":"665:5:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1367,"nodeType":"StructuredDocumentation","src":"677:36:7","text":"@dev generic / unspecified error"},"id":1370,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:7","nodeType":"VariableDeclaration","scope":1415,"src":"718:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"764:37:7","text":"@dev used by the assert() builtin"},"id":1374,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:7","nodeType":"VariableDeclaration","scope":1415,"src":"806:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"851:41:7","text":"@dev arithmetic underflow or overflow"},"id":1378,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:7","nodeType":"VariableDeclaration","scope":1415,"src":"897:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:7","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"950:35:7","text":"@dev division or modulo by zero"},"id":1382,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:7","nodeType":"VariableDeclaration","scope":1415,"src":"990:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1380,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"1045:30:7","text":"@dev enum conversion error"},"id":1386,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:7","nodeType":"VariableDeclaration","scope":1415,"src":"1080:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:7","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"1140:36:7","text":"@dev invalid encoding in storage"},"id":1390,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:7","nodeType":"VariableDeclaration","scope":1415,"src":"1181:55:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"1242:24:7","text":"@dev empty array pop"},"id":1394,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:7","nodeType":"VariableDeclaration","scope":1415,"src":"1271:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"1325:35:7","text":"@dev array out of bounds access"},"id":1398,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:7","nodeType":"VariableDeclaration","scope":1415,"src":"1365:52:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"1423:65:7","text":"@dev resource error (too large allocation or too large array)"},"id":1402,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:7","nodeType":"VariableDeclaration","scope":1415,"src":"1493:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:7","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"1546:42:7","text":"@dev calling invalid internal function"},"id":1406,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:7","nodeType":"VariableDeclaration","scope":1415,"src":"1593:58:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:7","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1413,"nodeType":"Block","src":"1819:151:7","statements":[{"AST":{"nativeSrc":"1854:110:7","nodeType":"YulBlock","src":"1854:110:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:7","nodeType":"YulLiteral","src":"1875:4:7","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:7","nodeType":"YulLiteral","src":"1881:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:7","nodeType":"YulIdentifier","src":"1868:6:7"},"nativeSrc":"1868:24:7","nodeType":"YulFunctionCall","src":"1868:24:7"},"nativeSrc":"1868:24:7","nodeType":"YulExpressionStatement","src":"1868:24:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:7","nodeType":"YulLiteral","src":"1912:4:7","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:7","nodeType":"YulIdentifier","src":"1918:4:7"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:7","nodeType":"YulIdentifier","src":"1905:6:7"},"nativeSrc":"1905:18:7","nodeType":"YulFunctionCall","src":"1905:18:7"},"nativeSrc":"1905:18:7","nodeType":"YulExpressionStatement","src":"1905:18:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:7","nodeType":"YulLiteral","src":"1943:4:7","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:7","nodeType":"YulLiteral","src":"1949:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:7","nodeType":"YulIdentifier","src":"1936:6:7"},"nativeSrc":"1936:18:7","nodeType":"YulFunctionCall","src":"1936:18:7"},"nativeSrc":"1936:18:7","nodeType":"YulExpressionStatement","src":"1936:18:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1409,"isOffset":false,"isSlot":false,"src":"1918:4:7","valueSize":1}],"flags":["memory-safe"],"id":1412,"nodeType":"InlineAssembly","src":"1829:135:7"}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"1658:113:7","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1414,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:7","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"code","nameLocation":"1799:4:7","nodeType":"VariableDeclaration","scope":1414,"src":"1791:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:7"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[],"src":"1819:0:7"},"scope":1415,"src":"1776:194:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1416,"src":"657:1315:7","usedErrors":[],"usedEvents":[]}],"src":"99:1874:7"},"id":7},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4474],"SafeCast":[6239],"SignedMath":[6383],"Strings":[2817]},"id":2818,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1417,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1419,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2818,"sourceUnit":4475,"src":"127:37:8","symbolAliases":[{"foreign":{"id":1418,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"135:4:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2818,"sourceUnit":6240,"src":"165:45:8","symbolAliases":[{"foreign":{"id":1420,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"173:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1423,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2818,"sourceUnit":6384,"src":"211:49:8","symbolAliases":[{"foreign":{"id":1422,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"219:10:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"262:34:8","text":" @dev String operations."},"fullyImplemented":true,"id":2817,"linearizedBaseContracts":[2817],"name":"Strings","nameLocation":"305:7:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1426,"libraryName":{"id":1425,"name":"SafeCast","nameLocations":["325:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":6239,"src":"325:8:8"},"nodeType":"UsingForDirective","src":"319:21:8"},{"constant":true,"id":1429,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:8","nodeType":"VariableDeclaration","scope":2817,"src":"346:56:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1427,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1432,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:8","nodeType":"VariableDeclaration","scope":2817,"src":"408:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1430,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:8","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1468,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:8","nodeType":"VariableDeclaration","scope":2817,"src":"456:302:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:8","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:8","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:8","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:8","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:8","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:8","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:8","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:8","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:8","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:8","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:8","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:8","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:8","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:8","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:8","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:8","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:8","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:8","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:8","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:8","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:8","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:8","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1469,"nodeType":"StructuredDocumentation","src":"778:81:8","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1475,"name":"StringsInsufficientHexLength","nameLocation":"870:28:8","nodeType":"ErrorDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"value","nameLocation":"907:5:8","nodeType":"VariableDeclaration","scope":1475,"src":"899:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1473,"mutability":"mutable","name":"length","nameLocation":"922:6:8","nodeType":"VariableDeclaration","scope":1475,"src":"914:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:8"},"src":"864:66:8"},{"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"936:108:8","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1478,"name":"StringsInvalidChar","nameLocation":"1055:18:8","nodeType":"ErrorDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[],"src":"1073:2:8"},"src":"1049:27:8"},{"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"1082:84:8","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1481,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:8","nodeType":"ErrorDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"1204:2:8"},"src":"1171:36:8"},{"body":{"id":1528,"nodeType":"Block","src":"1379:563:8","statements":[{"id":1527,"nodeType":"UncheckedBlock","src":"1389:547:8","statements":[{"assignments":[1490],"declarations":[{"constant":false,"id":1490,"mutability":"mutable","name":"length","nameLocation":"1421:6:8","nodeType":"VariableDeclaration","scope":1527,"src":"1413:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1497,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1441:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1491,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"1430:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4474_$","typeString":"type(library Math)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:8","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4306,"src":"1430:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:8"},{"assignments":[1499],"declarations":[{"constant":false,"id":1499,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:8","nodeType":"VariableDeclaration","scope":1527,"src":"1465:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1498,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1504,"initialValue":{"arguments":[{"id":1502,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"1499:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1500,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:8"},{"assignments":[1506],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:8","nodeType":"VariableDeclaration","scope":1527,"src":"1520:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1507,"nodeType":"VariableDeclarationStatement","src":"1520:11:8"},{"AST":{"nativeSrc":"1570:69:8","nodeType":"YulBlock","src":"1570:69:8","statements":[{"nativeSrc":"1588:37:8","nodeType":"YulAssignment","src":"1588:37:8","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:8","nodeType":"YulIdentifier","src":"1603:6:8"},{"kind":"number","nativeSrc":"1611:4:8","nodeType":"YulLiteral","src":"1611:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:8","nodeType":"YulIdentifier","src":"1599:3:8"},"nativeSrc":"1599:17:8","nodeType":"YulFunctionCall","src":"1599:17:8"},{"name":"length","nativeSrc":"1618:6:8","nodeType":"YulIdentifier","src":"1618:6:8"}],"functionName":{"name":"add","nativeSrc":"1595:3:8","nodeType":"YulIdentifier","src":"1595:3:8"},"nativeSrc":"1595:30:8","nodeType":"YulFunctionCall","src":"1595:30:8"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:8","nodeType":"YulIdentifier","src":"1588:3:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1499,"isOffset":false,"isSlot":false,"src":"1603:6:8","valueSize":1},{"declaration":1490,"isOffset":false,"isSlot":false,"src":"1618:6:8","valueSize":1},{"declaration":1506,"isOffset":false,"isSlot":false,"src":"1588:3:8","valueSize":1}],"flags":["memory-safe"],"id":1508,"nodeType":"InlineAssembly","src":"1545:94:8"},{"body":{"id":1523,"nodeType":"Block","src":"1665:234:8","statements":[{"expression":{"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:8","subExpression":{"id":1510,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"1683:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1512,"nodeType":"ExpressionStatement","src":"1683:5:8"},{"AST":{"nativeSrc":"1731:86:8","nodeType":"YulBlock","src":"1731:86:8","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:8","nodeType":"YulIdentifier","src":"1761:3:8"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:8","nodeType":"YulIdentifier","src":"1775:5:8"},{"kind":"number","nativeSrc":"1782:2:8","nodeType":"YulLiteral","src":"1782:2:8","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:8","nodeType":"YulIdentifier","src":"1771:3:8"},"nativeSrc":"1771:14:8","nodeType":"YulFunctionCall","src":"1771:14:8"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:8","nodeType":"YulIdentifier","src":"1787:10:8"}],"functionName":{"name":"byte","nativeSrc":"1766:4:8","nodeType":"YulIdentifier","src":"1766:4:8"},"nativeSrc":"1766:32:8","nodeType":"YulFunctionCall","src":"1766:32:8"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:8","nodeType":"YulIdentifier","src":"1753:7:8"},"nativeSrc":"1753:46:8","nodeType":"YulFunctionCall","src":"1753:46:8"},"nativeSrc":"1753:46:8","nodeType":"YulExpressionStatement","src":"1753:46:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1429,"isOffset":false,"isSlot":false,"src":"1787:10:8","valueSize":1},{"declaration":1506,"isOffset":false,"isSlot":false,"src":"1761:3:8","valueSize":1},{"declaration":1484,"isOffset":false,"isSlot":false,"src":"1775:5:8","valueSize":1}],"flags":["memory-safe"],"id":1513,"nodeType":"InlineAssembly","src":"1706:111:8"},{"expression":{"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1834:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1517,"nodeType":"ExpressionStatement","src":"1834:11:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"1867:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1522,"nodeType":"IfStatement","src":"1863:21:8","trueBody":{"id":1521,"nodeType":"Break","src":"1879:5:8"}}]},"condition":{"hexValue":"74727565","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1524,"nodeType":"WhileStatement","src":"1652:247:8"},{"expression":{"id":1525,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"1919:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1488,"id":1526,"nodeType":"Return","src":"1912:13:8"}]}]},"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"1213:90:8","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1529,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:8","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"value","nameLocation":"1334:5:8","nodeType":"VariableDeclaration","scope":1529,"src":"1326:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:8"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1529,"src":"1364:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1486,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:8"},"scope":2817,"src":"1308:634:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1554,"nodeType":"Block","src":"2118:92:8","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2149:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:8","trueExpression":{"hexValue":"2d","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"2195:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1547,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"2180:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6383_$","typeString":"type(library SignedMath)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:8","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6382,"src":"2180:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1546,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"2171:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1537,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:8","typeDescriptions":{}}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:8","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:8","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1536,"id":1553,"nodeType":"Return","src":"2128:75:8"}]},"documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"1948:89:8","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:8","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"value","nameLocation":"2073:5:8","nodeType":"VariableDeclaration","scope":1555,"src":"2066:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1531,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:8"},"returnParameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1555,"src":"2103:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1534,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:8"},"scope":2817,"src":"2042:168:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"2389:100:8","statements":[{"id":1573,"nodeType":"UncheckedBlock","src":"2399:84:8","statements":[{"expression":{"arguments":[{"id":1564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2442:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2461:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1565,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"2449:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4474_$","typeString":"type(library Math)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:8","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4417,"src":"2449:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1563,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1575,1658,1678],"referencedDeclaration":1658,"src":"2430:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1562,"id":1572,"nodeType":"Return","src":"2423:49:8"}]}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"2216:94:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:8","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"value","nameLocation":"2344:5:8","nodeType":"VariableDeclaration","scope":1575,"src":"2336:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:8"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"2374:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1560,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:8"},"scope":2817,"src":"2315:174:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1657,"nodeType":"Block","src":"2702:435:8","statements":[{"assignments":[1586],"declarations":[{"constant":false,"id":1586,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:8","nodeType":"VariableDeclaration","scope":1657,"src":"2712:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1588,"initialValue":{"id":1587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2733:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:8"},{"assignments":[1590],"declarations":[{"constant":false,"id":1590,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:8","nodeType":"VariableDeclaration","scope":1657,"src":"2748:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1589,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1599,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1594,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"2784:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1591,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:8"},{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1600,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"2805:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1602,"indexExpression":{"hexValue":"30","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1605,"nodeType":"ExpressionStatement","src":"2805:15:8"},{"expression":{"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1606,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"2830:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1608,"indexExpression":{"hexValue":"31","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1611,"nodeType":"ExpressionStatement","src":"2830:15:8"},{"body":{"id":1640,"nodeType":"Block","src":"2900:95:8","statements":[{"expression":{"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1626,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"2914:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1628,"indexExpression":{"id":1627,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"2921:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1629,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"2926:10:8","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1633,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1630,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2937:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1635,"nodeType":"ExpressionStatement","src":"2914:40:8"},{"expression":{"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1636,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"2968:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1639,"nodeType":"ExpressionStatement","src":"2968:16:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"2888:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1641,"initializationExpression":{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"i","nameLocation":"2868:1:8","nodeType":"VariableDeclaration","scope":1641,"src":"2860:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1619,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1615,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"2876:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:8"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:8","subExpression":{"id":1623,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"2897:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1625,"nodeType":"ExpressionStatement","src":"2895:3:8"},"nodeType":"ForStatement","src":"2855:140:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1642,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"3008:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1651,"nodeType":"IfStatement","src":"3004:96:8","trueBody":{"id":1650,"nodeType":"Block","src":"3025:75:8","statements":[{"errorCall":{"arguments":[{"id":1646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"3075:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1647,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"3082:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1645,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"3046:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1649,"nodeType":"RevertStatement","src":"3039:50:8"}]}},{"expression":{"arguments":[{"id":1654,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"3123:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1652,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:8","typeDescriptions":{}}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1584,"id":1656,"nodeType":"Return","src":"3109:21:8"}]},"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"2495:112:8","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1658,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:8","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"value","nameLocation":"2641:5:8","nodeType":"VariableDeclaration","scope":1658,"src":"2633:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"length","nameLocation":"2656:6:8","nodeType":"VariableDeclaration","scope":1658,"src":"2648:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:8"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1658,"src":"2687:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1582,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:8"},"scope":2817,"src":"2612:525:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1677,"nodeType":"Block","src":"3369:75:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1671,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3414:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1669,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:8","typeDescriptions":{}}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:8","typeDescriptions":{}}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1674,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1432,"src":"3422:14:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1666,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1575,1658,1678],"referencedDeclaration":1658,"src":"3386:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1665,"id":1676,"nodeType":"Return","src":"3379:58:8"}]},"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"3143:148:8","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:8","nodeType":"FunctionDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1661,"mutability":"mutable","name":"addr","nameLocation":"3325:4:8","nodeType":"VariableDeclaration","scope":1678,"src":"3317:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:8"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"3354:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1663,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:8"},"scope":2817,"src":"3296:148:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"3701:642:8","statements":[{"assignments":[1687],"declarations":[{"constant":false,"id":1687,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:8","nodeType":"VariableDeclaration","scope":1742,"src":"3711:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1686,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1694,"initialValue":{"arguments":[{"arguments":[{"id":1691,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"3751:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1690,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1575,1658,1678],"referencedDeclaration":1678,"src":"3739:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1688,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:8","typeDescriptions":{}}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:8"},{"assignments":[1696],"declarations":[{"constant":false,"id":1696,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:8","nodeType":"VariableDeclaration","scope":1742,"src":"3842:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1697,"nodeType":"VariableDeclarationStatement","src":"3842:17:8"},{"AST":{"nativeSrc":"3894:78:8","nodeType":"YulBlock","src":"3894:78:8","statements":[{"nativeSrc":"3908:54:8","nodeType":"YulAssignment","src":"3908:54:8","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:8","nodeType":"YulLiteral","src":"3925:2:8","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:8","nodeType":"YulIdentifier","src":"3943:6:8"},{"kind":"number","nativeSrc":"3951:4:8","nodeType":"YulLiteral","src":"3951:4:8","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:8","nodeType":"YulIdentifier","src":"3939:3:8"},"nativeSrc":"3939:17:8","nodeType":"YulFunctionCall","src":"3939:17:8"},{"kind":"number","nativeSrc":"3958:2:8","nodeType":"YulLiteral","src":"3958:2:8","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:8","nodeType":"YulIdentifier","src":"3929:9:8"},"nativeSrc":"3929:32:8","nodeType":"YulFunctionCall","src":"3929:32:8"}],"functionName":{"name":"shr","nativeSrc":"3921:3:8","nodeType":"YulIdentifier","src":"3921:3:8"},"nativeSrc":"3921:41:8","nodeType":"YulFunctionCall","src":"3921:41:8"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:8","nodeType":"YulIdentifier","src":"3908:9:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1687,"isOffset":false,"isSlot":false,"src":"3943:6:8","valueSize":1},{"declaration":1696,"isOffset":false,"isSlot":false,"src":"3908:9:8","valueSize":1}],"flags":["memory-safe"],"id":1698,"nodeType":"InlineAssembly","src":"3869:103:8"},{"body":{"id":1735,"nodeType":"Block","src":"4015:291:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"4121:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:8","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1716,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"4150:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1718,"indexExpression":{"id":1717,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4157:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1714,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:8","typeDescriptions":{}}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1730,"nodeType":"IfStatement","src":"4117:150:8","trueBody":{"id":1729,"nodeType":"Block","src":"4167:100:8","statements":[{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1723,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"4235:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1725,"indexExpression":{"id":1724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4242:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1728,"nodeType":"ExpressionStatement","src":"4235:17:8"}]}},{"expression":{"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1731,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"4280:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ExpressionStatement","src":"4280:15:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1703,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4003:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1736,"initializationExpression":{"assignments":[1700],"declarations":[{"constant":false,"id":1700,"mutability":"mutable","name":"i","nameLocation":"3995:1:8","nodeType":"VariableDeclaration","scope":1736,"src":"3987:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1702,"initialValue":{"hexValue":"3431","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:8","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:8"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:8","subExpression":{"id":1706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"4012:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ExpressionStatement","src":"4010:3:8"},"nodeType":"ForStatement","src":"3982:324:8"},{"expression":{"arguments":[{"id":1739,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"4329:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1737,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:8","typeDescriptions":{}}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1685,"id":1741,"nodeType":"Return","src":"4315:21:8"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"3450:165:8","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:8","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"addr","nameLocation":"3657:4:8","nodeType":"VariableDeclaration","scope":1743,"src":"3649:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:8"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"3686:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1683,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:8"},"scope":2817,"src":"3620:723:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1779,"nodeType":"Block","src":"4498:104:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4521:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1753,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:8","typeDescriptions":{}}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:8","memberName":"length","nodeType":"MemberAccess","src":"4515:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1760,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"4540:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1758,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:8","typeDescriptions":{}}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:8","memberName":"length","nodeType":"MemberAccess","src":"4534:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4569:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1765,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:8","typeDescriptions":{}}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1764,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"4592:1:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1771,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:8","typeDescriptions":{}}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1770,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1752,"id":1778,"nodeType":"Return","src":"4508:87:8"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"4349:66:8","text":" @dev Returns true if the two strings are equal."},"id":1780,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:8","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"a","nameLocation":"4449:1:8","nodeType":"VariableDeclaration","scope":1780,"src":"4435:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"b","nameLocation":"4466:1:8","nodeType":"VariableDeclaration","scope":1780,"src":"4452:15:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1747,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:8"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1780,"src":"4492:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1750,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:8"},"scope":2817,"src":"4420:182:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1798,"nodeType":"Block","src":"4899:64:8","statements":[{"expression":{"arguments":[{"id":1789,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"4926:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1793,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"4942:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1791,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:8","typeDescriptions":{}}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:8","memberName":"length","nodeType":"MemberAccess","src":"4936:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1788,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1799,1830],"referencedDeclaration":1830,"src":"4916:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1787,"id":1797,"nodeType":"Return","src":"4909:47:8"}]},"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"4608:214:8","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:8","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"input","nameLocation":"4860:5:8","nodeType":"VariableDeclaration","scope":1799,"src":"4846:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1782,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:8"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"4890:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:8"},"scope":2817,"src":"4827:136:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1829,"nodeType":"Block","src":"5368:153:8","statements":[{"assignments":[1812,1814],"declarations":[{"constant":false,"id":1812,"mutability":"mutable","name":"success","nameLocation":"5384:7:8","nodeType":"VariableDeclaration","scope":1829,"src":"5379:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1811,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"value","nameLocation":"5401:5:8","nodeType":"VariableDeclaration","scope":1829,"src":"5393:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1820,"initialValue":{"arguments":[{"id":1816,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"5423:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1817,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"5430:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1818,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"5437:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1815,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1851,1888],"referencedDeclaration":1888,"src":"5410:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:8"},{"condition":{"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:8","subExpression":{"id":1821,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"5456:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1826,"nodeType":"IfStatement","src":"5451:41:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1823,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"5472:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1825,"nodeType":"RevertStatement","src":"5465:27:8"}},{"expression":{"id":1827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5509:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1810,"id":1828,"nodeType":"Return","src":"5502:12:8"}]},"documentation":{"id":1800,"nodeType":"StructuredDocumentation","src":"4969:294:8","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1830,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:8","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"input","nameLocation":"5301:5:8","nodeType":"VariableDeclaration","scope":1830,"src":"5287:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1801,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"begin","nameLocation":"5316:5:8","nodeType":"VariableDeclaration","scope":1830,"src":"5308:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"end","nameLocation":"5331:3:8","nodeType":"VariableDeclaration","scope":1830,"src":"5323:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:8"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1830,"src":"5359:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:8"},"scope":2817,"src":"5268:253:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1850,"nodeType":"Block","src":"5842:83:8","statements":[{"expression":{"arguments":[{"id":1841,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"5888:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1845,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"5904:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1843,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:8","typeDescriptions":{}}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:8","memberName":"length","nodeType":"MemberAccess","src":"5898:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1840,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"5859:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1839,"id":1849,"nodeType":"Return","src":"5852:66:8"}]},"documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"5527:215:8","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1851,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:8","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"input","nameLocation":"5783:5:8","nodeType":"VariableDeclaration","scope":1851,"src":"5769:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1832,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:8"},"returnParameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"success","nameLocation":"5818:7:8","nodeType":"VariableDeclaration","scope":1851,"src":"5813:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1835,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"value","nameLocation":"5835:5:8","nodeType":"VariableDeclaration","scope":1851,"src":"5827:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:8"},"scope":2817,"src":"5747:178:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1887,"nodeType":"Block","src":"6327:144:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1865,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6341:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1868,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6353:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1866,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:8","typeDescriptions":{}}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:8","memberName":"length","nodeType":"MemberAccess","src":"6347:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1872,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"6370:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1873,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6378:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1880,"nodeType":"IfStatement","src":"6337:63:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1864,"id":1879,"nodeType":"Return","src":"6383:17:8"}},{"expression":{"arguments":[{"id":1882,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6446:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1883,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"6453:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1884,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6460:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1881,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"6417:28:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1864,"id":1886,"nodeType":"Return","src":"6410:54:8"}]},"documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"5931:238:8","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1888,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:8","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"input","nameLocation":"6219:5:8","nodeType":"VariableDeclaration","scope":1888,"src":"6205:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1853,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"begin","nameLocation":"6242:5:8","nodeType":"VariableDeclaration","scope":1888,"src":"6234:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"end","nameLocation":"6265:3:8","nodeType":"VariableDeclaration","scope":1888,"src":"6257:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:8"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"success","nameLocation":"6303:7:8","nodeType":"VariableDeclaration","scope":1888,"src":"6298:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1860,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"value","nameLocation":"6320:5:8","nodeType":"VariableDeclaration","scope":1888,"src":"6312:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:8"},"scope":2817,"src":"6174:297:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1957,"nodeType":"Block","src":"6874:347:8","statements":[{"assignments":[1903],"declarations":[{"constant":false,"id":1903,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:8","nodeType":"VariableDeclaration","scope":1957,"src":"6884:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1902,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1908,"initialValue":{"arguments":[{"id":1906,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"6912:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1904,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:8","typeDescriptions":{}}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:8"},{"assignments":[1910],"declarations":[{"constant":false,"id":1910,"mutability":"mutable","name":"result","nameLocation":"6937:6:8","nodeType":"VariableDeclaration","scope":1957,"src":"6929:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1912,"initialValue":{"hexValue":"30","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:8"},{"body":{"id":1951,"nodeType":"Block","src":"6995:189:8","statements":[{"assignments":[1924],"declarations":[{"constant":false,"id":1924,"mutability":"mutable","name":"chr","nameLocation":"7015:3:8","nodeType":"VariableDeclaration","scope":1951,"src":"7009:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1923,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1934,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1929,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"7064:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1930,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"7072:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1928,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"7041:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1926,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:8","typeDescriptions":{}}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1925,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"7021:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1935,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"7094:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:8","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1942,"nodeType":"IfStatement","src":"7090:30:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1901,"id":1941,"nodeType":"Return","src":"7103:17:8"}},{"expression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"7134:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ExpressionStatement","src":"7134:12:8"},{"expression":{"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1947,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"7160:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1948,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"7170:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1950,"nodeType":"ExpressionStatement","src":"7160:13:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"6981:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1918,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"6985:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1952,"initializationExpression":{"assignments":[1914],"declarations":[{"constant":false,"id":1914,"mutability":"mutable","name":"i","nameLocation":"6970:1:8","nodeType":"VariableDeclaration","scope":1952,"src":"6962:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1916,"initialValue":{"id":1915,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"6974:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:8","subExpression":{"id":1920,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"6992:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1922,"nodeType":"ExpressionStatement","src":"6990:3:8"},"nodeType":"ForStatement","src":"6957:227:8"},{"expression":{"components":[{"hexValue":"74727565","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1954,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"7207:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1955,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1901,"id":1956,"nodeType":"Return","src":"7193:21:8"}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"6477:224:8","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:8","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"input","nameLocation":"6767:5:8","nodeType":"VariableDeclaration","scope":1958,"src":"6753:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1890,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"begin","nameLocation":"6790:5:8","nodeType":"VariableDeclaration","scope":1958,"src":"6782:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"end","nameLocation":"6813:3:8","nodeType":"VariableDeclaration","scope":1958,"src":"6805:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:8"},"returnParameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"success","nameLocation":"6850:7:8","nodeType":"VariableDeclaration","scope":1958,"src":"6845:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1897,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"value","nameLocation":"6867:5:8","nodeType":"VariableDeclaration","scope":1958,"src":"6859:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:8"},"scope":2817,"src":"6706:515:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1976,"nodeType":"Block","src":"7518:63:8","statements":[{"expression":{"arguments":[{"id":1967,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"7544:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1971,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"7560:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1969,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:8","typeDescriptions":{}}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:8","memberName":"length","nodeType":"MemberAccess","src":"7554:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1966,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1977,2008],"referencedDeclaration":2008,"src":"7535:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1965,"id":1975,"nodeType":"Return","src":"7528:46:8"}]},"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"7227:216:8","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:8","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"input","nameLocation":"7480:5:8","nodeType":"VariableDeclaration","scope":1977,"src":"7466:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1960,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:8"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"7510:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1963,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:8"},"scope":2817,"src":"7448:133:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2007,"nodeType":"Block","src":"7986:151:8","statements":[{"assignments":[1990,1992],"declarations":[{"constant":false,"id":1990,"mutability":"mutable","name":"success","nameLocation":"8002:7:8","nodeType":"VariableDeclaration","scope":2007,"src":"7997:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1989,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1992,"mutability":"mutable","name":"value","nameLocation":"8018:5:8","nodeType":"VariableDeclaration","scope":2007,"src":"8011:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1991,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1998,"initialValue":{"arguments":[{"id":1994,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"8039:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1995,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"8046:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1996,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"8053:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2029,2071],"referencedDeclaration":2071,"src":"8027:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:8"},{"condition":{"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:8","subExpression":{"id":1999,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"8072:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2004,"nodeType":"IfStatement","src":"8067:41:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"8088:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"8081:27:8"}},{"expression":{"id":2005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"8125:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1988,"id":2006,"nodeType":"Return","src":"8118:12:8"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"7587:296:8","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2008,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:8","nodeType":"FunctionDefinition","parameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"input","nameLocation":"7920:5:8","nodeType":"VariableDeclaration","scope":2008,"src":"7906:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"begin","nameLocation":"7935:5:8","nodeType":"VariableDeclaration","scope":2008,"src":"7927:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"end","nameLocation":"7950:3:8","nodeType":"VariableDeclaration","scope":2008,"src":"7942:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1983,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:8"},"returnParameters":{"id":1988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2008,"src":"7978:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1986,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:8"},"scope":2817,"src":"7888:249:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"8528:82:8","statements":[{"expression":{"arguments":[{"id":2019,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"8573:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2023,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"8589:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2021,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:8","typeDescriptions":{}}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:8","memberName":"length","nodeType":"MemberAccess","src":"8583:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2018,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"8545:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2017,"id":2027,"nodeType":"Return","src":"8538:65:8"}]},"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"8143:287:8","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:8","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"input","nameLocation":"8470:5:8","nodeType":"VariableDeclaration","scope":2029,"src":"8456:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2010,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:8"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"success","nameLocation":"8505:7:8","nodeType":"VariableDeclaration","scope":2029,"src":"8500:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"value","nameLocation":"8521:5:8","nodeType":"VariableDeclaration","scope":2029,"src":"8514:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2015,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:8"},"scope":2817,"src":"8435:175:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2034,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:8","nodeType":"VariableDeclaration","scope":2817,"src":"8616:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2030,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2070,"nodeType":"Block","src":"9132:143:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2048,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9146:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2051,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"9158:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2049,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:8","typeDescriptions":{}}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:8","memberName":"length","nodeType":"MemberAccess","src":"9152:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9175:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2056,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9183:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2063,"nodeType":"IfStatement","src":"9142:63:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2047,"id":2062,"nodeType":"Return","src":"9188:17:8"}},{"expression":{"arguments":[{"id":2065,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"9250:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2066,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"9257:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2067,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"9264:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2064,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"9222:27:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2047,"id":2069,"nodeType":"Return","src":"9215:53:8"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"8673:303:8","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2071,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:8","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"input","nameLocation":"9025:5:8","nodeType":"VariableDeclaration","scope":2071,"src":"9011:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2036,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"begin","nameLocation":"9048:5:8","nodeType":"VariableDeclaration","scope":2071,"src":"9040:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"end","nameLocation":"9071:3:8","nodeType":"VariableDeclaration","scope":2071,"src":"9063:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:8"},"returnParameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"success","nameLocation":"9109:7:8","nodeType":"VariableDeclaration","scope":2071,"src":"9104:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2043,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"value","nameLocation":"9125:5:8","nodeType":"VariableDeclaration","scope":2071,"src":"9118:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2045,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:8"},"scope":2817,"src":"8981:294:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2191,"nodeType":"Block","src":"9675:812:8","statements":[{"assignments":[2086],"declarations":[{"constant":false,"id":2086,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:8","nodeType":"VariableDeclaration","scope":2191,"src":"9685:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2085,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2091,"initialValue":{"arguments":[{"id":2089,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"9713:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2087,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:8","typeDescriptions":{}}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:8"},{"assignments":[2093],"declarations":[{"constant":false,"id":2093,"mutability":"mutable","name":"sign","nameLocation":"9783:4:8","nodeType":"VariableDeclaration","scope":2191,"src":"9776:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2092,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2109,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9790:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2095,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"9799:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2104,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"9847:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2105,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9855:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2103,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"9824:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2101,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:8","typeDescriptions":{}}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:8","trueExpression":{"arguments":[{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2097,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:8","typeDescriptions":{}}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:8"},{"assignments":[2111],"declarations":[{"constant":false,"id":2111,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:8","nodeType":"VariableDeclaration","scope":2191,"src":"9943:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2110,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2118,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2112,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"9963:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2113,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:8","typeDescriptions":{}}},"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:8"},{"assignments":[2120],"declarations":[{"constant":false,"id":2120,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:8","nodeType":"VariableDeclaration","scope":2191,"src":"9992:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2119,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2127,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"10012:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2122,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:8","typeDescriptions":{}}},"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:8"},{"assignments":[2129],"declarations":[{"constant":false,"id":2129,"mutability":"mutable","name":"offset","nameLocation":"10049:6:8","nodeType":"VariableDeclaration","scope":2191,"src":"10041:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2136,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"10059:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2131,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10075:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"10058:37:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:8"},{"assignments":[2138,2140],"declarations":[{"constant":false,"id":2138,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:8","nodeType":"VariableDeclaration","scope":2191,"src":"10109:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2137,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:8","nodeType":"VariableDeclaration","scope":2191,"src":"10126:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2139,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2148,"initialValue":{"arguments":[{"id":2142,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"10159:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2143,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"10166:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2144,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"10174:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2146,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"10182:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2141,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1851,1888],"referencedDeclaration":1888,"src":"10146:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:8"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2149,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"10201:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"10215:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2151,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"10226:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"10343:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2170,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10357:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"10373:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2173,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"10385:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2084,"id":2188,"nodeType":"Return","src":"10463:17:8"},"id":2189,"nodeType":"IfStatement","src":"10339:141:8","trueBody":{"id":2184,"nodeType":"Block","src":"10401:56:8","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2178,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2177,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:8","memberName":"min","nodeType":"MemberAccess","src":"10429:16:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2084,"id":2183,"nodeType":"Return","src":"10415:31:8"}]}},"id":2190,"nodeType":"IfStatement","src":"10197:283:8","trueBody":{"id":2168,"nodeType":"Block","src":"10242:91:8","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2155,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"10270:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2163,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"10312:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2161,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:8","typeDescriptions":{}}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:8","trueExpression":{"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:8","subExpression":{"arguments":[{"id":2158,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"10293:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2156,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:8","typeDescriptions":{}}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2084,"id":2167,"nodeType":"Return","src":"10256:66:8"}]}}]},"documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"9281:223:8","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2192,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:8","nodeType":"FunctionDefinition","parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"input","nameLocation":"9569:5:8","nodeType":"VariableDeclaration","scope":2192,"src":"9555:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2073,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2076,"mutability":"mutable","name":"begin","nameLocation":"9592:5:8","nodeType":"VariableDeclaration","scope":2192,"src":"9584:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2078,"mutability":"mutable","name":"end","nameLocation":"9615:3:8","nodeType":"VariableDeclaration","scope":2192,"src":"9607:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2077,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:8"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"success","nameLocation":"9652:7:8","nodeType":"VariableDeclaration","scope":2192,"src":"9647:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2080,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2083,"mutability":"mutable","name":"value","nameLocation":"9668:5:8","nodeType":"VariableDeclaration","scope":2192,"src":"9661:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2082,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:8"},"scope":2817,"src":"9509:978:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2210,"nodeType":"Block","src":"10832:67:8","statements":[{"expression":{"arguments":[{"id":2201,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"10862:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2205,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2195,"src":"10878:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2203,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:8","typeDescriptions":{}}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:8","memberName":"length","nodeType":"MemberAccess","src":"10872:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2200,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2211,2242],"referencedDeclaration":2242,"src":"10849:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2199,"id":2209,"nodeType":"Return","src":"10842:50:8"}]},"documentation":{"id":2193,"nodeType":"StructuredDocumentation","src":"10493:259:8","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2211,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:8","nodeType":"FunctionDefinition","parameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"input","nameLocation":"10793:5:8","nodeType":"VariableDeclaration","scope":2211,"src":"10779:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2194,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:8"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2211,"src":"10823:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:8"},"scope":2817,"src":"10757:142:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2241,"nodeType":"Block","src":"11320:156:8","statements":[{"assignments":[2224,2226],"declarations":[{"constant":false,"id":2224,"mutability":"mutable","name":"success","nameLocation":"11336:7:8","nodeType":"VariableDeclaration","scope":2241,"src":"11331:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2223,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"value","nameLocation":"11353:5:8","nodeType":"VariableDeclaration","scope":2241,"src":"11345:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2232,"initialValue":{"arguments":[{"id":2228,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"11378:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2229,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"11385:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2230,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"11392:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2227,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2263,2300],"referencedDeclaration":2300,"src":"11362:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:8"},{"condition":{"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:8","subExpression":{"id":2233,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"11411:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2238,"nodeType":"IfStatement","src":"11406:41:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2235,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"11427:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2237,"nodeType":"RevertStatement","src":"11420:27:8"}},{"expression":{"id":2239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"11464:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2222,"id":2240,"nodeType":"Return","src":"11457:12:8"}]},"documentation":{"id":2212,"nodeType":"StructuredDocumentation","src":"10905:307:8","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:8","nodeType":"FunctionDefinition","parameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"input","nameLocation":"11253:5:8","nodeType":"VariableDeclaration","scope":2242,"src":"11239:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2213,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2216,"mutability":"mutable","name":"begin","nameLocation":"11268:5:8","nodeType":"VariableDeclaration","scope":2242,"src":"11260:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"end","nameLocation":"11283:3:8","nodeType":"VariableDeclaration","scope":2242,"src":"11275:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:8"},"returnParameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2242,"src":"11311:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:8"},"scope":2817,"src":"11217:259:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2262,"nodeType":"Block","src":"11803:86:8","statements":[{"expression":{"arguments":[{"id":2253,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"11852:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2257,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"11868:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2255,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:8","typeDescriptions":{}}},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:8","memberName":"length","nodeType":"MemberAccess","src":"11862:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2252,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"11820:31:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2251,"id":2261,"nodeType":"Return","src":"11813:69:8"}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"11482:218:8","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:8","nodeType":"FunctionDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"input","nameLocation":"11744:5:8","nodeType":"VariableDeclaration","scope":2263,"src":"11730:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2244,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:8"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"success","nameLocation":"11779:7:8","nodeType":"VariableDeclaration","scope":2263,"src":"11774:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2247,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"value","nameLocation":"11796:5:8","nodeType":"VariableDeclaration","scope":2263,"src":"11788:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:8"},"scope":2817,"src":"11705:184:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2299,"nodeType":"Block","src":"12297:147:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2277,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"12311:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2280,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"12323:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2278,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:8","typeDescriptions":{}}},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:8","memberName":"length","nodeType":"MemberAccess","src":"12317:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2284,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"12340:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2285,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"12348:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2292,"nodeType":"IfStatement","src":"12307:63:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2276,"id":2291,"nodeType":"Return","src":"12353:17:8"}},{"expression":{"arguments":[{"id":2294,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"12419:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2295,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"12426:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2296,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"12433:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2293,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"12387:31:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2276,"id":2298,"nodeType":"Return","src":"12380:57:8"}]},"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"11895:241:8","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2300,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:8","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"input","nameLocation":"12189:5:8","nodeType":"VariableDeclaration","scope":2300,"src":"12175:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2265,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"begin","nameLocation":"12212:5:8","nodeType":"VariableDeclaration","scope":2300,"src":"12204:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"end","nameLocation":"12235:3:8","nodeType":"VariableDeclaration","scope":2300,"src":"12227:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:8"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"success","nameLocation":"12273:7:8","nodeType":"VariableDeclaration","scope":2300,"src":"12268:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2272,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"value","nameLocation":"12290:5:8","nodeType":"VariableDeclaration","scope":2300,"src":"12282:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:8"},"scope":2817,"src":"12141:303:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2402,"nodeType":"Block","src":"12853:881:8","statements":[{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:8","nodeType":"VariableDeclaration","scope":2402,"src":"12863:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2314,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2320,"initialValue":{"arguments":[{"id":2318,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"12891:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2316,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:8","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:8"},{"assignments":[2322],"declarations":[{"constant":false,"id":2322,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:8","nodeType":"VariableDeclaration","scope":2402,"src":"12945:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2321,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2342,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"12963:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"12969:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2332,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13013:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2333,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"13021:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2331,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"12990:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2329,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:8","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2336,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:8","typeDescriptions":{}}},"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:8"},{"assignments":[2344],"declarations":[{"constant":false,"id":2344,"mutability":"mutable","name":"offset","nameLocation":"13133:6:8","nodeType":"VariableDeclaration","scope":2402,"src":"13125:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2350,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2345,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"13142:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"13142:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:8"},{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"result","nameLocation":"13183:6:8","nodeType":"VariableDeclaration","scope":2402,"src":"13175:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2354,"initialValue":{"hexValue":"30","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:8"},{"body":{"id":2396,"nodeType":"Block","src":"13250:447:8","statements":[{"assignments":[2368],"declarations":[{"constant":false,"id":2368,"mutability":"mutable","name":"chr","nameLocation":"13270:3:8","nodeType":"VariableDeclaration","scope":2396,"src":"13264:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2367,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2378,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2373,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13319:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"13327:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2372,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"13296:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2370,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:8","typeDescriptions":{}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2369,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"13276:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"13349:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:8","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2386,"nodeType":"IfStatement","src":"13345:31:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2313,"id":2385,"nodeType":"Return","src":"13359:17:8"}},{"expression":{"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2387,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"13390:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2390,"nodeType":"ExpressionStatement","src":"13390:12:8"},{"id":2395,"nodeType":"UncheckedBlock","src":"13416:271:8","statements":[{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"13659:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2392,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"13669:3:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2394,"nodeType":"ExpressionStatement","src":"13659:13:8"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"13236:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2362,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"13240:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2397,"initializationExpression":{"assignments":[2356],"declarations":[{"constant":false,"id":2356,"mutability":"mutable","name":"i","nameLocation":"13216:1:8","nodeType":"VariableDeclaration","scope":2397,"src":"13208:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2355,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2360,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"13220:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2358,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"13228:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:8","subExpression":{"id":2364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"13247:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2366,"nodeType":"ExpressionStatement","src":"13245:3:8"},"nodeType":"ForStatement","src":"13203:494:8"},{"expression":{"components":[{"hexValue":"74727565","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"13720:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2313,"id":2401,"nodeType":"Return","src":"13706:21:8"}]},"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"12450:227:8","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2403,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:8","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2303,"mutability":"mutable","name":"input","nameLocation":"12746:5:8","nodeType":"VariableDeclaration","scope":2403,"src":"12732:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2302,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"begin","nameLocation":"12769:5:8","nodeType":"VariableDeclaration","scope":2403,"src":"12761:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"end","nameLocation":"12792:3:8","nodeType":"VariableDeclaration","scope":2403,"src":"12784:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:8"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"success","nameLocation":"12829:7:8","nodeType":"VariableDeclaration","scope":2403,"src":"12824:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2309,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"value","nameLocation":"12846:5:8","nodeType":"VariableDeclaration","scope":2403,"src":"12838:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:8"},"scope":2817,"src":"12682:1052:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2421,"nodeType":"Block","src":"14032:67:8","statements":[{"expression":{"arguments":[{"id":2412,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"14062:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2416,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"14078:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2414,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:8","typeDescriptions":{}}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:8","memberName":"length","nodeType":"MemberAccess","src":"14072:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2411,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2422,2453],"referencedDeclaration":2453,"src":"14049:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2410,"id":2420,"nodeType":"Return","src":"14042:50:8"}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"13740:212:8","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2422,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:8","nodeType":"FunctionDefinition","parameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"input","nameLocation":"13993:5:8","nodeType":"VariableDeclaration","scope":2422,"src":"13979:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2405,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:8"},"returnParameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"14023:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:8"},"scope":2817,"src":"13957:142:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2452,"nodeType":"Block","src":"14472:165:8","statements":[{"assignments":[2435,2437],"declarations":[{"constant":false,"id":2435,"mutability":"mutable","name":"success","nameLocation":"14488:7:8","nodeType":"VariableDeclaration","scope":2452,"src":"14483:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2434,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"value","nameLocation":"14505:5:8","nodeType":"VariableDeclaration","scope":2452,"src":"14497:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2443,"initialValue":{"arguments":[{"id":2439,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"14530:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2440,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"14537:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2441,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"14544:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2438,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2474,2578],"referencedDeclaration":2578,"src":"14514:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:8"},{"condition":{"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:8","subExpression":{"id":2444,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"14563:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2449,"nodeType":"IfStatement","src":"14558:50:8","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2446,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"14579:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2448,"nodeType":"RevertStatement","src":"14572:36:8"}},{"expression":{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"14625:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2433,"id":2451,"nodeType":"Return","src":"14618:12:8"}]},"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"14105:259:8","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2453,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:8","nodeType":"FunctionDefinition","parameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"input","nameLocation":"14405:5:8","nodeType":"VariableDeclaration","scope":2453,"src":"14391:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2424,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"begin","nameLocation":"14420:5:8","nodeType":"VariableDeclaration","scope":2453,"src":"14412:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2429,"mutability":"mutable","name":"end","nameLocation":"14435:3:8","nodeType":"VariableDeclaration","scope":2453,"src":"14427:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:8"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2453,"src":"14463:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2431,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:8"},"scope":2817,"src":"14369:268:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2473,"nodeType":"Block","src":"14944:70:8","statements":[{"expression":{"arguments":[{"id":2464,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"14977:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2468,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"14993:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2466,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:8","typeDescriptions":{}}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:8","memberName":"length","nodeType":"MemberAccess","src":"14987:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2463,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2474,2578],"referencedDeclaration":2578,"src":"14961:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2462,"id":2472,"nodeType":"Return","src":"14954:53:8"}]},"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"14643:198:8","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2474,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:8","nodeType":"FunctionDefinition","parameters":{"id":2457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"input","nameLocation":"14885:5:8","nodeType":"VariableDeclaration","scope":2474,"src":"14871:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2455,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:8"},"returnParameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"success","nameLocation":"14920:7:8","nodeType":"VariableDeclaration","scope":2474,"src":"14915:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2458,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2461,"mutability":"mutable","name":"value","nameLocation":"14937:5:8","nodeType":"VariableDeclaration","scope":2474,"src":"14929:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:8"},"scope":2817,"src":"14846:168:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2577,"nodeType":"Block","src":"15407:733:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"15421:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2491,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"15433:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2489,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:8","typeDescriptions":{}}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:8","memberName":"length","nodeType":"MemberAccess","src":"15427:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2495,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"15450:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2496,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"15458:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2506,"nodeType":"IfStatement","src":"15417:72:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2500,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:8","typeDescriptions":{}}},"id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2487,"id":2505,"nodeType":"Return","src":"15463:26:8"}},{"assignments":[2508],"declarations":[{"constant":false,"id":2508,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:8","nodeType":"VariableDeclaration","scope":2577,"src":"15500:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2507,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2531,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"15518:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"15524:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2514,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2520,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"15574:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2518,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:8","typeDescriptions":{}}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2522,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"15582:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2517,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"15545:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2515,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:8","typeDescriptions":{}}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2525,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:8","typeDescriptions":{}}},"id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:8"},{"assignments":[2533],"declarations":[{"constant":false,"id":2533,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:8","nodeType":"VariableDeclaration","scope":2577,"src":"15686:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2541,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:8","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2535,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"15716:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:8","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"15716:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2542,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"15803:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2543,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"15809:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2545,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"15818:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2575,"nodeType":"Block","src":"16083:51:8","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:8","typeDescriptions":{}}},"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2487,"id":2574,"nodeType":"Return","src":"16097:26:8"}]},"id":2576,"nodeType":"IfStatement","src":"15799:335:8","trueBody":{"id":2567,"nodeType":"Block","src":"15834:243:8","statements":[{"assignments":[2548,2550],"declarations":[{"constant":false,"id":2548,"mutability":"mutable","name":"s","nameLocation":"15955:1:8","nodeType":"VariableDeclaration","scope":2567,"src":"15950:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2547,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"v","nameLocation":"15966:1:8","nodeType":"VariableDeclaration","scope":2567,"src":"15958:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2556,"initialValue":{"arguments":[{"id":2552,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"16003:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2553,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"16010:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2554,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"16017:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2551,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"15971:31:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:8"},{"expression":{"components":[{"id":2557,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"16043:1:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2562,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"16062:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2560,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:8","typeDescriptions":{}}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2558,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:8","typeDescriptions":{}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2487,"id":2566,"nodeType":"Return","src":"16035:31:8"}]}}]},"documentation":{"id":2475,"nodeType":"StructuredDocumentation","src":"15020:226:8","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2578,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:8","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"input","nameLocation":"15299:5:8","nodeType":"VariableDeclaration","scope":2578,"src":"15285:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2476,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2479,"mutability":"mutable","name":"begin","nameLocation":"15322:5:8","nodeType":"VariableDeclaration","scope":2578,"src":"15314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2478,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"end","nameLocation":"15345:3:8","nodeType":"VariableDeclaration","scope":2578,"src":"15337:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:8"},"returnParameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"success","nameLocation":"15383:7:8","nodeType":"VariableDeclaration","scope":2578,"src":"15378:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2483,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2486,"mutability":"mutable","name":"value","nameLocation":"15400:5:8","nodeType":"VariableDeclaration","scope":2578,"src":"15392:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:8"},"scope":2817,"src":"15251:889:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2637,"nodeType":"Block","src":"16209:461:8","statements":[{"assignments":[2586],"declarations":[{"constant":false,"id":2586,"mutability":"mutable","name":"value","nameLocation":"16225:5:8","nodeType":"VariableDeclaration","scope":2637,"src":"16219:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2585,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2591,"initialValue":{"arguments":[{"id":2589,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"16239:3:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2587,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:8","typeDescriptions":{}}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:8"},{"id":2634,"nodeType":"UncheckedBlock","src":"16403:238:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16431:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:8","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16445:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:8","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16491:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16505:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:8","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16552:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16566:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:8","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2626,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2625,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:8","memberName":"max","nodeType":"MemberAccess","src":"16615:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2584,"id":2630,"nodeType":"Return","src":"16608:22:8"},"id":2631,"nodeType":"IfStatement","src":"16548:82:8","trueBody":{"expression":{"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16578:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:8","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2624,"nodeType":"ExpressionStatement","src":"16578:11:8"}},"id":2632,"nodeType":"IfStatement","src":"16487:143:8","trueBody":{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16518:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:8","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2613,"nodeType":"ExpressionStatement","src":"16518:11:8"}},"id":2633,"nodeType":"IfStatement","src":"16427:203:8","trueBody":{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16457:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2602,"nodeType":"ExpressionStatement","src":"16457:11:8"}}]},{"expression":{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16658:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2584,"id":2636,"nodeType":"Return","src":"16651:12:8"}]},"id":2638,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:8","nodeType":"FunctionDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"chr","nameLocation":"16175:3:8","nodeType":"VariableDeclaration","scope":2638,"src":"16168:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2579,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:8"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2638,"src":"16202:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2582,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:8"},"scope":2817,"src":"16146:524:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2803,"nodeType":"Block","src":"17336:1331:8","statements":[{"assignments":[2647],"declarations":[{"constant":false,"id":2647,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:8","nodeType":"VariableDeclaration","scope":2803,"src":"17346:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2646,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2652,"initialValue":{"arguments":[{"id":2650,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"17374:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2648,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:8","typeDescriptions":{}}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:8"},{"assignments":[2654],"declarations":[{"constant":false,"id":2654,"mutability":"mutable","name":"output","nameLocation":"17403:6:8","nodeType":"VariableDeclaration","scope":2803,"src":"17390:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2653,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2662,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2658,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"17426:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:8","memberName":"length","nodeType":"MemberAccess","src":"17426:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2655,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:8"},{"assignments":[2664],"declarations":[{"constant":false,"id":2664,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:8","nodeType":"VariableDeclaration","scope":2803,"src":"17473:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2666,"initialValue":{"hexValue":"30","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:8"},{"body":{"id":2795,"nodeType":"Block","src":"17548:854:8","statements":[{"assignments":[2678],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"char","nameLocation":"17569:4:8","nodeType":"VariableDeclaration","scope":2795,"src":"17562:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2677,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2686,"initialValue":{"arguments":[{"arguments":[{"id":2682,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"17606:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2683,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"17614:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2681,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"17583:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2679,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:8","typeDescriptions":{}}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:8"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2687,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17637:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2691,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"17672:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2689,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:8","typeDescriptions":{}}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2793,"nodeType":"Block","src":"18330:62:8","statements":[{"expression":{"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2786,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"18348:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2789,"indexExpression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:8","subExpression":{"id":2787,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"18355:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2790,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"18373:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2792,"nodeType":"ExpressionStatement","src":"18348:29:8"}]},"id":2794,"nodeType":"IfStatement","src":"17631:761:8","trueBody":{"id":2785,"nodeType":"Block","src":"17687:637:8","statements":[{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2700,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"17705:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2703,"indexExpression":{"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:8","subExpression":{"id":2701,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"17712:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2706,"nodeType":"ExpressionStatement","src":"17705:29:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2707,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"17756:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"17825:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:8","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"17894:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"17963:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:8","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2747,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"18032:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:8","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2757,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"18101:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:8","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2767,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"18171:4:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2778,"nodeType":"IfStatement","src":"18167:143:8","trueBody":{"id":2777,"nodeType":"Block","src":"18185:125:8","statements":[{"expression":{"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2770,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"18263:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2773,"indexExpression":{"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:8","subExpression":{"id":2771,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"18270:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2776,"nodeType":"ExpressionStatement","src":"18263:28:8"}]}},"id":2779,"nodeType":"IfStatement","src":"18097:213:8","trueBody":{"expression":{"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2760,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"18115:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2763,"indexExpression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:8","subExpression":{"id":2761,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"18122:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2766,"nodeType":"ExpressionStatement","src":"18115:29:8"}},"id":2780,"nodeType":"IfStatement","src":"18028:282:8","trueBody":{"expression":{"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2750,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"18046:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2753,"indexExpression":{"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:8","subExpression":{"id":2751,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"18053:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2756,"nodeType":"ExpressionStatement","src":"18046:28:8"}},"id":2781,"nodeType":"IfStatement","src":"17959:351:8","trueBody":{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2740,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"17977:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2743,"indexExpression":{"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:8","subExpression":{"id":2741,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"17984:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2746,"nodeType":"ExpressionStatement","src":"17977:28:8"}},"id":2782,"nodeType":"IfStatement","src":"17890:420:8","trueBody":{"expression":{"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2730,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"17908:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2733,"indexExpression":{"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:8","subExpression":{"id":2731,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"17915:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2736,"nodeType":"ExpressionStatement","src":"17908:28:8"}},"id":2783,"nodeType":"IfStatement","src":"17821:489:8","trueBody":{"expression":{"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2720,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"17839:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2723,"indexExpression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:8","subExpression":{"id":2721,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"17846:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2726,"nodeType":"ExpressionStatement","src":"17839:28:8"}},"id":2784,"nodeType":"IfStatement","src":"17752:558:8","trueBody":{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2710,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"17770:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2713,"indexExpression":{"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:8","subExpression":{"id":2711,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"17777:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2716,"nodeType":"ExpressionStatement","src":"17770:28:8"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"17524:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2671,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"17528:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:8","memberName":"length","nodeType":"MemberAccess","src":"17528:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2796,"initializationExpression":{"assignments":[2668],"declarations":[{"constant":false,"id":2668,"mutability":"mutable","name":"i","nameLocation":"17521:1:8","nodeType":"VariableDeclaration","scope":2796,"src":"17513:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2669,"nodeType":"VariableDeclarationStatement","src":"17513:9:8"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:8","subExpression":{"id":2674,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"17545:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"nodeType":"ExpressionStatement","src":"17543:3:8"},"nodeType":"ForStatement","src":"17508:894:8"},{"AST":{"nativeSrc":"18500:129:8","nodeType":"YulBlock","src":"18500:129:8","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:8","nodeType":"YulIdentifier","src":"18521:6:8"},{"name":"outputLength","nativeSrc":"18529:12:8","nodeType":"YulIdentifier","src":"18529:12:8"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:8","nodeType":"YulIdentifier","src":"18514:6:8"},"nativeSrc":"18514:28:8","nodeType":"YulFunctionCall","src":"18514:28:8"},"nativeSrc":"18514:28:8","nodeType":"YulExpressionStatement","src":"18514:28:8"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:8","nodeType":"YulLiteral","src":"18562:4:8","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:8","nodeType":"YulIdentifier","src":"18572:6:8"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:8","nodeType":"YulLiteral","src":"18584:1:8","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:8","nodeType":"YulLiteral","src":"18591:1:8","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:8","nodeType":"YulIdentifier","src":"18598:12:8"},{"kind":"number","nativeSrc":"18612:2:8","nodeType":"YulLiteral","src":"18612:2:8","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:8","nodeType":"YulIdentifier","src":"18594:3:8"},"nativeSrc":"18594:21:8","nodeType":"YulFunctionCall","src":"18594:21:8"}],"functionName":{"name":"shr","nativeSrc":"18587:3:8","nodeType":"YulIdentifier","src":"18587:3:8"},"nativeSrc":"18587:29:8","nodeType":"YulFunctionCall","src":"18587:29:8"}],"functionName":{"name":"shl","nativeSrc":"18580:3:8","nodeType":"YulIdentifier","src":"18580:3:8"},"nativeSrc":"18580:37:8","nodeType":"YulFunctionCall","src":"18580:37:8"}],"functionName":{"name":"add","nativeSrc":"18568:3:8","nodeType":"YulIdentifier","src":"18568:3:8"},"nativeSrc":"18568:50:8","nodeType":"YulFunctionCall","src":"18568:50:8"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:8","nodeType":"YulIdentifier","src":"18555:6:8"},"nativeSrc":"18555:64:8","nodeType":"YulFunctionCall","src":"18555:64:8"},"nativeSrc":"18555:64:8","nodeType":"YulExpressionStatement","src":"18555:64:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":2654,"isOffset":false,"isSlot":false,"src":"18521:6:8","valueSize":1},{"declaration":2654,"isOffset":false,"isSlot":false,"src":"18572:6:8","valueSize":1},{"declaration":2664,"isOffset":false,"isSlot":false,"src":"18529:12:8","valueSize":1},{"declaration":2664,"isOffset":false,"isSlot":false,"src":"18598:12:8","valueSize":1}],"flags":["memory-safe"],"id":2797,"nodeType":"InlineAssembly","src":"18475:154:8"},{"expression":{"arguments":[{"id":2800,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"18653:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2798,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:8","typeDescriptions":{}}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2645,"id":2802,"nodeType":"Return","src":"18639:21:8"}]},"documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"16676:576:8","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2804,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:8","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"input","nameLocation":"17291:5:8","nodeType":"VariableDeclaration","scope":2804,"src":"17277:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2640,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:8"},"returnParameters":{"id":2645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2804,"src":"17321:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2643,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:8"},"scope":2817,"src":"17257:1410:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2815,"nodeType":"Block","src":"19052:225:8","statements":[{"AST":{"nativeSrc":"19201:70:8","nodeType":"YulBlock","src":"19201:70:8","statements":[{"nativeSrc":"19215:46:8","nodeType":"YulAssignment","src":"19215:46:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:8","nodeType":"YulIdentifier","src":"19238:6:8"},{"kind":"number","nativeSrc":"19246:4:8","nodeType":"YulLiteral","src":"19246:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:8","nodeType":"YulIdentifier","src":"19234:3:8"},"nativeSrc":"19234:17:8","nodeType":"YulFunctionCall","src":"19234:17:8"},{"name":"offset","nativeSrc":"19253:6:8","nodeType":"YulIdentifier","src":"19253:6:8"}],"functionName":{"name":"add","nativeSrc":"19230:3:8","nodeType":"YulIdentifier","src":"19230:3:8"},"nativeSrc":"19230:30:8","nodeType":"YulFunctionCall","src":"19230:30:8"}],"functionName":{"name":"mload","nativeSrc":"19224:5:8","nodeType":"YulIdentifier","src":"19224:5:8"},"nativeSrc":"19224:37:8","nodeType":"YulFunctionCall","src":"19224:37:8"},"variableNames":[{"name":"value","nativeSrc":"19215:5:8","nodeType":"YulIdentifier","src":"19215:5:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2807,"isOffset":false,"isSlot":false,"src":"19238:6:8","valueSize":1},{"declaration":2809,"isOffset":false,"isSlot":false,"src":"19253:6:8","valueSize":1},{"declaration":2812,"isOffset":false,"isSlot":false,"src":"19215:5:8","valueSize":1}],"flags":["memory-safe"],"id":2814,"nodeType":"InlineAssembly","src":"19176:95:8"}]},"documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"18673:268:8","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:8","nodeType":"FunctionDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2807,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:8","nodeType":"VariableDeclaration","scope":2816,"src":"18978:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2806,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2809,"mutability":"mutable","name":"offset","nameLocation":"19007:6:8","nodeType":"VariableDeclaration","scope":2816,"src":"18999:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:8"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"value","nameLocation":"19045:5:8","nodeType":"VariableDeclaration","scope":2816,"src":"19037:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:8"},"scope":2817,"src":"18946:331:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2818,"src":"297:18982:8","usedErrors":[1475,1478,1481],"usedEvents":[]}],"src":"101:19179:8"},"id":8},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2841],"IERC165":[2853]},"id":2842,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2819,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2842,"sourceUnit":2854,"src":"140:38:9","symbolAliases":[{"foreign":{"id":2820,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"148:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2823,"name":"IERC165","nameLocations":["688:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2853,"src":"688:7:9"},"id":2824,"nodeType":"InheritanceSpecifier","src":"688:7:9"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2822,"nodeType":"StructuredDocumentation","src":"180:479:9","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2841,"linearizedBaseContracts":[2841,2853],"name":"ERC165","nameLocation":"678:6:9","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2852],"body":{"id":2839,"nodeType":"Block","src":"812:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2832,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"829:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2834,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"849:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2853_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2853_$","typeString":"type(contract IERC165)"}],"id":2833,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2853","typeString":"type(contract IERC165)"}},"id":2836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2831,"id":2838,"nodeType":"Return","src":"822:47:9"}]},"documentation":{"id":2825,"nodeType":"StructuredDocumentation","src":"702:23:9","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2840,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:9","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:9","nodeType":"VariableDeclaration","scope":2840,"src":"757:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2826,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:9"},"returnParameters":{"id":2831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2840,"src":"806:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2829,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:9"},"scope":2841,"src":"730:146:9","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2842,"src":"660:218:9","usedErrors":[],"usedEvents":[]}],"src":"114:765:9"},"id":9},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2853]},"id":2854,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2843,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"142:280:10","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2853,"linearizedBaseContracts":[2853],"name":"IERC165","nameLocation":"433:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"447:340:10","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2852,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:10","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:10","nodeType":"VariableDeclaration","scope":2852,"src":"819:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2846,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:10"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2852,"src":"862:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2849,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:10"},"scope":2853,"src":"792:76:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2854,"src":"423:447:10","usedErrors":[],"usedEvents":[]}],"src":"115:756:10"},"id":10},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4474],"Panic":[1415],"SafeCast":[6239]},"id":4475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2855,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4475,"sourceUnit":1416,"src":"129:35:11","symbolAliases":[{"foreign":{"id":2856,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"137:5:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2859,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4475,"sourceUnit":6240,"src":"165:40:11","symbolAliases":[{"foreign":{"id":2858,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"173:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2860,"nodeType":"StructuredDocumentation","src":"207:73:11","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4474,"linearizedBaseContracts":[4474],"name":"Math","nameLocation":"289:4:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2865,"members":[{"id":2861,"name":"Floor","nameLocation":"324:5:11","nodeType":"EnumValue","src":"324:5:11"},{"id":2862,"name":"Ceil","nameLocation":"367:4:11","nodeType":"EnumValue","src":"367:4:11"},{"id":2863,"name":"Trunc","nameLocation":"409:5:11","nodeType":"EnumValue","src":"409:5:11"},{"id":2864,"name":"Expand","nameLocation":"439:6:11","nodeType":"EnumValue","src":"439:6:11"}],"name":"Rounding","nameLocation":"305:8:11","nodeType":"EnumDefinition","src":"300:169:11"},{"body":{"id":2878,"nodeType":"Block","src":"731:112:11","statements":[{"AST":{"nativeSrc":"766:71:11","nodeType":"YulBlock","src":"766:71:11","statements":[{"nativeSrc":"780:16:11","nodeType":"YulAssignment","src":"780:16:11","value":{"arguments":[{"name":"a","nativeSrc":"791:1:11","nodeType":"YulIdentifier","src":"791:1:11"},{"name":"b","nativeSrc":"794:1:11","nodeType":"YulIdentifier","src":"794:1:11"}],"functionName":{"name":"add","nativeSrc":"787:3:11","nodeType":"YulIdentifier","src":"787:3:11"},"nativeSrc":"787:9:11","nodeType":"YulFunctionCall","src":"787:9:11"},"variableNames":[{"name":"low","nativeSrc":"780:3:11","nodeType":"YulIdentifier","src":"780:3:11"}]},{"nativeSrc":"809:18:11","nodeType":"YulAssignment","src":"809:18:11","value":{"arguments":[{"name":"low","nativeSrc":"820:3:11","nodeType":"YulIdentifier","src":"820:3:11"},{"name":"a","nativeSrc":"825:1:11","nodeType":"YulIdentifier","src":"825:1:11"}],"functionName":{"name":"lt","nativeSrc":"817:2:11","nodeType":"YulIdentifier","src":"817:2:11"},"nativeSrc":"817:10:11","nodeType":"YulFunctionCall","src":"817:10:11"},"variableNames":[{"name":"high","nativeSrc":"809:4:11","nodeType":"YulIdentifier","src":"809:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2868,"isOffset":false,"isSlot":false,"src":"791:1:11","valueSize":1},{"declaration":2868,"isOffset":false,"isSlot":false,"src":"825:1:11","valueSize":1},{"declaration":2870,"isOffset":false,"isSlot":false,"src":"794:1:11","valueSize":1},{"declaration":2873,"isOffset":false,"isSlot":false,"src":"809:4:11","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"780:3:11","valueSize":1},{"declaration":2875,"isOffset":false,"isSlot":false,"src":"820:3:11","valueSize":1}],"flags":["memory-safe"],"id":2877,"nodeType":"InlineAssembly","src":"741:96:11"}]},"documentation":{"id":2866,"nodeType":"StructuredDocumentation","src":"475:163:11","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2879,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:11","nodeType":"FunctionDefinition","parameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2868,"mutability":"mutable","name":"a","nameLocation":"667:1:11","nodeType":"VariableDeclaration","scope":2879,"src":"659:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"b","nameLocation":"678:1:11","nodeType":"VariableDeclaration","scope":2879,"src":"670:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:11"},"returnParameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"high","nameLocation":"712:4:11","nodeType":"VariableDeclaration","scope":2879,"src":"704:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"low","nameLocation":"726:3:11","nodeType":"VariableDeclaration","scope":2879,"src":"718:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:11"},"scope":4474,"src":"643:200:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2892,"nodeType":"Block","src":"1115:462:11","statements":[{"AST":{"nativeSrc":"1437:134:11","nodeType":"YulBlock","src":"1437:134:11","statements":[{"nativeSrc":"1451:30:11","nodeType":"YulVariableDeclaration","src":"1451:30:11","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:11","nodeType":"YulIdentifier","src":"1468:1:11"},{"name":"b","nativeSrc":"1471:1:11","nodeType":"YulIdentifier","src":"1471:1:11"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:11","nodeType":"YulLiteral","src":"1478:1:11","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:11","nodeType":"YulIdentifier","src":"1474:3:11"},"nativeSrc":"1474:6:11","nodeType":"YulFunctionCall","src":"1474:6:11"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:11","nodeType":"YulIdentifier","src":"1461:6:11"},"nativeSrc":"1461:20:11","nodeType":"YulFunctionCall","src":"1461:20:11"},"variables":[{"name":"mm","nativeSrc":"1455:2:11","nodeType":"YulTypedName","src":"1455:2:11","type":""}]},{"nativeSrc":"1494:16:11","nodeType":"YulAssignment","src":"1494:16:11","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:11","nodeType":"YulIdentifier","src":"1505:1:11"},{"name":"b","nativeSrc":"1508:1:11","nodeType":"YulIdentifier","src":"1508:1:11"}],"functionName":{"name":"mul","nativeSrc":"1501:3:11","nodeType":"YulIdentifier","src":"1501:3:11"},"nativeSrc":"1501:9:11","nodeType":"YulFunctionCall","src":"1501:9:11"},"variableNames":[{"name":"low","nativeSrc":"1494:3:11","nodeType":"YulIdentifier","src":"1494:3:11"}]},{"nativeSrc":"1523:38:11","nodeType":"YulAssignment","src":"1523:38:11","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:11","nodeType":"YulIdentifier","src":"1539:2:11"},{"name":"low","nativeSrc":"1543:3:11","nodeType":"YulIdentifier","src":"1543:3:11"}],"functionName":{"name":"sub","nativeSrc":"1535:3:11","nodeType":"YulIdentifier","src":"1535:3:11"},"nativeSrc":"1535:12:11","nodeType":"YulFunctionCall","src":"1535:12:11"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:11","nodeType":"YulIdentifier","src":"1552:2:11"},{"name":"low","nativeSrc":"1556:3:11","nodeType":"YulIdentifier","src":"1556:3:11"}],"functionName":{"name":"lt","nativeSrc":"1549:2:11","nodeType":"YulIdentifier","src":"1549:2:11"},"nativeSrc":"1549:11:11","nodeType":"YulFunctionCall","src":"1549:11:11"}],"functionName":{"name":"sub","nativeSrc":"1531:3:11","nodeType":"YulIdentifier","src":"1531:3:11"},"nativeSrc":"1531:30:11","nodeType":"YulFunctionCall","src":"1531:30:11"},"variableNames":[{"name":"high","nativeSrc":"1523:4:11","nodeType":"YulIdentifier","src":"1523:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2882,"isOffset":false,"isSlot":false,"src":"1468:1:11","valueSize":1},{"declaration":2882,"isOffset":false,"isSlot":false,"src":"1505:1:11","valueSize":1},{"declaration":2884,"isOffset":false,"isSlot":false,"src":"1471:1:11","valueSize":1},{"declaration":2884,"isOffset":false,"isSlot":false,"src":"1508:1:11","valueSize":1},{"declaration":2887,"isOffset":false,"isSlot":false,"src":"1523:4:11","valueSize":1},{"declaration":2889,"isOffset":false,"isSlot":false,"src":"1494:3:11","valueSize":1},{"declaration":2889,"isOffset":false,"isSlot":false,"src":"1543:3:11","valueSize":1},{"declaration":2889,"isOffset":false,"isSlot":false,"src":"1556:3:11","valueSize":1}],"flags":["memory-safe"],"id":2891,"nodeType":"InlineAssembly","src":"1412:159:11"}]},"documentation":{"id":2880,"nodeType":"StructuredDocumentation","src":"849:173:11","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:11","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"a","nameLocation":"1051:1:11","nodeType":"VariableDeclaration","scope":2893,"src":"1043:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"b","nameLocation":"1062:1:11","nodeType":"VariableDeclaration","scope":2893,"src":"1054:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:11"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"high","nameLocation":"1096:4:11","nodeType":"VariableDeclaration","scope":2893,"src":"1088:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"low","nameLocation":"1110:3:11","nodeType":"VariableDeclaration","scope":2893,"src":"1102:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:11"},"scope":4474,"src":"1027:550:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2927,"nodeType":"Block","src":"1784:149:11","statements":[{"id":2926,"nodeType":"UncheckedBlock","src":"1794:133:11","statements":[{"assignments":[2906],"declarations":[{"constant":false,"id":2906,"mutability":"mutable","name":"c","nameLocation":"1826:1:11","nodeType":"VariableDeclaration","scope":2926,"src":"1818:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2910,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1830:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"1834:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:11"},{"expression":{"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1849:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"1859:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2913,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"1864:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2916,"nodeType":"ExpressionStatement","src":"1849:16:11"},{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2903,"src":"1879:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"1888:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2921,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"1908:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2919,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"1892:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"1892:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2925,"nodeType":"ExpressionStatement","src":"1879:37:11"}]}]},"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"1583:105:11","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":2928,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:11","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"a","nameLocation":"1717:1:11","nodeType":"VariableDeclaration","scope":2928,"src":"1709:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2898,"mutability":"mutable","name":"b","nameLocation":"1728:1:11","nodeType":"VariableDeclaration","scope":2928,"src":"1720:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:11"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"success","nameLocation":"1759:7:11","nodeType":"VariableDeclaration","scope":2928,"src":"1754:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2900,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2903,"mutability":"mutable","name":"result","nameLocation":"1776:6:11","nodeType":"VariableDeclaration","scope":2928,"src":"1768:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:11"},"scope":4474,"src":"1693:240:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2962,"nodeType":"Block","src":"2143:149:11","statements":[{"id":2961,"nodeType":"UncheckedBlock","src":"2153:133:11","statements":[{"assignments":[2941],"declarations":[{"constant":false,"id":2941,"mutability":"mutable","name":"c","nameLocation":"2185:1:11","nodeType":"VariableDeclaration","scope":2961,"src":"2177:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2945,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"2189:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"2193:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:11"},{"expression":{"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2946,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"2208:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"2218:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"2223:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2951,"nodeType":"ExpressionStatement","src":"2208:16:11"},{"expression":{"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"2238:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"2247:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2956,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"2267:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2954,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"2251:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"2251:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2960,"nodeType":"ExpressionStatement","src":"2238:37:11"}]}]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"1939:108:11","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":2963,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:11","nodeType":"FunctionDefinition","parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"a","nameLocation":"2076:1:11","nodeType":"VariableDeclaration","scope":2963,"src":"2068:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2930,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"b","nameLocation":"2087:1:11","nodeType":"VariableDeclaration","scope":2963,"src":"2079:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:11"},"returnParameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"success","nameLocation":"2118:7:11","nodeType":"VariableDeclaration","scope":2963,"src":"2113:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2935,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2938,"mutability":"mutable","name":"result","nameLocation":"2135:6:11","nodeType":"VariableDeclaration","scope":2963,"src":"2127:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:11"},"scope":4474,"src":"2052:240:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2992,"nodeType":"Block","src":"2505:391:11","statements":[{"id":2991,"nodeType":"UncheckedBlock","src":"2515:375:11","statements":[{"assignments":[2976],"declarations":[{"constant":false,"id":2976,"mutability":"mutable","name":"c","nameLocation":"2547:1:11","nodeType":"VariableDeclaration","scope":2991,"src":"2539:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2980,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"2551:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2978,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"2555:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:11"},{"AST":{"nativeSrc":"2595:188:11","nodeType":"YulBlock","src":"2595:188:11","statements":[{"nativeSrc":"2727:42:11","nodeType":"YulAssignment","src":"2727:42:11","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:11","nodeType":"YulIdentifier","src":"2748:1:11"},{"name":"a","nativeSrc":"2751:1:11","nodeType":"YulIdentifier","src":"2751:1:11"}],"functionName":{"name":"div","nativeSrc":"2744:3:11","nodeType":"YulIdentifier","src":"2744:3:11"},"nativeSrc":"2744:9:11","nodeType":"YulFunctionCall","src":"2744:9:11"},{"name":"b","nativeSrc":"2755:1:11","nodeType":"YulIdentifier","src":"2755:1:11"}],"functionName":{"name":"eq","nativeSrc":"2741:2:11","nodeType":"YulIdentifier","src":"2741:2:11"},"nativeSrc":"2741:16:11","nodeType":"YulFunctionCall","src":"2741:16:11"},{"arguments":[{"name":"a","nativeSrc":"2766:1:11","nodeType":"YulIdentifier","src":"2766:1:11"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:11","nodeType":"YulIdentifier","src":"2759:6:11"},"nativeSrc":"2759:9:11","nodeType":"YulFunctionCall","src":"2759:9:11"}],"functionName":{"name":"or","nativeSrc":"2738:2:11","nodeType":"YulIdentifier","src":"2738:2:11"},"nativeSrc":"2738:31:11","nodeType":"YulFunctionCall","src":"2738:31:11"},"variableNames":[{"name":"success","nativeSrc":"2727:7:11","nodeType":"YulIdentifier","src":"2727:7:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2966,"isOffset":false,"isSlot":false,"src":"2751:1:11","valueSize":1},{"declaration":2966,"isOffset":false,"isSlot":false,"src":"2766:1:11","valueSize":1},{"declaration":2968,"isOffset":false,"isSlot":false,"src":"2755:1:11","valueSize":1},{"declaration":2976,"isOffset":false,"isSlot":false,"src":"2748:1:11","valueSize":1},{"declaration":2971,"isOffset":false,"isSlot":false,"src":"2727:7:11","valueSize":1}],"flags":["memory-safe"],"id":2981,"nodeType":"InlineAssembly","src":"2570:213:11"},{"expression":{"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"2842:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"2851:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2986,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2871:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2984,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"2855:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"2855:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2990,"nodeType":"ExpressionStatement","src":"2842:37:11"}]}]},"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"2298:111:11","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:11","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"a","nameLocation":"2438:1:11","nodeType":"VariableDeclaration","scope":2993,"src":"2430:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"b","nameLocation":"2449:1:11","nodeType":"VariableDeclaration","scope":2993,"src":"2441:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:11"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"success","nameLocation":"2480:7:11","nodeType":"VariableDeclaration","scope":2993,"src":"2475:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2970,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"result","nameLocation":"2497:6:11","nodeType":"VariableDeclaration","scope":2993,"src":"2489:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:11"},"scope":4474,"src":"2414:482:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3013,"nodeType":"Block","src":"3111:231:11","statements":[{"id":3012,"nodeType":"UncheckedBlock","src":"3121:215:11","statements":[{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3005,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"3145:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3006,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"3155:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3010,"nodeType":"ExpressionStatement","src":"3145:15:11"},{"AST":{"nativeSrc":"3199:127:11","nodeType":"YulBlock","src":"3199:127:11","statements":[{"nativeSrc":"3293:19:11","nodeType":"YulAssignment","src":"3293:19:11","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:11","nodeType":"YulIdentifier","src":"3307:1:11"},{"name":"b","nativeSrc":"3310:1:11","nodeType":"YulIdentifier","src":"3310:1:11"}],"functionName":{"name":"div","nativeSrc":"3303:3:11","nodeType":"YulIdentifier","src":"3303:3:11"},"nativeSrc":"3303:9:11","nodeType":"YulFunctionCall","src":"3303:9:11"},"variableNames":[{"name":"result","nativeSrc":"3293:6:11","nodeType":"YulIdentifier","src":"3293:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2996,"isOffset":false,"isSlot":false,"src":"3307:1:11","valueSize":1},{"declaration":2998,"isOffset":false,"isSlot":false,"src":"3310:1:11","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"3293:6:11","valueSize":1}],"flags":["memory-safe"],"id":3011,"nodeType":"InlineAssembly","src":"3174:152:11"}]}]},"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"2902:113:11","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3014,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:11","nodeType":"FunctionDefinition","parameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"a","nameLocation":"3044:1:11","nodeType":"VariableDeclaration","scope":3014,"src":"3036:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2995,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2998,"mutability":"mutable","name":"b","nameLocation":"3055:1:11","nodeType":"VariableDeclaration","scope":3014,"src":"3047:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:11"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"mutability":"mutable","name":"success","nameLocation":"3086:7:11","nodeType":"VariableDeclaration","scope":3014,"src":"3081:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3000,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"result","nameLocation":"3103:6:11","nodeType":"VariableDeclaration","scope":3014,"src":"3095:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:11"},"scope":4474,"src":"3020:322:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3034,"nodeType":"Block","src":"3567:231:11","statements":[{"id":3033,"nodeType":"UncheckedBlock","src":"3577:215:11","statements":[{"expression":{"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3026,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"3601:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"3611:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3031,"nodeType":"ExpressionStatement","src":"3601:15:11"},{"AST":{"nativeSrc":"3655:127:11","nodeType":"YulBlock","src":"3655:127:11","statements":[{"nativeSrc":"3749:19:11","nodeType":"YulAssignment","src":"3749:19:11","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:11","nodeType":"YulIdentifier","src":"3763:1:11"},{"name":"b","nativeSrc":"3766:1:11","nodeType":"YulIdentifier","src":"3766:1:11"}],"functionName":{"name":"mod","nativeSrc":"3759:3:11","nodeType":"YulIdentifier","src":"3759:3:11"},"nativeSrc":"3759:9:11","nodeType":"YulFunctionCall","src":"3759:9:11"},"variableNames":[{"name":"result","nativeSrc":"3749:6:11","nodeType":"YulIdentifier","src":"3749:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3017,"isOffset":false,"isSlot":false,"src":"3763:1:11","valueSize":1},{"declaration":3019,"isOffset":false,"isSlot":false,"src":"3766:1:11","valueSize":1},{"declaration":3024,"isOffset":false,"isSlot":false,"src":"3749:6:11","valueSize":1}],"flags":["memory-safe"],"id":3032,"nodeType":"InlineAssembly","src":"3630:152:11"}]}]},"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"3348:123:11","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3035,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:11","nodeType":"FunctionDefinition","parameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"a","nameLocation":"3500:1:11","nodeType":"VariableDeclaration","scope":3035,"src":"3492:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"b","nameLocation":"3511:1:11","nodeType":"VariableDeclaration","scope":3035,"src":"3503:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3018,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:11"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"success","nameLocation":"3542:7:11","nodeType":"VariableDeclaration","scope":3035,"src":"3537:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3021,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"result","nameLocation":"3559:6:11","nodeType":"VariableDeclaration","scope":3035,"src":"3551:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:11"},"scope":4474,"src":"3476:322:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3064,"nodeType":"Block","src":"3989:122:11","statements":[{"assignments":[3046,3048],"declarations":[{"constant":false,"id":3046,"mutability":"mutable","name":"success","nameLocation":"4005:7:11","nodeType":"VariableDeclaration","scope":3064,"src":"4000:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3045,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"result","nameLocation":"4022:6:11","nodeType":"VariableDeclaration","scope":3064,"src":"4014:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3053,"initialValue":{"arguments":[{"id":3050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"4039:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3051,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4042:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3049,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"4032:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:11"},{"expression":{"arguments":[{"id":3055,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"4069:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3056,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"4078:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3057,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:11","memberName":"max","nodeType":"MemberAccess","src":"4086:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3054,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"4061:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3044,"id":3063,"nodeType":"Return","src":"4054:50:11"}]},"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"3804:103:11","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3065,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:11","nodeType":"FunctionDefinition","parameters":{"id":3041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"a","nameLocation":"3943:1:11","nodeType":"VariableDeclaration","scope":3065,"src":"3935:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"b","nameLocation":"3954:1:11","nodeType":"VariableDeclaration","scope":3065,"src":"3946:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:11"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3065,"src":"3980:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:11"},"scope":4474,"src":"3912:199:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"4294:73:11","statements":[{"assignments":[null,3076],"declarations":[null,{"constant":false,"id":3076,"mutability":"mutable","name":"result","nameLocation":"4315:6:11","nodeType":"VariableDeclaration","scope":3084,"src":"4307:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3081,"initialValue":{"arguments":[{"id":3078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"4332:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3079,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"4335:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3077,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"4325:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:11"},{"expression":{"id":3082,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"4354:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3074,"id":3083,"nodeType":"Return","src":"4347:13:11"}]},"documentation":{"id":3066,"nodeType":"StructuredDocumentation","src":"4117:95:11","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:11","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"a","nameLocation":"4248:1:11","nodeType":"VariableDeclaration","scope":3085,"src":"4240:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"b","nameLocation":"4259:1:11","nodeType":"VariableDeclaration","scope":3085,"src":"4251:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:11"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3085,"src":"4285:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3072,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:11"},"scope":4474,"src":"4217:150:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"4564:122:11","statements":[{"assignments":[3096,3098],"declarations":[{"constant":false,"id":3096,"mutability":"mutable","name":"success","nameLocation":"4580:7:11","nodeType":"VariableDeclaration","scope":3114,"src":"4575:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3095,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"result","nameLocation":"4597:6:11","nodeType":"VariableDeclaration","scope":3114,"src":"4589:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3103,"initialValue":{"arguments":[{"id":3100,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"4614:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3101,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"4617:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3099,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"4607:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:11"},{"expression":{"arguments":[{"id":3105,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"4644:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3106,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"4653:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3107,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:11","memberName":"max","nodeType":"MemberAccess","src":"4661:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3104,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"4636:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3094,"id":3113,"nodeType":"Return","src":"4629:50:11"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"4373:109:11","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:11","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"a","nameLocation":"4518:1:11","nodeType":"VariableDeclaration","scope":3115,"src":"4510:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"b","nameLocation":"4529:1:11","nodeType":"VariableDeclaration","scope":3115,"src":"4521:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:11"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3115,"src":"4555:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:11"},"scope":4474,"src":"4487:199:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3141,"nodeType":"Block","src":"5158:207:11","statements":[{"id":3140,"nodeType":"UncheckedBlock","src":"5168:191:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"5306:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5312:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3129,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"5316:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3134,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"5337:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3132,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"5321:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"5321:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3126,"id":3139,"nodeType":"Return","src":"5299:49:11"}]}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"4692:374:11","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3142,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:11","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"condition","nameLocation":"5093:9:11","nodeType":"VariableDeclaration","scope":3142,"src":"5088:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3117,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"a","nameLocation":"5112:1:11","nodeType":"VariableDeclaration","scope":3142,"src":"5104:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"b","nameLocation":"5123:1:11","nodeType":"VariableDeclaration","scope":3142,"src":"5115:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:11"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3142,"src":"5149:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:11"},"scope":4474,"src":"5071:294:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3160,"nodeType":"Block","src":"5502:44:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"5527:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"5531:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"5534:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3157,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"5537:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3152,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"5519:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3151,"id":3159,"nodeType":"Return","src":"5512:27:11"}]},"documentation":{"id":3143,"nodeType":"StructuredDocumentation","src":"5371:59:11","text":" @dev Returns the largest of two numbers."},"id":3161,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:11","nodeType":"FunctionDefinition","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"a","nameLocation":"5456:1:11","nodeType":"VariableDeclaration","scope":3161,"src":"5448:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3147,"mutability":"mutable","name":"b","nameLocation":"5467:1:11","nodeType":"VariableDeclaration","scope":3161,"src":"5459:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:11"},"returnParameters":{"id":3151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3161,"src":"5493:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:11"},"scope":4474,"src":"5435:111:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3179,"nodeType":"Block","src":"5684:44:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3172,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"5709:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3173,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"5713:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"5716:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"5719:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3171,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"5701:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3170,"id":3178,"nodeType":"Return","src":"5694:27:11"}]},"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"5552:60:11","text":" @dev Returns the smallest of two numbers."},"id":3180,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:11","nodeType":"FunctionDefinition","parameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"a","nameLocation":"5638:1:11","nodeType":"VariableDeclaration","scope":3180,"src":"5630:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"b","nameLocation":"5649:1:11","nodeType":"VariableDeclaration","scope":3180,"src":"5641:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:11"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3180,"src":"5675:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:11"},"scope":4474,"src":"5617:111:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3202,"nodeType":"Block","src":"5912:82:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"5967:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3191,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"5971:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"5977:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"5981:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3189,"id":3201,"nodeType":"Return","src":"5959:28:11"}]},"documentation":{"id":3181,"nodeType":"StructuredDocumentation","src":"5734:102:11","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3203,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:11","nodeType":"FunctionDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"a","nameLocation":"5866:1:11","nodeType":"VariableDeclaration","scope":3203,"src":"5858:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3182,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"b","nameLocation":"5877:1:11","nodeType":"VariableDeclaration","scope":3203,"src":"5869:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:11"},"returnParameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3203,"src":"5903:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:11"},"scope":4474,"src":"5841:153:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3243,"nodeType":"Block","src":"6286:633:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"6300:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3224,"nodeType":"IfStatement","src":"6296:150:11","trueBody":{"id":3223,"nodeType":"Block","src":"6308:138:11","statements":[{"expression":{"arguments":[{"expression":{"id":3219,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"6412:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"6412:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3216,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"6400:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"6400:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3222,"nodeType":"ExpressionStatement","src":"6400:35:11"}]}},{"id":3242,"nodeType":"UncheckedBlock","src":"6829:84:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"6876:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3225,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"6860:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"6860:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"6887:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3235,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"6896:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3212,"id":3241,"nodeType":"Return","src":"6853:49:11"}]}]},"documentation":{"id":3204,"nodeType":"StructuredDocumentation","src":"6000:210:11","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3244,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:11","nodeType":"FunctionDefinition","parameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"a","nameLocation":"6240:1:11","nodeType":"VariableDeclaration","scope":3244,"src":"6232:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3205,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3208,"mutability":"mutable","name":"b","nameLocation":"6251:1:11","nodeType":"VariableDeclaration","scope":3244,"src":"6243:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:11"},"returnParameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3244,"src":"6277:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3210,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:11"},"scope":4474,"src":"6215:704:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3379,"nodeType":"Block","src":"7340:3585:11","statements":[{"id":3378,"nodeType":"UncheckedBlock","src":"7350:3569:11","statements":[{"assignments":[3257,3259],"declarations":[{"constant":false,"id":3257,"mutability":"mutable","name":"high","nameLocation":"7383:4:11","nodeType":"VariableDeclaration","scope":3378,"src":"7375:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3259,"mutability":"mutable","name":"low","nameLocation":"7397:3:11","nodeType":"VariableDeclaration","scope":3378,"src":"7389:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3264,"initialValue":{"arguments":[{"id":3261,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"7411:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3262,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"7414:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3260,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"7404:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3265,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"7498:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3273,"nodeType":"IfStatement","src":"7494:365:11","trueBody":{"id":3272,"nodeType":"Block","src":"7509:350:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3268,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"7827:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3269,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"7833:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3255,"id":3271,"nodeType":"Return","src":"7820:24:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"7969:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3275,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"7984:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3292,"nodeType":"IfStatement","src":"7965:142:11","trueBody":{"id":3291,"nodeType":"Block","src":"7990:117:11","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"8028:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3284,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"8046:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"8046:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3286,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"8070:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:11","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"8070:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3280,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"8020:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3277,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"8008:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"8008:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3290,"nodeType":"ExpressionStatement","src":"8008:84:11"}]}},{"assignments":[3294],"declarations":[{"constant":false,"id":3294,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:11","nodeType":"VariableDeclaration","scope":3378,"src":"8359:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3295,"nodeType":"VariableDeclarationStatement","src":"8359:17:11"},{"AST":{"nativeSrc":"8415:283:11","nodeType":"YulBlock","src":"8415:283:11","statements":[{"nativeSrc":"8484:38:11","nodeType":"YulAssignment","src":"8484:38:11","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:11","nodeType":"YulIdentifier","src":"8504:1:11"},{"name":"y","nativeSrc":"8507:1:11","nodeType":"YulIdentifier","src":"8507:1:11"},{"name":"denominator","nativeSrc":"8510:11:11","nodeType":"YulIdentifier","src":"8510:11:11"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:11","nodeType":"YulIdentifier","src":"8497:6:11"},"nativeSrc":"8497:25:11","nodeType":"YulFunctionCall","src":"8497:25:11"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:11","nodeType":"YulIdentifier","src":"8484:9:11"}]},{"nativeSrc":"8604:37:11","nodeType":"YulAssignment","src":"8604:37:11","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:11","nodeType":"YulIdentifier","src":"8616:4:11"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:11","nodeType":"YulIdentifier","src":"8625:9:11"},{"name":"low","nativeSrc":"8636:3:11","nodeType":"YulIdentifier","src":"8636:3:11"}],"functionName":{"name":"gt","nativeSrc":"8622:2:11","nodeType":"YulIdentifier","src":"8622:2:11"},"nativeSrc":"8622:18:11","nodeType":"YulFunctionCall","src":"8622:18:11"}],"functionName":{"name":"sub","nativeSrc":"8612:3:11","nodeType":"YulIdentifier","src":"8612:3:11"},"nativeSrc":"8612:29:11","nodeType":"YulFunctionCall","src":"8612:29:11"},"variableNames":[{"name":"high","nativeSrc":"8604:4:11","nodeType":"YulIdentifier","src":"8604:4:11"}]},{"nativeSrc":"8658:26:11","nodeType":"YulAssignment","src":"8658:26:11","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:11","nodeType":"YulIdentifier","src":"8669:3:11"},{"name":"remainder","nativeSrc":"8674:9:11","nodeType":"YulIdentifier","src":"8674:9:11"}],"functionName":{"name":"sub","nativeSrc":"8665:3:11","nodeType":"YulIdentifier","src":"8665:3:11"},"nativeSrc":"8665:19:11","nodeType":"YulFunctionCall","src":"8665:19:11"},"variableNames":[{"name":"low","nativeSrc":"8658:3:11","nodeType":"YulIdentifier","src":"8658:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3251,"isOffset":false,"isSlot":false,"src":"8510:11:11","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"8604:4:11","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"8616:4:11","valueSize":1},{"declaration":3259,"isOffset":false,"isSlot":false,"src":"8636:3:11","valueSize":1},{"declaration":3259,"isOffset":false,"isSlot":false,"src":"8658:3:11","valueSize":1},{"declaration":3259,"isOffset":false,"isSlot":false,"src":"8669:3:11","valueSize":1},{"declaration":3294,"isOffset":false,"isSlot":false,"src":"8484:9:11","valueSize":1},{"declaration":3294,"isOffset":false,"isSlot":false,"src":"8625:9:11","valueSize":1},{"declaration":3294,"isOffset":false,"isSlot":false,"src":"8674:9:11","valueSize":1},{"declaration":3247,"isOffset":false,"isSlot":false,"src":"8504:1:11","valueSize":1},{"declaration":3249,"isOffset":false,"isSlot":false,"src":"8507:1:11","valueSize":1}],"flags":["memory-safe"],"id":3296,"nodeType":"InlineAssembly","src":"8390:308:11"},{"assignments":[3298],"declarations":[{"constant":false,"id":3298,"mutability":"mutable","name":"twos","nameLocation":"8910:4:11","nodeType":"VariableDeclaration","scope":3378,"src":"8902:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"8917:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3301,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"8936:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:11"},{"AST":{"nativeSrc":"8987:359:11","nodeType":"YulBlock","src":"8987:359:11","statements":[{"nativeSrc":"9052:37:11","nodeType":"YulAssignment","src":"9052:37:11","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:11","nodeType":"YulIdentifier","src":"9071:11:11"},{"name":"twos","nativeSrc":"9084:4:11","nodeType":"YulIdentifier","src":"9084:4:11"}],"functionName":{"name":"div","nativeSrc":"9067:3:11","nodeType":"YulIdentifier","src":"9067:3:11"},"nativeSrc":"9067:22:11","nodeType":"YulFunctionCall","src":"9067:22:11"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:11","nodeType":"YulIdentifier","src":"9052:11:11"}]},{"nativeSrc":"9153:21:11","nodeType":"YulAssignment","src":"9153:21:11","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:11","nodeType":"YulIdentifier","src":"9164:3:11"},{"name":"twos","nativeSrc":"9169:4:11","nodeType":"YulIdentifier","src":"9169:4:11"}],"functionName":{"name":"div","nativeSrc":"9160:3:11","nodeType":"YulIdentifier","src":"9160:3:11"},"nativeSrc":"9160:14:11","nodeType":"YulFunctionCall","src":"9160:14:11"},"variableNames":[{"name":"low","nativeSrc":"9153:3:11","nodeType":"YulIdentifier","src":"9153:3:11"}]},{"nativeSrc":"9293:39:11","nodeType":"YulAssignment","src":"9293:39:11","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:11","nodeType":"YulLiteral","src":"9313:1:11","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:11","nodeType":"YulIdentifier","src":"9316:4:11"}],"functionName":{"name":"sub","nativeSrc":"9309:3:11","nodeType":"YulIdentifier","src":"9309:3:11"},"nativeSrc":"9309:12:11","nodeType":"YulFunctionCall","src":"9309:12:11"},{"name":"twos","nativeSrc":"9323:4:11","nodeType":"YulIdentifier","src":"9323:4:11"}],"functionName":{"name":"div","nativeSrc":"9305:3:11","nodeType":"YulIdentifier","src":"9305:3:11"},"nativeSrc":"9305:23:11","nodeType":"YulFunctionCall","src":"9305:23:11"},{"kind":"number","nativeSrc":"9330:1:11","nodeType":"YulLiteral","src":"9330:1:11","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:11","nodeType":"YulIdentifier","src":"9301:3:11"},"nativeSrc":"9301:31:11","nodeType":"YulFunctionCall","src":"9301:31:11"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:11","nodeType":"YulIdentifier","src":"9293:4:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3251,"isOffset":false,"isSlot":false,"src":"9052:11:11","valueSize":1},{"declaration":3251,"isOffset":false,"isSlot":false,"src":"9071:11:11","valueSize":1},{"declaration":3259,"isOffset":false,"isSlot":false,"src":"9153:3:11","valueSize":1},{"declaration":3259,"isOffset":false,"isSlot":false,"src":"9164:3:11","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"9084:4:11","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"9169:4:11","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"9293:4:11","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"9316:4:11","valueSize":1},{"declaration":3298,"isOffset":false,"isSlot":false,"src":"9323:4:11","valueSize":1}],"flags":["memory-safe"],"id":3306,"nodeType":"InlineAssembly","src":"8962:384:11"},{"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3307,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"9409:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3308,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"9416:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3309,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"9423:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3312,"nodeType":"ExpressionStatement","src":"9409:18:11"},{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:11","nodeType":"VariableDeclaration","scope":3378,"src":"9762:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3321,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3316,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"9785:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:11"},{"expression":{"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3322,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10018:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3324,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"10033:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3325,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10047:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3329,"nodeType":"ExpressionStatement","src":"10018:36:11"},{"expression":{"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3330,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10088:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"10103:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3333,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10117:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3337,"nodeType":"ExpressionStatement","src":"10088:36:11"},{"expression":{"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3338,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10160:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"10175:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3341,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10189:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3345,"nodeType":"ExpressionStatement","src":"10160:36:11"},{"expression":{"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3346,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10231:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3348,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"10246:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3349,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10260:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3353,"nodeType":"ExpressionStatement","src":"10231:36:11"},{"expression":{"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3354,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10304:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"10319:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3357,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10333:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3361,"nodeType":"ExpressionStatement","src":"10304:36:11"},{"expression":{"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3362,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10378:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"10393:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3365,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10407:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3369,"nodeType":"ExpressionStatement","src":"10378:36:11"},{"expression":{"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"10859:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"10868:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3372,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"10874:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3375,"nodeType":"ExpressionStatement","src":"10859:22:11"},{"expression":{"id":3376,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"10902:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3255,"id":3377,"nodeType":"Return","src":"10895:13:11"}]}]},"documentation":{"id":3245,"nodeType":"StructuredDocumentation","src":"6925:312:11","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3380,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:11","nodeType":"FunctionDefinition","parameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"x","nameLocation":"7266:1:11","nodeType":"VariableDeclaration","scope":3380,"src":"7258:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3249,"mutability":"mutable","name":"y","nameLocation":"7277:1:11","nodeType":"VariableDeclaration","scope":3380,"src":"7269:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:11","nodeType":"VariableDeclaration","scope":3380,"src":"7280:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:11"},"returnParameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"result","nameLocation":"7332:6:11","nodeType":"VariableDeclaration","scope":3380,"src":"7324:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:11"},"scope":4474,"src":"7242:3683:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3416,"nodeType":"Block","src":"11164:128:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3396,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"11188:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3397,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"11191:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3398,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11194:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3395,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3380,3417],"referencedDeclaration":3380,"src":"11181:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3403,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3390,"src":"11242:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}],"id":3402,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"11225:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2865_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3406,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"11262:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3407,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"11265:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3408,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3387,"src":"11268:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3405,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3400,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"11209:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"11209:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3394,"id":3415,"nodeType":"Return","src":"11174:111:11"}]},"documentation":{"id":3381,"nodeType":"StructuredDocumentation","src":"10931:118:11","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:11","nodeType":"FunctionDefinition","parameters":{"id":3391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"x","nameLocation":"11078:1:11","nodeType":"VariableDeclaration","scope":3417,"src":"11070:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"y","nameLocation":"11089:1:11","nodeType":"VariableDeclaration","scope":3417,"src":"11081:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:11","nodeType":"VariableDeclaration","scope":3417,"src":"11092:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3390,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:11","nodeType":"VariableDeclaration","scope":3417,"src":"11113:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"},"typeName":{"id":3389,"nodeType":"UserDefinedTypeName","pathNode":{"id":3388,"name":"Rounding","nameLocations":["11113:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2865,"src":"11113:8:11"},"referencedDeclaration":2865,"src":"11113:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:11"},"returnParameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3417,"src":"11155:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3392,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:11"},"scope":4474,"src":"11054:238:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"11500:245:11","statements":[{"id":3465,"nodeType":"UncheckedBlock","src":"11510:229:11","statements":[{"assignments":[3430,3432],"declarations":[{"constant":false,"id":3430,"mutability":"mutable","name":"high","nameLocation":"11543:4:11","nodeType":"VariableDeclaration","scope":3465,"src":"11535:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"low","nameLocation":"11557:3:11","nodeType":"VariableDeclaration","scope":3465,"src":"11549:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3437,"initialValue":{"arguments":[{"id":3434,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"11571:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3435,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"11574:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3433,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"11564:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"11594:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3440,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"11607:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3451,"nodeType":"IfStatement","src":"11590:86:11","trueBody":{"id":3450,"nodeType":"Block","src":"11610:66:11","statements":[{"expression":{"arguments":[{"expression":{"id":3446,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"11640:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:11","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1378,"src":"11640:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3443,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"11628:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"11628:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3449,"nodeType":"ExpressionStatement","src":"11628:33:11"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3452,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"11697:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3454,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"11712:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"11719:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3460,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"11726:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3428,"id":3464,"nodeType":"Return","src":"11689:39:11"}]}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"11298:111:11","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:11","nodeType":"FunctionDefinition","parameters":{"id":3425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"x","nameLocation":"11438:1:11","nodeType":"VariableDeclaration","scope":3467,"src":"11430:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"y","nameLocation":"11449:1:11","nodeType":"VariableDeclaration","scope":3467,"src":"11441:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"n","nameLocation":"11458:1:11","nodeType":"VariableDeclaration","scope":3467,"src":"11452:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3423,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:11"},"returnParameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"result","nameLocation":"11492:6:11","nodeType":"VariableDeclaration","scope":3467,"src":"11484:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:11"},"scope":4474,"src":"11414:331:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3505,"nodeType":"Block","src":"11963:113:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3483,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"11987:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3484,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"11990:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3485,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"11993:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3482,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3467,3506],"referencedDeclaration":3467,"src":"11980:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3490,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3477,"src":"12031:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}],"id":3489,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"12014:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2865_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3493,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"12051:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3494,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"12054:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3496,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"12062:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3492,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:11","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3487,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"11998:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"11998:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3481,"id":3504,"nodeType":"Return","src":"11973:96:11"}]},"documentation":{"id":3468,"nodeType":"StructuredDocumentation","src":"11751:109:11","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3506,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:11","nodeType":"FunctionDefinition","parameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"x","nameLocation":"11889:1:11","nodeType":"VariableDeclaration","scope":3506,"src":"11881:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"y","nameLocation":"11900:1:11","nodeType":"VariableDeclaration","scope":3506,"src":"11892:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"n","nameLocation":"11909:1:11","nodeType":"VariableDeclaration","scope":3506,"src":"11903:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3473,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3477,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:11","nodeType":"VariableDeclaration","scope":3506,"src":"11912:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"},"typeName":{"id":3476,"nodeType":"UserDefinedTypeName","pathNode":{"id":3475,"name":"Rounding","nameLocations":["11912:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2865,"src":"11912:8:11"},"referencedDeclaration":2865,"src":"11912:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:11"},"returnParameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3506,"src":"11954:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:11"},"scope":4474,"src":"11865:211:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3602,"nodeType":"Block","src":"12710:1849:11","statements":[{"id":3601,"nodeType":"UncheckedBlock","src":"12720:1833:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"12748:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3521,"nodeType":"IfStatement","src":"12744:20:11","trueBody":{"expression":{"hexValue":"30","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3515,"id":3520,"nodeType":"Return","src":"12756:8:11"}},{"assignments":[3523],"declarations":[{"constant":false,"id":3523,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:11","nodeType":"VariableDeclaration","scope":3601,"src":"13235:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3527,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"13255:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3525,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"13259:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:11"},{"assignments":[3529],"declarations":[{"constant":false,"id":3529,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:11","nodeType":"VariableDeclaration","scope":3601,"src":"13274:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3531,"initialValue":{"id":3530,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"13288:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:11"},{"assignments":[3533],"declarations":[{"constant":false,"id":3533,"mutability":"mutable","name":"x","nameLocation":"13432:1:11","nodeType":"VariableDeclaration","scope":3601,"src":"13425:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3532,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3535,"initialValue":{"hexValue":"30","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:11"},{"assignments":[3537],"declarations":[{"constant":false,"id":3537,"mutability":"mutable","name":"y","nameLocation":"13458:1:11","nodeType":"VariableDeclaration","scope":3601,"src":"13451:8:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3536,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3539,"initialValue":{"hexValue":"31","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:11"},{"body":{"id":3576,"nodeType":"Block","src":"13501:882:11","statements":[{"assignments":[3544],"declarations":[{"constant":false,"id":3544,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:11","nodeType":"VariableDeclaration","scope":3576,"src":"13519:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3548,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3545,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"13538:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3546,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"13544:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:11"},{"expression":{"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3549,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"13573:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3550,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"13578:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3551,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3552,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"13678:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"13923:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3554,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"13929:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3555,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"13941:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3560,"nodeType":"ExpressionStatement","src":"13572:395:11"},{"expression":{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3561,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"13987:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3562,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"13990:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3563,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3564,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"14072:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"14326:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3566,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"14330:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3569,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"14341:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3567,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:11","typeDescriptions":{}}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:11","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3575,"nodeType":"ExpressionStatement","src":"13986:382:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3540,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"13485:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3577,"nodeType":"WhileStatement","src":"13478:905:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3578,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"14401:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3583,"nodeType":"IfStatement","src":"14397:22:11","trueBody":{"expression":{"hexValue":"30","id":3581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3515,"id":3582,"nodeType":"Return","src":"14411:8:11"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"14470:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3588,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"14477:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:11","subExpression":{"id":3591,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"14490:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:11","typeDescriptions":{}}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3597,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"14502:1:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:11","typeDescriptions":{}}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3584,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"14462:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3515,"id":3600,"nodeType":"Return","src":"14455:50:11"}]}]},"documentation":{"id":3507,"nodeType":"StructuredDocumentation","src":"12082:553:11","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3603,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:11","nodeType":"FunctionDefinition","parameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"a","nameLocation":"12664:1:11","nodeType":"VariableDeclaration","scope":3603,"src":"12656:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3508,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3511,"mutability":"mutable","name":"n","nameLocation":"12675:1:11","nodeType":"VariableDeclaration","scope":3603,"src":"12667:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:11"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3603,"src":"12701:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:11"},"scope":4474,"src":"12640:1919:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3623,"nodeType":"Block","src":"15159:82:11","statements":[{"id":3622,"nodeType":"UncheckedBlock","src":"15169:66:11","statements":[{"expression":{"arguments":[{"id":3615,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"15212:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3616,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"15215:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3619,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3608,"src":"15222:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3613,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"15200:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4474_$","typeString":"type(library Math)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:11","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3660,"src":"15200:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3612,"id":3621,"nodeType":"Return","src":"15193:31:11"}]}]},"documentation":{"id":3604,"nodeType":"StructuredDocumentation","src":"14565:514:11","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3624,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:11","nodeType":"FunctionDefinition","parameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"a","nameLocation":"15113:1:11","nodeType":"VariableDeclaration","scope":3624,"src":"15105:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3608,"mutability":"mutable","name":"p","nameLocation":"15124:1:11","nodeType":"VariableDeclaration","scope":3624,"src":"15116:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:11"},"returnParameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3624,"src":"15150:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:11"},"scope":4474,"src":"15084:157:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3659,"nodeType":"Block","src":"16011:174:11","statements":[{"assignments":[3637,3639],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"success","nameLocation":"16027:7:11","nodeType":"VariableDeclaration","scope":3659,"src":"16022:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3636,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"result","nameLocation":"16044:6:11","nodeType":"VariableDeclaration","scope":3659,"src":"16036:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3645,"initialValue":{"arguments":[{"id":3641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"16064:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3642,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"16067:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3643,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"16070:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3640,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3684,3766],"referencedDeclaration":3684,"src":"16054:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:11"},{"condition":{"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:11","subExpression":{"id":3646,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"16087:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3656,"nodeType":"IfStatement","src":"16082:74:11","trueBody":{"id":3655,"nodeType":"Block","src":"16096:60:11","statements":[{"expression":{"arguments":[{"expression":{"id":3651,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"16122:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"16122:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3648,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"16110:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"16110:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3654,"nodeType":"ExpressionStatement","src":"16110:35:11"}]}},{"expression":{"id":3657,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"16172:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3635,"id":3658,"nodeType":"Return","src":"16165:13:11"}]},"documentation":{"id":3625,"nodeType":"StructuredDocumentation","src":"15247:678:11","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3660,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:11","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"b","nameLocation":"15954:1:11","nodeType":"VariableDeclaration","scope":3660,"src":"15946:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"e","nameLocation":"15965:1:11","nodeType":"VariableDeclaration","scope":3660,"src":"15957:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"m","nameLocation":"15976:1:11","nodeType":"VariableDeclaration","scope":3660,"src":"15968:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:11"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3660,"src":"16002:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:11"},"scope":4474,"src":"15930:255:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3683,"nodeType":"Block","src":"17039:1493:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3674,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"17053:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3681,"nodeType":"IfStatement","src":"17049:29:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3673,"id":3680,"nodeType":"Return","src":"17061:17:11"}},{"AST":{"nativeSrc":"17113:1413:11","nodeType":"YulBlock","src":"17113:1413:11","statements":[{"nativeSrc":"17127:22:11","nodeType":"YulVariableDeclaration","src":"17127:22:11","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:11","nodeType":"YulLiteral","src":"17144:4:11","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:11","nodeType":"YulIdentifier","src":"17138:5:11"},"nativeSrc":"17138:11:11","nodeType":"YulFunctionCall","src":"17138:11:11"},"variables":[{"name":"ptr","nativeSrc":"17131:3:11","nodeType":"YulTypedName","src":"17131:3:11","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:11","nodeType":"YulIdentifier","src":"18057:3:11"},{"kind":"number","nativeSrc":"18062:4:11","nodeType":"YulLiteral","src":"18062:4:11","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:11","nodeType":"YulIdentifier","src":"18050:6:11"},"nativeSrc":"18050:17:11","nodeType":"YulFunctionCall","src":"18050:17:11"},"nativeSrc":"18050:17:11","nodeType":"YulExpressionStatement","src":"18050:17:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:11","nodeType":"YulIdentifier","src":"18091:3:11"},{"kind":"number","nativeSrc":"18096:4:11","nodeType":"YulLiteral","src":"18096:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:11","nodeType":"YulIdentifier","src":"18087:3:11"},"nativeSrc":"18087:14:11","nodeType":"YulFunctionCall","src":"18087:14:11"},{"kind":"number","nativeSrc":"18103:4:11","nodeType":"YulLiteral","src":"18103:4:11","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:11","nodeType":"YulIdentifier","src":"18080:6:11"},"nativeSrc":"18080:28:11","nodeType":"YulFunctionCall","src":"18080:28:11"},"nativeSrc":"18080:28:11","nodeType":"YulExpressionStatement","src":"18080:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:11","nodeType":"YulIdentifier","src":"18132:3:11"},{"kind":"number","nativeSrc":"18137:4:11","nodeType":"YulLiteral","src":"18137:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:11","nodeType":"YulIdentifier","src":"18128:3:11"},"nativeSrc":"18128:14:11","nodeType":"YulFunctionCall","src":"18128:14:11"},{"kind":"number","nativeSrc":"18144:4:11","nodeType":"YulLiteral","src":"18144:4:11","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:11","nodeType":"YulIdentifier","src":"18121:6:11"},"nativeSrc":"18121:28:11","nodeType":"YulFunctionCall","src":"18121:28:11"},"nativeSrc":"18121:28:11","nodeType":"YulExpressionStatement","src":"18121:28:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:11","nodeType":"YulIdentifier","src":"18173:3:11"},{"kind":"number","nativeSrc":"18178:4:11","nodeType":"YulLiteral","src":"18178:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:11","nodeType":"YulIdentifier","src":"18169:3:11"},"nativeSrc":"18169:14:11","nodeType":"YulFunctionCall","src":"18169:14:11"},{"name":"b","nativeSrc":"18185:1:11","nodeType":"YulIdentifier","src":"18185:1:11"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:11","nodeType":"YulIdentifier","src":"18162:6:11"},"nativeSrc":"18162:25:11","nodeType":"YulFunctionCall","src":"18162:25:11"},"nativeSrc":"18162:25:11","nodeType":"YulExpressionStatement","src":"18162:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:11","nodeType":"YulIdentifier","src":"18211:3:11"},{"kind":"number","nativeSrc":"18216:4:11","nodeType":"YulLiteral","src":"18216:4:11","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:11","nodeType":"YulIdentifier","src":"18207:3:11"},"nativeSrc":"18207:14:11","nodeType":"YulFunctionCall","src":"18207:14:11"},{"name":"e","nativeSrc":"18223:1:11","nodeType":"YulIdentifier","src":"18223:1:11"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:11","nodeType":"YulIdentifier","src":"18200:6:11"},"nativeSrc":"18200:25:11","nodeType":"YulFunctionCall","src":"18200:25:11"},"nativeSrc":"18200:25:11","nodeType":"YulExpressionStatement","src":"18200:25:11"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:11","nodeType":"YulIdentifier","src":"18249:3:11"},{"kind":"number","nativeSrc":"18254:4:11","nodeType":"YulLiteral","src":"18254:4:11","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:11","nodeType":"YulIdentifier","src":"18245:3:11"},"nativeSrc":"18245:14:11","nodeType":"YulFunctionCall","src":"18245:14:11"},{"name":"m","nativeSrc":"18261:1:11","nodeType":"YulIdentifier","src":"18261:1:11"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:11","nodeType":"YulIdentifier","src":"18238:6:11"},"nativeSrc":"18238:25:11","nodeType":"YulFunctionCall","src":"18238:25:11"},"nativeSrc":"18238:25:11","nodeType":"YulExpressionStatement","src":"18238:25:11"},{"nativeSrc":"18425:57:11","nodeType":"YulAssignment","src":"18425:57:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:11","nodeType":"YulIdentifier","src":"18447:3:11"},"nativeSrc":"18447:5:11","nodeType":"YulFunctionCall","src":"18447:5:11"},{"kind":"number","nativeSrc":"18454:4:11","nodeType":"YulLiteral","src":"18454:4:11","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:11","nodeType":"YulIdentifier","src":"18460:3:11"},{"kind":"number","nativeSrc":"18465:4:11","nodeType":"YulLiteral","src":"18465:4:11","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:11","nodeType":"YulLiteral","src":"18471:4:11","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:11","nodeType":"YulLiteral","src":"18477:4:11","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:11","nodeType":"YulIdentifier","src":"18436:10:11"},"nativeSrc":"18436:46:11","nodeType":"YulFunctionCall","src":"18436:46:11"},"variableNames":[{"name":"success","nativeSrc":"18425:7:11","nodeType":"YulIdentifier","src":"18425:7:11"}]},{"nativeSrc":"18495:21:11","nodeType":"YulAssignment","src":"18495:21:11","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:11","nodeType":"YulLiteral","src":"18511:4:11","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:11","nodeType":"YulIdentifier","src":"18505:5:11"},"nativeSrc":"18505:11:11","nodeType":"YulFunctionCall","src":"18505:11:11"},"variableNames":[{"name":"result","nativeSrc":"18495:6:11","nodeType":"YulIdentifier","src":"18495:6:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3663,"isOffset":false,"isSlot":false,"src":"18185:1:11","valueSize":1},{"declaration":3665,"isOffset":false,"isSlot":false,"src":"18223:1:11","valueSize":1},{"declaration":3667,"isOffset":false,"isSlot":false,"src":"18261:1:11","valueSize":1},{"declaration":3672,"isOffset":false,"isSlot":false,"src":"18495:6:11","valueSize":1},{"declaration":3670,"isOffset":false,"isSlot":false,"src":"18425:7:11","valueSize":1}],"flags":["memory-safe"],"id":3682,"nodeType":"InlineAssembly","src":"17088:1438:11"}]},"documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"16191:738:11","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3684,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:11","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"b","nameLocation":"16961:1:11","nodeType":"VariableDeclaration","scope":3684,"src":"16953:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3662,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"e","nameLocation":"16972:1:11","nodeType":"VariableDeclaration","scope":3684,"src":"16964:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3664,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"m","nameLocation":"16983:1:11","nodeType":"VariableDeclaration","scope":3684,"src":"16975:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:11"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"success","nameLocation":"17014:7:11","nodeType":"VariableDeclaration","scope":3684,"src":"17009:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3669,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3672,"mutability":"mutable","name":"result","nameLocation":"17031:6:11","nodeType":"VariableDeclaration","scope":3684,"src":"17023:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3671,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:11"},"scope":4474,"src":"16934:1598:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3719,"nodeType":"Block","src":"18729:179:11","statements":[{"assignments":[3697,3699],"declarations":[{"constant":false,"id":3697,"mutability":"mutable","name":"success","nameLocation":"18745:7:11","nodeType":"VariableDeclaration","scope":3719,"src":"18740:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3696,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3699,"mutability":"mutable","name":"result","nameLocation":"18767:6:11","nodeType":"VariableDeclaration","scope":3719,"src":"18754:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3698,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3705,"initialValue":{"arguments":[{"id":3701,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"18787:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3702,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3689,"src":"18790:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3703,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"18793:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3700,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3684,3766],"referencedDeclaration":3766,"src":"18777:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:11"},{"condition":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:11","subExpression":{"id":3706,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"18810:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3716,"nodeType":"IfStatement","src":"18805:74:11","trueBody":{"id":3715,"nodeType":"Block","src":"18819:60:11","statements":[{"expression":{"arguments":[{"expression":{"id":3711,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"18845:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:11","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1382,"src":"18845:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3708,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"18833:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1415_$","typeString":"type(library Panic)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:11","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1414,"src":"18833:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3714,"nodeType":"ExpressionStatement","src":"18833:35:11"}]}},{"expression":{"id":3717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"18895:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3695,"id":3718,"nodeType":"Return","src":"18888:13:11"}]},"documentation":{"id":3685,"nodeType":"StructuredDocumentation","src":"18538:85:11","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3720,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:11","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"b","nameLocation":"18657:1:11","nodeType":"VariableDeclaration","scope":3720,"src":"18644:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3686,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3689,"mutability":"mutable","name":"e","nameLocation":"18673:1:11","nodeType":"VariableDeclaration","scope":3720,"src":"18660:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3688,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3691,"mutability":"mutable","name":"m","nameLocation":"18689:1:11","nodeType":"VariableDeclaration","scope":3720,"src":"18676:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3690,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:11"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3720,"src":"18715:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3693,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:11"},"scope":4474,"src":"18628:280:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3765,"nodeType":"Block","src":"19162:771:11","statements":[{"condition":{"arguments":[{"id":3735,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"19187:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3734,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"19176:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3744,"nodeType":"IfStatement","src":"19172:47:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3738,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3733,"id":3743,"nodeType":"Return","src":"19191:28:11"}},{"assignments":[3746],"declarations":[{"constant":false,"id":3746,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:11","nodeType":"VariableDeclaration","scope":3765,"src":"19230:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3745,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3749,"initialValue":{"expression":{"id":3747,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"19245:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:11","memberName":"length","nodeType":"MemberAccess","src":"19245:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:11"},{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"19335:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3753,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"19361:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:11","memberName":"length","nodeType":"MemberAccess","src":"19361:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3755,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"19371:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:11","memberName":"length","nodeType":"MemberAccess","src":"19371:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3757,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"19381:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3758,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"19387:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3759,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"19390:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3760,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"19393:1:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3751,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3763,"nodeType":"ExpressionStatement","src":"19335:60:11"},{"AST":{"nativeSrc":"19431:496:11","nodeType":"YulBlock","src":"19431:496:11","statements":[{"nativeSrc":"19445:32:11","nodeType":"YulVariableDeclaration","src":"19445:32:11","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:11","nodeType":"YulIdentifier","src":"19464:6:11"},{"kind":"number","nativeSrc":"19472:4:11","nodeType":"YulLiteral","src":"19472:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:11","nodeType":"YulIdentifier","src":"19460:3:11"},"nativeSrc":"19460:17:11","nodeType":"YulFunctionCall","src":"19460:17:11"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:11","nodeType":"YulTypedName","src":"19449:7:11","type":""}]},{"nativeSrc":"19567:73:11","nodeType":"YulAssignment","src":"19567:73:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:11","nodeType":"YulIdentifier","src":"19589:3:11"},"nativeSrc":"19589:5:11","nodeType":"YulFunctionCall","src":"19589:5:11"},{"kind":"number","nativeSrc":"19596:4:11","nodeType":"YulLiteral","src":"19596:4:11","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:11","nodeType":"YulIdentifier","src":"19602:7:11"},{"arguments":[{"name":"result","nativeSrc":"19617:6:11","nodeType":"YulIdentifier","src":"19617:6:11"}],"functionName":{"name":"mload","nativeSrc":"19611:5:11","nodeType":"YulIdentifier","src":"19611:5:11"},"nativeSrc":"19611:13:11","nodeType":"YulFunctionCall","src":"19611:13:11"},{"name":"dataPtr","nativeSrc":"19626:7:11","nodeType":"YulIdentifier","src":"19626:7:11"},{"name":"mLen","nativeSrc":"19635:4:11","nodeType":"YulIdentifier","src":"19635:4:11"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:11","nodeType":"YulIdentifier","src":"19578:10:11"},"nativeSrc":"19578:62:11","nodeType":"YulFunctionCall","src":"19578:62:11"},"variableNames":[{"name":"success","nativeSrc":"19567:7:11","nodeType":"YulIdentifier","src":"19567:7:11"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:11","nodeType":"YulIdentifier","src":"19796:6:11"},{"name":"mLen","nativeSrc":"19804:4:11","nodeType":"YulIdentifier","src":"19804:4:11"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:11","nodeType":"YulIdentifier","src":"19789:6:11"},"nativeSrc":"19789:20:11","nodeType":"YulFunctionCall","src":"19789:20:11"},"nativeSrc":"19789:20:11","nodeType":"YulExpressionStatement","src":"19789:20:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:11","nodeType":"YulLiteral","src":"19892:4:11","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:11","nodeType":"YulIdentifier","src":"19902:7:11"},{"name":"mLen","nativeSrc":"19911:4:11","nodeType":"YulIdentifier","src":"19911:4:11"}],"functionName":{"name":"add","nativeSrc":"19898:3:11","nodeType":"YulIdentifier","src":"19898:3:11"},"nativeSrc":"19898:18:11","nodeType":"YulFunctionCall","src":"19898:18:11"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:11","nodeType":"YulIdentifier","src":"19885:6:11"},"nativeSrc":"19885:32:11","nodeType":"YulFunctionCall","src":"19885:32:11"},"nativeSrc":"19885:32:11","nodeType":"YulExpressionStatement","src":"19885:32:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":3746,"isOffset":false,"isSlot":false,"src":"19635:4:11","valueSize":1},{"declaration":3746,"isOffset":false,"isSlot":false,"src":"19804:4:11","valueSize":1},{"declaration":3746,"isOffset":false,"isSlot":false,"src":"19911:4:11","valueSize":1},{"declaration":3732,"isOffset":false,"isSlot":false,"src":"19464:6:11","valueSize":1},{"declaration":3732,"isOffset":false,"isSlot":false,"src":"19617:6:11","valueSize":1},{"declaration":3732,"isOffset":false,"isSlot":false,"src":"19796:6:11","valueSize":1},{"declaration":3730,"isOffset":false,"isSlot":false,"src":"19567:7:11","valueSize":1}],"flags":["memory-safe"],"id":3764,"nodeType":"InlineAssembly","src":"19406:521:11"}]},"documentation":{"id":3721,"nodeType":"StructuredDocumentation","src":"18914:88:11","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3766,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:11","nodeType":"FunctionDefinition","parameters":{"id":3728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"b","nameLocation":"19048:1:11","nodeType":"VariableDeclaration","scope":3766,"src":"19035:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3722,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3725,"mutability":"mutable","name":"e","nameLocation":"19072:1:11","nodeType":"VariableDeclaration","scope":3766,"src":"19059:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3724,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3727,"mutability":"mutable","name":"m","nameLocation":"19096:1:11","nodeType":"VariableDeclaration","scope":3766,"src":"19083:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3726,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:11"},"returnParameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"success","nameLocation":"19132:7:11","nodeType":"VariableDeclaration","scope":3766,"src":"19127:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3729,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"result","nameLocation":"19154:6:11","nodeType":"VariableDeclaration","scope":3766,"src":"19141:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3731,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:11"},"scope":4474,"src":"19007:926:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3798,"nodeType":"Block","src":"20088:176:11","statements":[{"body":{"id":3794,"nodeType":"Block","src":"20145:92:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3785,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"20163:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3787,"indexExpression":{"id":3786,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"20173:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3793,"nodeType":"IfStatement","src":"20159:68:11","trueBody":{"id":3792,"nodeType":"Block","src":"20182:45:11","statements":[{"expression":{"hexValue":"66616c7365","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3773,"id":3791,"nodeType":"Return","src":"20200:12:11"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"20118:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3779,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"20122:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:11","memberName":"length","nodeType":"MemberAccess","src":"20122:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"initializationExpression":{"assignments":[3775],"declarations":[{"constant":false,"id":3775,"mutability":"mutable","name":"i","nameLocation":"20111:1:11","nodeType":"VariableDeclaration","scope":3795,"src":"20103:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3777,"initialValue":{"hexValue":"30","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:11","subExpression":{"id":3782,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"20142:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3784,"nodeType":"ExpressionStatement","src":"20140:3:11"},"nodeType":"ForStatement","src":"20098:139:11"},{"expression":{"hexValue":"74727565","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3773,"id":3797,"nodeType":"Return","src":"20246:11:11"}]},"documentation":{"id":3767,"nodeType":"StructuredDocumentation","src":"19939:72:11","text":" @dev Returns whether the provided byte array is zero."},"id":3799,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:11","nodeType":"FunctionDefinition","parameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:11","nodeType":"VariableDeclaration","scope":3799,"src":"20036:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3768,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:11"},"returnParameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3799,"src":"20082:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3771,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:11"},"scope":4474,"src":"20016:248:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4017,"nodeType":"Block","src":"20624:5124:11","statements":[{"id":4016,"nodeType":"UncheckedBlock","src":"20634:5108:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"20728:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3813,"nodeType":"IfStatement","src":"20724:53:11","trueBody":{"id":3812,"nodeType":"Block","src":"20736:41:11","statements":[{"expression":{"id":3810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"20761:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":3811,"nodeType":"Return","src":"20754:8:11"}]}},{"assignments":[3815],"declarations":[{"constant":false,"id":3815,"mutability":"mutable","name":"aa","nameLocation":"21712:2:11","nodeType":"VariableDeclaration","scope":4016,"src":"21704:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3817,"initialValue":{"id":3816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"21717:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:11"},{"assignments":[3819],"declarations":[{"constant":false,"id":3819,"mutability":"mutable","name":"xn","nameLocation":"21740:2:11","nodeType":"VariableDeclaration","scope":4016,"src":"21732:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3821,"initialValue":{"hexValue":"31","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3822,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"21765:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3837,"nodeType":"IfStatement","src":"21761:92:11","trueBody":{"id":3836,"nodeType":"Block","src":"21783:70:11","statements":[{"expression":{"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3828,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"21801:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3831,"nodeType":"ExpressionStatement","src":"21801:10:11"},{"expression":{"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3832,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"21829:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3835,"nodeType":"ExpressionStatement","src":"21829:9:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3838,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"21870:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3853,"nodeType":"IfStatement","src":"21866:90:11","trueBody":{"id":3852,"nodeType":"Block","src":"21887:69:11","statements":[{"expression":{"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3844,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"21905:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3847,"nodeType":"ExpressionStatement","src":"21905:9:11"},{"expression":{"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3848,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"21932:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3851,"nodeType":"ExpressionStatement","src":"21932:9:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3854,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"21973:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3869,"nodeType":"IfStatement","src":"21969:90:11","trueBody":{"id":3868,"nodeType":"Block","src":"21990:69:11","statements":[{"expression":{"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3860,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22008:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3863,"nodeType":"ExpressionStatement","src":"22008:9:11"},{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3864,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"22035:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3867,"nodeType":"ExpressionStatement","src":"22035:9:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22076:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:11","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"nodeType":"IfStatement","src":"22072:89:11","trueBody":{"id":3884,"nodeType":"Block","src":"22093:68:11","statements":[{"expression":{"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3876,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22111:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3879,"nodeType":"ExpressionStatement","src":"22111:9:11"},{"expression":{"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3880,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"22138:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3883,"nodeType":"ExpressionStatement","src":"22138:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22178:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3901,"nodeType":"IfStatement","src":"22174:87:11","trueBody":{"id":3900,"nodeType":"Block","src":"22194:67:11","statements":[{"expression":{"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3892,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22212:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3895,"nodeType":"ExpressionStatement","src":"22212:8:11"},{"expression":{"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3896,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"22238:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3899,"nodeType":"ExpressionStatement","src":"22238:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3902,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22278:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":3906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3917,"nodeType":"IfStatement","src":"22274:87:11","trueBody":{"id":3916,"nodeType":"Block","src":"22294:67:11","statements":[{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3908,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22312:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3911,"nodeType":"ExpressionStatement","src":"22312:8:11"},{"expression":{"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3912,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"22338:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3915,"nodeType":"ExpressionStatement","src":"22338:8:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3918,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"22378:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":3922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3929,"nodeType":"IfStatement","src":"22374:61:11","trueBody":{"id":3928,"nodeType":"Block","src":"22394:41:11","statements":[{"expression":{"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3924,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"22412:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3927,"nodeType":"ExpressionStatement","src":"22412:8:11"}]}},{"expression":{"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3930,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"22855:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3932,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"22865:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3938,"nodeType":"ExpressionStatement","src":"22855:18:11"},{"expression":{"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3939,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"24760:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"24766:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"24771:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3942,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"24775:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3949,"nodeType":"ExpressionStatement","src":"24760:23:11"},{"expression":{"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3950,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"24869:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3951,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"24875:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3952,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"24880:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3953,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"24884:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3960,"nodeType":"ExpressionStatement","src":"24869:23:11"},{"expression":{"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3961,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"24980:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3962,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"24986:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"24991:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3964,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"24995:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3971,"nodeType":"ExpressionStatement","src":"24980:23:11"},{"expression":{"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3972,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25089:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25095:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3974,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"25100:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3975,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25104:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3982,"nodeType":"ExpressionStatement","src":"25089:23:11"},{"expression":{"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3983,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25199:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3984,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25205:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"25210:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3986,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25214:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3993,"nodeType":"ExpressionStatement","src":"25199:23:11"},{"expression":{"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3994,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25309:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3995,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25315:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"25320:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3997,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25324:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4000,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4004,"nodeType":"ExpressionStatement","src":"25309:23:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4005,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25698:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25719:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"25724:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4010,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"25728:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4006,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"25703:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"25703:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3806,"id":4015,"nodeType":"Return","src":"25691:40:11"}]}]},"documentation":{"id":3800,"nodeType":"StructuredDocumentation","src":"20270:292:11","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4018,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:11","nodeType":"FunctionDefinition","parameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"a","nameLocation":"20589:1:11","nodeType":"VariableDeclaration","scope":4018,"src":"20581:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:11"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4018,"src":"20615:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:11"},"scope":4474,"src":"20567:5181:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4051,"nodeType":"Block","src":"25921:171:11","statements":[{"id":4050,"nodeType":"UncheckedBlock","src":"25931:155:11","statements":[{"assignments":[4030],"declarations":[{"constant":false,"id":4030,"mutability":"mutable","name":"result","nameLocation":"25963:6:11","nodeType":"VariableDeclaration","scope":4050,"src":"25955:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4029,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4034,"initialValue":{"arguments":[{"id":4032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"25977:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4031,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4018,4052],"referencedDeclaration":4018,"src":"25972:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4035,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"26000:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4039,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"26042:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}],"id":4038,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"26025:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2865_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"26055:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4042,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"26064:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"26073:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4036,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"26009:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"26009:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4028,"id":4049,"nodeType":"Return","src":"25993:82:11"}]}]},"documentation":{"id":4019,"nodeType":"StructuredDocumentation","src":"25754:86:11","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4052,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:11","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"a","nameLocation":"25867:1:11","nodeType":"VariableDeclaration","scope":4052,"src":"25859:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:11","nodeType":"VariableDeclaration","scope":4052,"src":"25870:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"},"typeName":{"id":4023,"nodeType":"UserDefinedTypeName","pathNode":{"id":4022,"name":"Rounding","nameLocations":["25870:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2865,"src":"25870:8:11"},"referencedDeclaration":2865,"src":"25870:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:11"},"returnParameters":{"id":4028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4052,"src":"25912:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:11"},"scope":4474,"src":"25845:247:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4142,"nodeType":"Block","src":"26281:2334:11","statements":[{"expression":{"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26363:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"26383:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4061,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"26367:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"26367:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4070,"nodeType":"ExpressionStatement","src":"26363:64:11"},{"expression":{"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4071,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26503:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"26525:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4075,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26530:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4072,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"26508:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"26508:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:11","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4084,"nodeType":"ExpressionStatement","src":"26503:56:11"},{"expression":{"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4085,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26634:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"26656:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4089,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26661:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4086,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"26639:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"26639:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4098,"nodeType":"ExpressionStatement","src":"26634:48:11"},{"expression":{"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4099,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26757:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4102,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"26779:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4103,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26784:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:11","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4100,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"26762:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"26762:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4112,"nodeType":"ExpressionStatement","src":"26757:44:11"},{"expression":{"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4113,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26874:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4116,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"26896:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4117,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26901:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4114,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"26879:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"26879:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4126,"nodeType":"ExpressionStatement","src":"26874:42:11"},{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4127,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"26988:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4130,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"27010:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4131,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"27015:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4128,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"26993:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"26993:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4140,"nodeType":"ExpressionStatement","src":"26988:41:11"},{"AST":{"nativeSrc":"28490:119:11","nodeType":"YulBlock","src":"28490:119:11","statements":[{"nativeSrc":"28504:95:11","nodeType":"YulAssignment","src":"28504:95:11","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:11","nodeType":"YulIdentifier","src":"28512:1:11"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:11","nodeType":"YulIdentifier","src":"28524:1:11"},{"name":"x","nativeSrc":"28527:1:11","nodeType":"YulIdentifier","src":"28527:1:11"}],"functionName":{"name":"shr","nativeSrc":"28520:3:11","nodeType":"YulIdentifier","src":"28520:3:11"},"nativeSrc":"28520:9:11","nodeType":"YulFunctionCall","src":"28520:9:11"},{"kind":"number","nativeSrc":"28531:66:11","nodeType":"YulLiteral","src":"28531:66:11","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:11","nodeType":"YulIdentifier","src":"28515:4:11"},"nativeSrc":"28515:83:11","nodeType":"YulFunctionCall","src":"28515:83:11"}],"functionName":{"name":"or","nativeSrc":"28509:2:11","nodeType":"YulIdentifier","src":"28509:2:11"},"nativeSrc":"28509:90:11","nodeType":"YulFunctionCall","src":"28509:90:11"},"variableNames":[{"name":"r","nativeSrc":"28504:1:11","nodeType":"YulIdentifier","src":"28504:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4058,"isOffset":false,"isSlot":false,"src":"28504:1:11","valueSize":1},{"declaration":4058,"isOffset":false,"isSlot":false,"src":"28512:1:11","valueSize":1},{"declaration":4058,"isOffset":false,"isSlot":false,"src":"28524:1:11","valueSize":1},{"declaration":4055,"isOffset":false,"isSlot":false,"src":"28527:1:11","valueSize":1}],"flags":["memory-safe"],"id":4141,"nodeType":"InlineAssembly","src":"28465:144:11"}]},"documentation":{"id":4053,"nodeType":"StructuredDocumentation","src":"26098:119:11","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4143,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:11","nodeType":"FunctionDefinition","parameters":{"id":4056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"x","nameLocation":"26244:1:11","nodeType":"VariableDeclaration","scope":4143,"src":"26236:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4054,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:11"},"returnParameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"r","nameLocation":"26278:1:11","nodeType":"VariableDeclaration","scope":4143,"src":"26270:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:11"},"scope":4474,"src":"26222:2393:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4176,"nodeType":"Block","src":"28848:175:11","statements":[{"id":4175,"nodeType":"UncheckedBlock","src":"28858:159:11","statements":[{"assignments":[4155],"declarations":[{"constant":false,"id":4155,"mutability":"mutable","name":"result","nameLocation":"28890:6:11","nodeType":"VariableDeclaration","scope":4175,"src":"28882:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4159,"initialValue":{"arguments":[{"id":4157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"28904:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4156,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4143,4177],"referencedDeclaration":4143,"src":"28899:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"28931:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4164,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"28973:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}],"id":4163,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"28956:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2865_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"28991:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"29000:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4161,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"28940:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"28940:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4153,"id":4174,"nodeType":"Return","src":"28924:82:11"}]}]},"documentation":{"id":4144,"nodeType":"StructuredDocumentation","src":"28621:142:11","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4177,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:11","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4146,"mutability":"mutable","name":"value","nameLocation":"28790:5:11","nodeType":"VariableDeclaration","scope":4177,"src":"28782:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4145,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4149,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:11","nodeType":"VariableDeclaration","scope":4177,"src":"28797:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"},"typeName":{"id":4148,"nodeType":"UserDefinedTypeName","pathNode":{"id":4147,"name":"Rounding","nameLocations":["28797:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2865,"src":"28797:8:11"},"referencedDeclaration":2865,"src":"28797:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:11"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4177,"src":"28839:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:11"},"scope":4474,"src":"28768:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"29216:854:11","statements":[{"assignments":[4186],"declarations":[{"constant":false,"id":4186,"mutability":"mutable","name":"result","nameLocation":"29234:6:11","nodeType":"VariableDeclaration","scope":4305,"src":"29226:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4188,"initialValue":{"hexValue":"30","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:11"},{"id":4302,"nodeType":"UncheckedBlock","src":"29254:787:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29282:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4205,"nodeType":"IfStatement","src":"29278:103:11","trueBody":{"id":4204,"nodeType":"Block","src":"29301:80:11","statements":[{"expression":{"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29319:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4199,"nodeType":"ExpressionStatement","src":"29319:17:11"},{"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"29354:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4203,"nodeType":"ExpressionStatement","src":"29354:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29398:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4222,"nodeType":"IfStatement","src":"29394:103:11","trueBody":{"id":4221,"nodeType":"Block","src":"29417:80:11","statements":[{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29435:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4216,"nodeType":"ExpressionStatement","src":"29435:17:11"},{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"29470:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4220,"nodeType":"ExpressionStatement","src":"29470:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29514:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4239,"nodeType":"IfStatement","src":"29510:103:11","trueBody":{"id":4238,"nodeType":"Block","src":"29533:80:11","statements":[{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29551:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:11","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4233,"nodeType":"ExpressionStatement","src":"29551:17:11"},{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4234,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"29586:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ExpressionStatement","src":"29586:12:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29630:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4256,"nodeType":"IfStatement","src":"29626:100:11","trueBody":{"id":4255,"nodeType":"Block","src":"29648:78:11","statements":[{"expression":{"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29666:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4250,"nodeType":"ExpressionStatement","src":"29666:16:11"},{"expression":{"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4251,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"29700:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4254,"nodeType":"ExpressionStatement","src":"29700:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29743:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4273,"nodeType":"IfStatement","src":"29739:100:11","trueBody":{"id":4272,"nodeType":"Block","src":"29761:78:11","statements":[{"expression":{"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29779:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4267,"nodeType":"ExpressionStatement","src":"29779:16:11"},{"expression":{"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"29813:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4271,"nodeType":"ExpressionStatement","src":"29813:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29856:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4290,"nodeType":"IfStatement","src":"29852:100:11","trueBody":{"id":4289,"nodeType":"Block","src":"29874:78:11","statements":[{"expression":{"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29892:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:11","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4284,"nodeType":"ExpressionStatement","src":"29892:16:11"},{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"29926:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4288,"nodeType":"ExpressionStatement","src":"29926:11:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"29969:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4301,"nodeType":"IfStatement","src":"29965:66:11","trueBody":{"id":4300,"nodeType":"Block","src":"29987:44:11","statements":[{"expression":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4296,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"30005:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4299,"nodeType":"ExpressionStatement","src":"30005:11:11"}]}}]},{"expression":{"id":4303,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"30057:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4184,"id":4304,"nodeType":"Return","src":"30050:13:11"}]},"documentation":{"id":4178,"nodeType":"StructuredDocumentation","src":"29029:120:11","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:11","nodeType":"FunctionDefinition","parameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"value","nameLocation":"29177:5:11","nodeType":"VariableDeclaration","scope":4306,"src":"29169:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:11"},"returnParameters":{"id":4184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4306,"src":"29207:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4182,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:11"},"scope":4474,"src":"29154:916:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4339,"nodeType":"Block","src":"30305:177:11","statements":[{"id":4338,"nodeType":"UncheckedBlock","src":"30315:161:11","statements":[{"assignments":[4318],"declarations":[{"constant":false,"id":4318,"mutability":"mutable","name":"result","nameLocation":"30347:6:11","nodeType":"VariableDeclaration","scope":4338,"src":"30339:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4322,"initialValue":{"arguments":[{"id":4320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"30362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4319,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4306,4340],"referencedDeclaration":4306,"src":"30356:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"30389:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4327,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"30431:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}],"id":4326,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"30414:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2865_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"30450:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"30459:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4324,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"30398:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"30398:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4316,"id":4337,"nodeType":"Return","src":"30382:83:11"}]}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"30076:143:11","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4340,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:11","nodeType":"FunctionDefinition","parameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"value","nameLocation":"30247:5:11","nodeType":"VariableDeclaration","scope":4340,"src":"30239:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4312,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:11","nodeType":"VariableDeclaration","scope":4340,"src":"30254:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"},"typeName":{"id":4311,"nodeType":"UserDefinedTypeName","pathNode":{"id":4310,"name":"Rounding","nameLocations":["30254:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2865,"src":"30254:8:11"},"referencedDeclaration":2865,"src":"30254:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:11"},"returnParameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4340,"src":"30296:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4314,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:11"},"scope":4474,"src":"30224:258:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4416,"nodeType":"Block","src":"30800:675:11","statements":[{"expression":{"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4348,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"30882:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"30902:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:11","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4349,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"30886:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"30886:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4358,"nodeType":"ExpressionStatement","src":"30882:64:11"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4359,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"31022:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"31044:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4363,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"31049:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:11","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4360,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"31027:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"31027:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:11","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4372,"nodeType":"ExpressionStatement","src":"31022:56:11"},{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4373,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"31153:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"31175:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4377,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"31180:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:11","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4374,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"31158:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"31158:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:11","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"31153:48:11"},{"expression":{"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4387,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"31276:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4390,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"31298:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4391,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"31303:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:11","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4388,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"31281:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"31281:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4400,"nodeType":"ExpressionStatement","src":"31276:44:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"31426:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"31453:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4408,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"31458:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4405,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"31436:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"31436:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4347,"id":4415,"nodeType":"Return","src":"31418:50:11"}]},"documentation":{"id":4341,"nodeType":"StructuredDocumentation","src":"30488:246:11","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4417,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:11","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4343,"mutability":"mutable","name":"x","nameLocation":"30763:1:11","nodeType":"VariableDeclaration","scope":4417,"src":"30755:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:11"},"returnParameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"r","nameLocation":"30797:1:11","nodeType":"VariableDeclaration","scope":4417,"src":"30789:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:11"},"scope":4474,"src":"30739:736:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4453,"nodeType":"Block","src":"31712:184:11","statements":[{"id":4452,"nodeType":"UncheckedBlock","src":"31722:168:11","statements":[{"assignments":[4429],"declarations":[{"constant":false,"id":4429,"mutability":"mutable","name":"result","nameLocation":"31754:6:11","nodeType":"VariableDeclaration","scope":4452,"src":"31746:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4433,"initialValue":{"arguments":[{"id":4431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"31770:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4430,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4417,4454],"referencedDeclaration":4417,"src":"31763:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:11"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4434,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"31797:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4438,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"31839:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}],"id":4437,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"31822:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2865_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"31858:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:11","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"31873:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4435,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"31806:8:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"31806:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4427,"id":4451,"nodeType":"Return","src":"31790:89:11"}]}]},"documentation":{"id":4418,"nodeType":"StructuredDocumentation","src":"31481:144:11","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:11","nodeType":"FunctionDefinition","parameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4420,"mutability":"mutable","name":"value","nameLocation":"31654:5:11","nodeType":"VariableDeclaration","scope":4454,"src":"31646:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4423,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:11","nodeType":"VariableDeclaration","scope":4454,"src":"31661:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"},"typeName":{"id":4422,"nodeType":"UserDefinedTypeName","pathNode":{"id":4421,"name":"Rounding","nameLocations":["31661:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2865,"src":"31661:8:11"},"referencedDeclaration":2865,"src":"31661:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:11"},"returnParameters":{"id":4427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4454,"src":"31703:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4425,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:11"},"scope":4474,"src":"31630:266:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4472,"nodeType":"Block","src":"32094:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4465,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"32117:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}],"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4463,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:11","typeDescriptions":{}}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4462,"id":4471,"nodeType":"Return","src":"32104:31:11"}]},"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"31902:113:11","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4473,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:11","nodeType":"FunctionDefinition","parameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:11","nodeType":"VariableDeclaration","scope":4473,"src":"32046:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"},"typeName":{"id":4457,"nodeType":"UserDefinedTypeName","pathNode":{"id":4456,"name":"Rounding","nameLocations":["32046:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":2865,"src":"32046:8:11"},"referencedDeclaration":2865,"src":"32046:8:11","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2865","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:11"},"returnParameters":{"id":4462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4473,"src":"32088:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4460,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:11"},"scope":4474,"src":"32020:122:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4475,"src":"281:31863:11","usedErrors":[],"usedEvents":[]}],"src":"103:32042:11"},"id":11},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6239]},"id":6240,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4476,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4477,"nodeType":"StructuredDocumentation","src":"218:550:12","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6239,"linearizedBaseContracts":[6239],"name":"SafeCast","nameLocation":"777:8:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4478,"nodeType":"StructuredDocumentation","src":"792:68:12","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4484,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:12","nodeType":"ErrorDefinition","parameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"bits","nameLocation":"908:4:12","nodeType":"VariableDeclaration","scope":4484,"src":"902:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4479,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4482,"mutability":"mutable","name":"value","nameLocation":"922:5:12","nodeType":"VariableDeclaration","scope":4484,"src":"914:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:12"},"src":"865:64:12"},{"documentation":{"id":4485,"nodeType":"StructuredDocumentation","src":"935:75:12","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4489,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:12","nodeType":"ErrorDefinition","parameters":{"id":4488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4487,"mutability":"mutable","name":"value","nameLocation":"1056:5:12","nodeType":"VariableDeclaration","scope":4489,"src":"1049:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4486,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:12"},"src":"1015:48:12"},{"documentation":{"id":4490,"nodeType":"StructuredDocumentation","src":"1069:67:12","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4496,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:12","nodeType":"ErrorDefinition","parameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"bits","nameLocation":"1183:4:12","nodeType":"VariableDeclaration","scope":4496,"src":"1177:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4491,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4494,"mutability":"mutable","name":"value","nameLocation":"1196:5:12","nodeType":"VariableDeclaration","scope":4496,"src":"1189:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4493,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:12"},"src":"1141:62:12"},{"documentation":{"id":4497,"nodeType":"StructuredDocumentation","src":"1209:75:12","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4501,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:12","nodeType":"ErrorDefinition","parameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"value","nameLocation":"1331:5:12","nodeType":"VariableDeclaration","scope":4501,"src":"1323:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:12"},"src":"1289:49:12"},{"body":{"id":4528,"nodeType":"Block","src":"1695:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"1709:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4511,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4510,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:12","memberName":"max","nodeType":"MemberAccess","src":"1717:17:12","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4522,"nodeType":"IfStatement","src":"1705:105:12","trueBody":{"id":4521,"nodeType":"Block","src":"1736:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:12","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"1793:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4516,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"1757:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4520,"nodeType":"RevertStatement","src":"1750:49:12"}]}},{"expression":{"arguments":[{"id":4525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"1834:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4523,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:12","typeDescriptions":{}}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4508,"id":4527,"nodeType":"Return","src":"1819:21:12"}]},"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"1344:280:12","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4529,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:12","nodeType":"FunctionDefinition","parameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"value","nameLocation":"1656:5:12","nodeType":"VariableDeclaration","scope":4529,"src":"1648:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:12"},"returnParameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4529,"src":"1686:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4506,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:12","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:12"},"scope":6239,"src":"1629:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4556,"nodeType":"Block","src":"2204:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2218:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4539,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4538,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:12","memberName":"max","nodeType":"MemberAccess","src":"2226:17:12","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4550,"nodeType":"IfStatement","src":"2214:105:12","trueBody":{"id":4549,"nodeType":"Block","src":"2245:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:12","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2302:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4544,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"2266:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4548,"nodeType":"RevertStatement","src":"2259:49:12"}]}},{"expression":{"arguments":[{"id":4553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2343:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4551,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:12","typeDescriptions":{}}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4536,"id":4555,"nodeType":"Return","src":"2328:21:12"}]},"documentation":{"id":4530,"nodeType":"StructuredDocumentation","src":"1853:280:12","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4557,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:12","nodeType":"FunctionDefinition","parameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"value","nameLocation":"2165:5:12","nodeType":"VariableDeclaration","scope":4557,"src":"2157:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:12"},"returnParameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4557,"src":"2195:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4534,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:12","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:12"},"scope":6239,"src":"2138:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4584,"nodeType":"Block","src":"2713:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2727:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4567,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4566,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:12","memberName":"max","nodeType":"MemberAccess","src":"2735:17:12","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"IfStatement","src":"2723:105:12","trueBody":{"id":4577,"nodeType":"Block","src":"2754:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:12","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2811:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4572,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"2775:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4576,"nodeType":"RevertStatement","src":"2768:49:12"}]}},{"expression":{"arguments":[{"id":4581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2852:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4579,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:12","typeDescriptions":{}}},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4564,"id":4583,"nodeType":"Return","src":"2837:21:12"}]},"documentation":{"id":4558,"nodeType":"StructuredDocumentation","src":"2362:280:12","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4585,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:12","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"value","nameLocation":"2674:5:12","nodeType":"VariableDeclaration","scope":4585,"src":"2666:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:12"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4585,"src":"2704:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4562,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:12","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:12"},"scope":6239,"src":"2647:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4612,"nodeType":"Block","src":"3222:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"3236:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4595,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4594,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:12","memberName":"max","nodeType":"MemberAccess","src":"3244:17:12","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4606,"nodeType":"IfStatement","src":"3232:105:12","trueBody":{"id":4605,"nodeType":"Block","src":"3263:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:12","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"3320:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4600,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"3284:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4604,"nodeType":"RevertStatement","src":"3277:49:12"}]}},{"expression":{"arguments":[{"id":4609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"3361:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4607,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:12","typeDescriptions":{}}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4592,"id":4611,"nodeType":"Return","src":"3346:21:12"}]},"documentation":{"id":4586,"nodeType":"StructuredDocumentation","src":"2871:280:12","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4613,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:12","nodeType":"FunctionDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"value","nameLocation":"3183:5:12","nodeType":"VariableDeclaration","scope":4613,"src":"3175:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:12"},"returnParameters":{"id":4592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4613,"src":"3213:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4590,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:12","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:12"},"scope":6239,"src":"3156:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4640,"nodeType":"Block","src":"3731:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3745:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4623,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4622,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:12","memberName":"max","nodeType":"MemberAccess","src":"3753:17:12","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4634,"nodeType":"IfStatement","src":"3741:105:12","trueBody":{"id":4633,"nodeType":"Block","src":"3772:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:12","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3829:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4628,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"3793:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4632,"nodeType":"RevertStatement","src":"3786:49:12"}]}},{"expression":{"arguments":[{"id":4637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"3870:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4635,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:12","typeDescriptions":{}}},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4620,"id":4639,"nodeType":"Return","src":"3855:21:12"}]},"documentation":{"id":4614,"nodeType":"StructuredDocumentation","src":"3380:280:12","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4641,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:12","nodeType":"FunctionDefinition","parameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"value","nameLocation":"3692:5:12","nodeType":"VariableDeclaration","scope":4641,"src":"3684:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4615,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:12"},"returnParameters":{"id":4620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4641,"src":"3722:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4618,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:12","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:12"},"scope":6239,"src":"3665:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4668,"nodeType":"Block","src":"4240:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"4254:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4651,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4650,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:12","memberName":"max","nodeType":"MemberAccess","src":"4262:17:12","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4662,"nodeType":"IfStatement","src":"4250:105:12","trueBody":{"id":4661,"nodeType":"Block","src":"4281:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:12","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"4338:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4656,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"4302:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4660,"nodeType":"RevertStatement","src":"4295:49:12"}]}},{"expression":{"arguments":[{"id":4665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"4379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4663,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:12","typeDescriptions":{}}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4648,"id":4667,"nodeType":"Return","src":"4364:21:12"}]},"documentation":{"id":4642,"nodeType":"StructuredDocumentation","src":"3889:280:12","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4669,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:12","nodeType":"FunctionDefinition","parameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"value","nameLocation":"4201:5:12","nodeType":"VariableDeclaration","scope":4669,"src":"4193:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4643,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:12"},"returnParameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4669,"src":"4231:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4646,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:12","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:12"},"scope":6239,"src":"4174:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4696,"nodeType":"Block","src":"4749:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"4763:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4679,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4678,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:12","memberName":"max","nodeType":"MemberAccess","src":"4771:17:12","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4690,"nodeType":"IfStatement","src":"4759:105:12","trueBody":{"id":4689,"nodeType":"Block","src":"4790:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:12","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"4847:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4684,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"4811:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4688,"nodeType":"RevertStatement","src":"4804:49:12"}]}},{"expression":{"arguments":[{"id":4693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4672,"src":"4888:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4691,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:12","typeDescriptions":{}}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4676,"id":4695,"nodeType":"Return","src":"4873:21:12"}]},"documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"4398:280:12","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4697,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:12","nodeType":"FunctionDefinition","parameters":{"id":4673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4672,"mutability":"mutable","name":"value","nameLocation":"4710:5:12","nodeType":"VariableDeclaration","scope":4697,"src":"4702:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:12"},"returnParameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4697,"src":"4740:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4674,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:12","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:12"},"scope":6239,"src":"4683:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4724,"nodeType":"Block","src":"5258:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"5272:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4707,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4706,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:12","memberName":"max","nodeType":"MemberAccess","src":"5280:17:12","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"5268:105:12","trueBody":{"id":4717,"nodeType":"Block","src":"5299:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:12","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"5356:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4712,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5320:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"RevertStatement","src":"5313:49:12"}]}},{"expression":{"arguments":[{"id":4721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"5397:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4719,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:12","typeDescriptions":{}}},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4704,"id":4723,"nodeType":"Return","src":"5382:21:12"}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"4907:280:12","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4725,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:12","nodeType":"FunctionDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"value","nameLocation":"5219:5:12","nodeType":"VariableDeclaration","scope":4725,"src":"5211:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:12"},"returnParameters":{"id":4704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4725,"src":"5249:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4702,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:12","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:12"},"scope":6239,"src":"5192:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4752,"nodeType":"Block","src":"5767:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"5781:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4735,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4734,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:12","memberName":"max","nodeType":"MemberAccess","src":"5789:17:12","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4746,"nodeType":"IfStatement","src":"5777:105:12","trueBody":{"id":4745,"nodeType":"Block","src":"5808:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:12","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"5865:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4740,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"5829:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4744,"nodeType":"RevertStatement","src":"5822:49:12"}]}},{"expression":{"arguments":[{"id":4749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"5906:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4747,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:12","typeDescriptions":{}}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4732,"id":4751,"nodeType":"Return","src":"5891:21:12"}]},"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"5416:280:12","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4753,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:12","nodeType":"FunctionDefinition","parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"value","nameLocation":"5728:5:12","nodeType":"VariableDeclaration","scope":4753,"src":"5720:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:12"},"returnParameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4753,"src":"5758:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4730,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:12","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:12"},"scope":6239,"src":"5701:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4780,"nodeType":"Block","src":"6276:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"6290:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4763,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4762,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:12","memberName":"max","nodeType":"MemberAccess","src":"6298:17:12","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4774,"nodeType":"IfStatement","src":"6286:105:12","trueBody":{"id":4773,"nodeType":"Block","src":"6317:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:12","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"6374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4768,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"6338:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4772,"nodeType":"RevertStatement","src":"6331:49:12"}]}},{"expression":{"arguments":[{"id":4777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"6415:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4775,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:12","typeDescriptions":{}}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4760,"id":4779,"nodeType":"Return","src":"6400:21:12"}]},"documentation":{"id":4754,"nodeType":"StructuredDocumentation","src":"5925:280:12","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4781,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:12","nodeType":"FunctionDefinition","parameters":{"id":4757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"value","nameLocation":"6237:5:12","nodeType":"VariableDeclaration","scope":4781,"src":"6229:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:12"},"returnParameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4781,"src":"6267:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4758,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:12","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:12"},"scope":6239,"src":"6210:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4808,"nodeType":"Block","src":"6785:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"6799:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4791,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4790,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:12","memberName":"max","nodeType":"MemberAccess","src":"6807:17:12","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4802,"nodeType":"IfStatement","src":"6795:105:12","trueBody":{"id":4801,"nodeType":"Block","src":"6826:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:12","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"6883:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4796,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"6847:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4800,"nodeType":"RevertStatement","src":"6840:49:12"}]}},{"expression":{"arguments":[{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"6924:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4803,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:12","typeDescriptions":{}}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4788,"id":4807,"nodeType":"Return","src":"6909:21:12"}]},"documentation":{"id":4782,"nodeType":"StructuredDocumentation","src":"6434:280:12","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4809,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:12","nodeType":"FunctionDefinition","parameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"value","nameLocation":"6746:5:12","nodeType":"VariableDeclaration","scope":4809,"src":"6738:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:12"},"returnParameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4809,"src":"6776:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4786,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:12","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:12"},"scope":6239,"src":"6719:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4836,"nodeType":"Block","src":"7294:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"7308:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4819,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4818,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:12","memberName":"max","nodeType":"MemberAccess","src":"7316:17:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4830,"nodeType":"IfStatement","src":"7304:105:12","trueBody":{"id":4829,"nodeType":"Block","src":"7335:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:12","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"7392:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4824,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"7356:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4828,"nodeType":"RevertStatement","src":"7349:49:12"}]}},{"expression":{"arguments":[{"id":4833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"7433:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4831,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:12","typeDescriptions":{}}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4816,"id":4835,"nodeType":"Return","src":"7418:21:12"}]},"documentation":{"id":4810,"nodeType":"StructuredDocumentation","src":"6943:280:12","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4837,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:12","nodeType":"FunctionDefinition","parameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"value","nameLocation":"7255:5:12","nodeType":"VariableDeclaration","scope":4837,"src":"7247:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4811,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:12"},"returnParameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4837,"src":"7285:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4814,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:12","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:12"},"scope":6239,"src":"7228:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4864,"nodeType":"Block","src":"7803:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"7817:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4847,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4846,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:12","memberName":"max","nodeType":"MemberAccess","src":"7825:17:12","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4858,"nodeType":"IfStatement","src":"7813:105:12","trueBody":{"id":4857,"nodeType":"Block","src":"7844:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:12","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"7901:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4852,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"7865:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4856,"nodeType":"RevertStatement","src":"7858:49:12"}]}},{"expression":{"arguments":[{"id":4861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"7942:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4859,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:12","typeDescriptions":{}}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4844,"id":4863,"nodeType":"Return","src":"7927:21:12"}]},"documentation":{"id":4838,"nodeType":"StructuredDocumentation","src":"7452:280:12","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4865,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:12","nodeType":"FunctionDefinition","parameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"value","nameLocation":"7764:5:12","nodeType":"VariableDeclaration","scope":4865,"src":"7756:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4839,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:12"},"returnParameters":{"id":4844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4865,"src":"7794:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4842,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:12","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:12"},"scope":6239,"src":"7737:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4892,"nodeType":"Block","src":"8312:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"8326:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4875,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4874,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:12","memberName":"max","nodeType":"MemberAccess","src":"8334:17:12","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4886,"nodeType":"IfStatement","src":"8322:105:12","trueBody":{"id":4885,"nodeType":"Block","src":"8353:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:12","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"8410:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4880,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"8374:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4884,"nodeType":"RevertStatement","src":"8367:49:12"}]}},{"expression":{"arguments":[{"id":4889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"8451:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4887,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:12","typeDescriptions":{}}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4872,"id":4891,"nodeType":"Return","src":"8436:21:12"}]},"documentation":{"id":4866,"nodeType":"StructuredDocumentation","src":"7961:280:12","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4893,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:12","nodeType":"FunctionDefinition","parameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4868,"mutability":"mutable","name":"value","nameLocation":"8273:5:12","nodeType":"VariableDeclaration","scope":4893,"src":"8265:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:12"},"returnParameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4893,"src":"8303:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4870,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:12","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:12"},"scope":6239,"src":"8246:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4920,"nodeType":"Block","src":"8821:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"8835:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4903,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4902,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:12","memberName":"max","nodeType":"MemberAccess","src":"8843:17:12","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4914,"nodeType":"IfStatement","src":"8831:105:12","trueBody":{"id":4913,"nodeType":"Block","src":"8862:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:12","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"8919:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4908,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"8883:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4912,"nodeType":"RevertStatement","src":"8876:49:12"}]}},{"expression":{"arguments":[{"id":4917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4896,"src":"8960:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4915,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:12","typeDescriptions":{}}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4900,"id":4919,"nodeType":"Return","src":"8945:21:12"}]},"documentation":{"id":4894,"nodeType":"StructuredDocumentation","src":"8470:280:12","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4921,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:12","nodeType":"FunctionDefinition","parameters":{"id":4897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4896,"mutability":"mutable","name":"value","nameLocation":"8782:5:12","nodeType":"VariableDeclaration","scope":4921,"src":"8774:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4895,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:12"},"returnParameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4921,"src":"8812:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4898,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:12","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:12"},"scope":6239,"src":"8755:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4948,"nodeType":"Block","src":"9330:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"9344:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4931,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4930,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:12","memberName":"max","nodeType":"MemberAccess","src":"9352:17:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"nodeType":"IfStatement","src":"9340:105:12","trueBody":{"id":4941,"nodeType":"Block","src":"9371:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"9428:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4936,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"9392:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4940,"nodeType":"RevertStatement","src":"9385:49:12"}]}},{"expression":{"arguments":[{"id":4945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4924,"src":"9469:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4943,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:12","typeDescriptions":{}}},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4928,"id":4947,"nodeType":"Return","src":"9454:21:12"}]},"documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"8979:280:12","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4949,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:12","nodeType":"FunctionDefinition","parameters":{"id":4925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"value","nameLocation":"9291:5:12","nodeType":"VariableDeclaration","scope":4949,"src":"9283:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4923,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:12"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4949,"src":"9321:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4926,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:12","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:12"},"scope":6239,"src":"9264:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4976,"nodeType":"Block","src":"9839:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"9853:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4959,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4958,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:12","memberName":"max","nodeType":"MemberAccess","src":"9861:17:12","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4970,"nodeType":"IfStatement","src":"9849:105:12","trueBody":{"id":4969,"nodeType":"Block","src":"9880:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:12","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"9937:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4964,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"9901:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4968,"nodeType":"RevertStatement","src":"9894:49:12"}]}},{"expression":{"arguments":[{"id":4973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"9978:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4971,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:12","typeDescriptions":{}}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4956,"id":4975,"nodeType":"Return","src":"9963:21:12"}]},"documentation":{"id":4950,"nodeType":"StructuredDocumentation","src":"9488:280:12","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4977,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:12","nodeType":"FunctionDefinition","parameters":{"id":4953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"value","nameLocation":"9800:5:12","nodeType":"VariableDeclaration","scope":4977,"src":"9792:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:12"},"returnParameters":{"id":4956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4977,"src":"9830:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4954,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:12","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:12"},"scope":6239,"src":"9773:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5004,"nodeType":"Block","src":"10348:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"10362:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4987,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4986,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:12","memberName":"max","nodeType":"MemberAccess","src":"10370:17:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4998,"nodeType":"IfStatement","src":"10358:105:12","trueBody":{"id":4997,"nodeType":"Block","src":"10389:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:12","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"10446:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4992,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"10410:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4996,"nodeType":"RevertStatement","src":"10403:49:12"}]}},{"expression":{"arguments":[{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4980,"src":"10487:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4999,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:12","typeDescriptions":{}}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4984,"id":5003,"nodeType":"Return","src":"10472:21:12"}]},"documentation":{"id":4978,"nodeType":"StructuredDocumentation","src":"9997:280:12","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5005,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:12","nodeType":"FunctionDefinition","parameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"value","nameLocation":"10309:5:12","nodeType":"VariableDeclaration","scope":5005,"src":"10301:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:12"},"returnParameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5005,"src":"10339:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4982,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:12","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:12"},"scope":6239,"src":"10282:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5032,"nodeType":"Block","src":"10857:152:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"10871:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5015,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5014,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:12","memberName":"max","nodeType":"MemberAccess","src":"10879:17:12","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5026,"nodeType":"IfStatement","src":"10867:105:12","trueBody":{"id":5025,"nodeType":"Block","src":"10898:74:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:12","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"10955:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5020,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"10919:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5024,"nodeType":"RevertStatement","src":"10912:49:12"}]}},{"expression":{"arguments":[{"id":5029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"10996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5027,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:12","typeDescriptions":{}}},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5012,"id":5031,"nodeType":"Return","src":"10981:21:12"}]},"documentation":{"id":5006,"nodeType":"StructuredDocumentation","src":"10506:280:12","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5033,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:12","nodeType":"FunctionDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"value","nameLocation":"10818:5:12","nodeType":"VariableDeclaration","scope":5033,"src":"10810:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:12"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5033,"src":"10848:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5010,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:12","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:12"},"scope":6239,"src":"10791:218:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5060,"nodeType":"Block","src":"11360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"11374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5043,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5042,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:12","memberName":"max","nodeType":"MemberAccess","src":"11382:16:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5054,"nodeType":"IfStatement","src":"11370:103:12","trueBody":{"id":5053,"nodeType":"Block","src":"11400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"11456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5048,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"11421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5052,"nodeType":"RevertStatement","src":"11414:48:12"}]}},{"expression":{"arguments":[{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"11496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5055,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:12","typeDescriptions":{}}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5040,"id":5059,"nodeType":"Return","src":"11482:20:12"}]},"documentation":{"id":5034,"nodeType":"StructuredDocumentation","src":"11015:276:12","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5061,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:12","nodeType":"FunctionDefinition","parameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"value","nameLocation":"11322:5:12","nodeType":"VariableDeclaration","scope":5061,"src":"11314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:12"},"returnParameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5061,"src":"11352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5038,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:12","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:12"},"scope":6239,"src":"11296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5088,"nodeType":"Block","src":"11860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5071,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5070,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:12","memberName":"max","nodeType":"MemberAccess","src":"11882:16:12","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5082,"nodeType":"IfStatement","src":"11870:103:12","trueBody":{"id":5081,"nodeType":"Block","src":"11900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5076,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"11921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5080,"nodeType":"RevertStatement","src":"11914:48:12"}]}},{"expression":{"arguments":[{"id":5085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5064,"src":"11996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5083,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:12","typeDescriptions":{}}},"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5068,"id":5087,"nodeType":"Return","src":"11982:20:12"}]},"documentation":{"id":5062,"nodeType":"StructuredDocumentation","src":"11515:276:12","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5089,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:12","nodeType":"FunctionDefinition","parameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"value","nameLocation":"11822:5:12","nodeType":"VariableDeclaration","scope":5089,"src":"11814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:12"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5089,"src":"11852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5066,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:12","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:12"},"scope":6239,"src":"11796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5116,"nodeType":"Block","src":"12360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"12374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5099,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5098,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:12","memberName":"max","nodeType":"MemberAccess","src":"12382:16:12","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5110,"nodeType":"IfStatement","src":"12370:103:12","trueBody":{"id":5109,"nodeType":"Block","src":"12400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"12456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5104,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"12421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5108,"nodeType":"RevertStatement","src":"12414:48:12"}]}},{"expression":{"arguments":[{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"12496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5111,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:12","typeDescriptions":{}}},"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5096,"id":5115,"nodeType":"Return","src":"12482:20:12"}]},"documentation":{"id":5090,"nodeType":"StructuredDocumentation","src":"12015:276:12","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5117,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:12","nodeType":"FunctionDefinition","parameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"value","nameLocation":"12322:5:12","nodeType":"VariableDeclaration","scope":5117,"src":"12314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:12"},"returnParameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5117,"src":"12352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5094,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:12","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:12"},"scope":6239,"src":"12296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5144,"nodeType":"Block","src":"12860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"12874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5127,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5126,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:12","memberName":"max","nodeType":"MemberAccess","src":"12882:16:12","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5138,"nodeType":"IfStatement","src":"12870:103:12","trueBody":{"id":5137,"nodeType":"Block","src":"12900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"12956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5132,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"12921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5136,"nodeType":"RevertStatement","src":"12914:48:12"}]}},{"expression":{"arguments":[{"id":5141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"12996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5139,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:12","typeDescriptions":{}}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5124,"id":5143,"nodeType":"Return","src":"12982:20:12"}]},"documentation":{"id":5118,"nodeType":"StructuredDocumentation","src":"12515:276:12","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5145,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:12","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"value","nameLocation":"12822:5:12","nodeType":"VariableDeclaration","scope":5145,"src":"12814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:12"},"returnParameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5145,"src":"12852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5122,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:12","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:12"},"scope":6239,"src":"12796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5172,"nodeType":"Block","src":"13360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"13374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5155,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5154,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:12","memberName":"max","nodeType":"MemberAccess","src":"13382:16:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5166,"nodeType":"IfStatement","src":"13370:103:12","trueBody":{"id":5165,"nodeType":"Block","src":"13400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"13456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5160,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"13421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5164,"nodeType":"RevertStatement","src":"13414:48:12"}]}},{"expression":{"arguments":[{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"13496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5167,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:12","typeDescriptions":{}}},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5152,"id":5171,"nodeType":"Return","src":"13482:20:12"}]},"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"13015:276:12","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5173,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:12","nodeType":"FunctionDefinition","parameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"value","nameLocation":"13322:5:12","nodeType":"VariableDeclaration","scope":5173,"src":"13314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:12"},"returnParameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5173,"src":"13352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5150,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:12","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:12"},"scope":6239,"src":"13296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5200,"nodeType":"Block","src":"13860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"13874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5183,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5182,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:12","memberName":"max","nodeType":"MemberAccess","src":"13882:16:12","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5194,"nodeType":"IfStatement","src":"13870:103:12","trueBody":{"id":5193,"nodeType":"Block","src":"13900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"13956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5188,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"13921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5192,"nodeType":"RevertStatement","src":"13914:48:12"}]}},{"expression":{"arguments":[{"id":5197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"13996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5195,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:12","typeDescriptions":{}}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5180,"id":5199,"nodeType":"Return","src":"13982:20:12"}]},"documentation":{"id":5174,"nodeType":"StructuredDocumentation","src":"13515:276:12","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5201,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:12","nodeType":"FunctionDefinition","parameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"value","nameLocation":"13822:5:12","nodeType":"VariableDeclaration","scope":5201,"src":"13814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:12"},"returnParameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5201,"src":"13852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5178,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:12","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:12"},"scope":6239,"src":"13796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5228,"nodeType":"Block","src":"14360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"14374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5211,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5210,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:12","memberName":"max","nodeType":"MemberAccess","src":"14382:16:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"nodeType":"IfStatement","src":"14370:103:12","trueBody":{"id":5221,"nodeType":"Block","src":"14400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"14456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5216,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"14421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5220,"nodeType":"RevertStatement","src":"14414:48:12"}]}},{"expression":{"arguments":[{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"14496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5223,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:12","typeDescriptions":{}}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5208,"id":5227,"nodeType":"Return","src":"14482:20:12"}]},"documentation":{"id":5202,"nodeType":"StructuredDocumentation","src":"14015:276:12","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5229,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:12","nodeType":"FunctionDefinition","parameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"value","nameLocation":"14322:5:12","nodeType":"VariableDeclaration","scope":5229,"src":"14314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:12"},"returnParameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5229,"src":"14352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5206,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:12","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:12"},"scope":6239,"src":"14296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5256,"nodeType":"Block","src":"14860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"14874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5239,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5238,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:12","memberName":"max","nodeType":"MemberAccess","src":"14882:16:12","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5250,"nodeType":"IfStatement","src":"14870:103:12","trueBody":{"id":5249,"nodeType":"Block","src":"14900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"14956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5244,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"14921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5248,"nodeType":"RevertStatement","src":"14914:48:12"}]}},{"expression":{"arguments":[{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"14996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5251,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:12","typeDescriptions":{}}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5236,"id":5255,"nodeType":"Return","src":"14982:20:12"}]},"documentation":{"id":5230,"nodeType":"StructuredDocumentation","src":"14515:276:12","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5257,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:12","nodeType":"FunctionDefinition","parameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"value","nameLocation":"14822:5:12","nodeType":"VariableDeclaration","scope":5257,"src":"14814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:12"},"returnParameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5257,"src":"14852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5234,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:12","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:12"},"scope":6239,"src":"14796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5284,"nodeType":"Block","src":"15360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"15374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5267,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5266,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:12","memberName":"max","nodeType":"MemberAccess","src":"15382:16:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5278,"nodeType":"IfStatement","src":"15370:103:12","trueBody":{"id":5277,"nodeType":"Block","src":"15400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"15456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5272,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"15421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5276,"nodeType":"RevertStatement","src":"15414:48:12"}]}},{"expression":{"arguments":[{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"15496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5279,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:12","typeDescriptions":{}}},"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5264,"id":5283,"nodeType":"Return","src":"15482:20:12"}]},"documentation":{"id":5258,"nodeType":"StructuredDocumentation","src":"15015:276:12","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5285,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:12","nodeType":"FunctionDefinition","parameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"value","nameLocation":"15322:5:12","nodeType":"VariableDeclaration","scope":5285,"src":"15314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5259,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:12"},"returnParameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5285,"src":"15352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5262,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:12"},"scope":6239,"src":"15296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5312,"nodeType":"Block","src":"15860:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"15874:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5295,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5294,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:12","memberName":"max","nodeType":"MemberAccess","src":"15882:16:12","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5306,"nodeType":"IfStatement","src":"15870:103:12","trueBody":{"id":5305,"nodeType":"Block","src":"15900:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:12","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"15956:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5300,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"15921:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5304,"nodeType":"RevertStatement","src":"15914:48:12"}]}},{"expression":{"arguments":[{"id":5309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"15996:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5307,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:12","typeDescriptions":{}}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5292,"id":5311,"nodeType":"Return","src":"15982:20:12"}]},"documentation":{"id":5286,"nodeType":"StructuredDocumentation","src":"15515:276:12","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:12","nodeType":"FunctionDefinition","parameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"value","nameLocation":"15822:5:12","nodeType":"VariableDeclaration","scope":5313,"src":"15814:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5287,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:12"},"returnParameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5313,"src":"15852:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5290,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:12","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:12"},"scope":6239,"src":"15796:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5340,"nodeType":"Block","src":"16360:149:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"16374:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5323,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5322,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:12","memberName":"max","nodeType":"MemberAccess","src":"16382:16:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5334,"nodeType":"IfStatement","src":"16370:103:12","trueBody":{"id":5333,"nodeType":"Block","src":"16400:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"16456:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5328,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"16421:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5332,"nodeType":"RevertStatement","src":"16414:48:12"}]}},{"expression":{"arguments":[{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"16496:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5335,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:12","typeDescriptions":{}}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5320,"id":5339,"nodeType":"Return","src":"16482:20:12"}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"16015:276:12","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5341,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:12","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"value","nameLocation":"16322:5:12","nodeType":"VariableDeclaration","scope":5341,"src":"16314:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:12"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5341,"src":"16352:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5318,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:12"},"scope":6239,"src":"16296:213:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5368,"nodeType":"Block","src":"16854:146:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"16868:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5351,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5350,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:12","memberName":"max","nodeType":"MemberAccess","src":"16876:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5362,"nodeType":"IfStatement","src":"16864:101:12","trueBody":{"id":5361,"nodeType":"Block","src":"16893:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"16948:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5356,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"16914:30:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5360,"nodeType":"RevertStatement","src":"16907:47:12"}]}},{"expression":{"arguments":[{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"16987:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5363,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:12","typeDescriptions":{}}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5348,"id":5367,"nodeType":"Return","src":"16974:19:12"}]},"documentation":{"id":5342,"nodeType":"StructuredDocumentation","src":"16515:272:12","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5369,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:12","nodeType":"FunctionDefinition","parameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"value","nameLocation":"16817:5:12","nodeType":"VariableDeclaration","scope":5369,"src":"16809:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:12"},"returnParameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5369,"src":"16847:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5346,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:12"},"scope":6239,"src":"16792:208:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5391,"nodeType":"Block","src":"17236:128:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"17250:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5385,"nodeType":"IfStatement","src":"17246:81:12","trueBody":{"id":5384,"nodeType":"Block","src":"17261:66:12","statements":[{"errorCall":{"arguments":[{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"17310:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5380,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"17282:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5383,"nodeType":"RevertStatement","src":"17275:41:12"}]}},{"expression":{"arguments":[{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"17351:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:12","typeDescriptions":{}}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5376,"id":5390,"nodeType":"Return","src":"17336:21:12"}]},"documentation":{"id":5370,"nodeType":"StructuredDocumentation","src":"17006:160:12","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5392,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:12","nodeType":"FunctionDefinition","parameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5372,"mutability":"mutable","name":"value","nameLocation":"17197:5:12","nodeType":"VariableDeclaration","scope":5392,"src":"17190:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5371,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:12"},"returnParameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5392,"src":"17227:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5374,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:12"},"scope":6239,"src":"17171:193:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5417,"nodeType":"Block","src":"17761:150:12","statements":[{"expression":{"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5400,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"17771:10:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"17791:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5401,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:12","typeDescriptions":{}}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5406,"nodeType":"ExpressionStatement","src":"17771:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5398,"src":"17811:10:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"17825:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5416,"nodeType":"IfStatement","src":"17807:98:12","trueBody":{"id":5415,"nodeType":"Block","src":"17832:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:12","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"17888:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5410,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"17853:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5414,"nodeType":"RevertStatement","src":"17846:48:12"}]}}]},"documentation":{"id":5393,"nodeType":"StructuredDocumentation","src":"17370:312:12","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5418,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:12","nodeType":"FunctionDefinition","parameters":{"id":5396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5395,"mutability":"mutable","name":"value","nameLocation":"17712:5:12","nodeType":"VariableDeclaration","scope":5418,"src":"17705:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5394,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:12"},"returnParameters":{"id":5399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5398,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:12","nodeType":"VariableDeclaration","scope":5418,"src":"17742:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5397,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:12","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:12"},"scope":6239,"src":"17687:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5443,"nodeType":"Block","src":"18308:150:12","statements":[{"expression":{"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5426,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"18318:10:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"18338:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5427,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:12","typeDescriptions":{}}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5432,"nodeType":"ExpressionStatement","src":"18318:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5433,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"18358:10:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"18372:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5442,"nodeType":"IfStatement","src":"18354:98:12","trueBody":{"id":5441,"nodeType":"Block","src":"18379:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:12","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"18435:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5436,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"18400:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5440,"nodeType":"RevertStatement","src":"18393:48:12"}]}}]},"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"17917:312:12","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5444,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:12","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"value","nameLocation":"18259:5:12","nodeType":"VariableDeclaration","scope":5444,"src":"18252:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5420,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:12"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:12","nodeType":"VariableDeclaration","scope":5444,"src":"18289:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5423,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:12","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:12"},"scope":6239,"src":"18234:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5469,"nodeType":"Block","src":"18855:150:12","statements":[{"expression":{"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5452,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"18865:10:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"18885:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5453,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:12","typeDescriptions":{}}},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5458,"nodeType":"ExpressionStatement","src":"18865:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5459,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"18905:10:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"18919:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5468,"nodeType":"IfStatement","src":"18901:98:12","trueBody":{"id":5467,"nodeType":"Block","src":"18926:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:12","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"18982:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5462,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"18947:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5466,"nodeType":"RevertStatement","src":"18940:48:12"}]}}]},"documentation":{"id":5445,"nodeType":"StructuredDocumentation","src":"18464:312:12","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5470,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:12","nodeType":"FunctionDefinition","parameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"value","nameLocation":"18806:5:12","nodeType":"VariableDeclaration","scope":5470,"src":"18799:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5446,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:12"},"returnParameters":{"id":5451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:12","nodeType":"VariableDeclaration","scope":5470,"src":"18836:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5449,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:12","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:12"},"scope":6239,"src":"18781:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5495,"nodeType":"Block","src":"19402:150:12","statements":[{"expression":{"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"19412:10:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"19432:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5479,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:12","typeDescriptions":{}}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5484,"nodeType":"ExpressionStatement","src":"19412:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5485,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"19452:10:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"19466:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5494,"nodeType":"IfStatement","src":"19448:98:12","trueBody":{"id":5493,"nodeType":"Block","src":"19473:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:12","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"19529:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5488,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"19494:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5492,"nodeType":"RevertStatement","src":"19487:48:12"}]}}]},"documentation":{"id":5471,"nodeType":"StructuredDocumentation","src":"19011:312:12","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5496,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:12","nodeType":"FunctionDefinition","parameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"value","nameLocation":"19353:5:12","nodeType":"VariableDeclaration","scope":5496,"src":"19346:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5472,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:12"},"returnParameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:12","nodeType":"VariableDeclaration","scope":5496,"src":"19383:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5475,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:12","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:12"},"scope":6239,"src":"19328:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5521,"nodeType":"Block","src":"19949:150:12","statements":[{"expression":{"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5504,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"19959:10:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"19979:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5505,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:12","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5510,"nodeType":"ExpressionStatement","src":"19959:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5511,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"19999:10:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"20013:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5520,"nodeType":"IfStatement","src":"19995:98:12","trueBody":{"id":5519,"nodeType":"Block","src":"20020:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:12","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"20076:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5514,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"20041:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5518,"nodeType":"RevertStatement","src":"20034:48:12"}]}}]},"documentation":{"id":5497,"nodeType":"StructuredDocumentation","src":"19558:312:12","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5522,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:12","nodeType":"FunctionDefinition","parameters":{"id":5500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"value","nameLocation":"19900:5:12","nodeType":"VariableDeclaration","scope":5522,"src":"19893:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5498,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:12"},"returnParameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5502,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:12","nodeType":"VariableDeclaration","scope":5522,"src":"19930:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5501,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:12","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:12"},"scope":6239,"src":"19875:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5547,"nodeType":"Block","src":"20496:150:12","statements":[{"expression":{"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5530,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"20506:10:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"20526:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5531,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:12","typeDescriptions":{}}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5536,"nodeType":"ExpressionStatement","src":"20506:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5537,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"20546:10:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"20560:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5546,"nodeType":"IfStatement","src":"20542:98:12","trueBody":{"id":5545,"nodeType":"Block","src":"20567:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:12","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"20623:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5540,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"20588:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5544,"nodeType":"RevertStatement","src":"20581:48:12"}]}}]},"documentation":{"id":5523,"nodeType":"StructuredDocumentation","src":"20105:312:12","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5548,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:12","nodeType":"FunctionDefinition","parameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"value","nameLocation":"20447:5:12","nodeType":"VariableDeclaration","scope":5548,"src":"20440:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5524,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:12"},"returnParameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:12","nodeType":"VariableDeclaration","scope":5548,"src":"20477:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5527,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:12","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:12"},"scope":6239,"src":"20422:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5573,"nodeType":"Block","src":"21043:150:12","statements":[{"expression":{"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5556,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"21053:10:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"21073:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5557,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:12","typeDescriptions":{}}},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5562,"nodeType":"ExpressionStatement","src":"21053:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5563,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5554,"src":"21093:10:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"21107:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5572,"nodeType":"IfStatement","src":"21089:98:12","trueBody":{"id":5571,"nodeType":"Block","src":"21114:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:12","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"21170:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5566,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"21135:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5570,"nodeType":"RevertStatement","src":"21128:48:12"}]}}]},"documentation":{"id":5549,"nodeType":"StructuredDocumentation","src":"20652:312:12","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5574,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:12","nodeType":"FunctionDefinition","parameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5551,"mutability":"mutable","name":"value","nameLocation":"20994:5:12","nodeType":"VariableDeclaration","scope":5574,"src":"20987:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5550,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:12"},"returnParameters":{"id":5555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5554,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:12","nodeType":"VariableDeclaration","scope":5574,"src":"21024:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5553,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:12","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:12"},"scope":6239,"src":"20969:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5599,"nodeType":"Block","src":"21590:150:12","statements":[{"expression":{"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5582,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"21600:10:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"21620:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5583,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:12","typeDescriptions":{}}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5588,"nodeType":"ExpressionStatement","src":"21600:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"21640:10:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"21654:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5598,"nodeType":"IfStatement","src":"21636:98:12","trueBody":{"id":5597,"nodeType":"Block","src":"21661:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:12","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"21717:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5592,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"21682:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5596,"nodeType":"RevertStatement","src":"21675:48:12"}]}}]},"documentation":{"id":5575,"nodeType":"StructuredDocumentation","src":"21199:312:12","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5600,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:12","nodeType":"FunctionDefinition","parameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"value","nameLocation":"21541:5:12","nodeType":"VariableDeclaration","scope":5600,"src":"21534:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5576,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:12"},"returnParameters":{"id":5581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5580,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:12","nodeType":"VariableDeclaration","scope":5600,"src":"21571:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5579,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:12","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:12"},"scope":6239,"src":"21516:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5625,"nodeType":"Block","src":"22137:150:12","statements":[{"expression":{"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5608,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"22147:10:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"22167:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5609,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:12","typeDescriptions":{}}},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5614,"nodeType":"ExpressionStatement","src":"22147:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5615,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"22187:10:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"22201:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5624,"nodeType":"IfStatement","src":"22183:98:12","trueBody":{"id":5623,"nodeType":"Block","src":"22208:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:12","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"22264:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5618,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"22229:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5622,"nodeType":"RevertStatement","src":"22222:48:12"}]}}]},"documentation":{"id":5601,"nodeType":"StructuredDocumentation","src":"21746:312:12","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5626,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:12","nodeType":"FunctionDefinition","parameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5603,"mutability":"mutable","name":"value","nameLocation":"22088:5:12","nodeType":"VariableDeclaration","scope":5626,"src":"22081:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5602,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:12"},"returnParameters":{"id":5607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5606,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:12","nodeType":"VariableDeclaration","scope":5626,"src":"22118:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5605,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:12","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:12"},"scope":6239,"src":"22063:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5651,"nodeType":"Block","src":"22684:150:12","statements":[{"expression":{"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5634,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"22694:10:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"22714:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5635,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:12","typeDescriptions":{}}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5640,"nodeType":"ExpressionStatement","src":"22694:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5641,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"22734:10:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"22748:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5650,"nodeType":"IfStatement","src":"22730:98:12","trueBody":{"id":5649,"nodeType":"Block","src":"22755:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:12","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"22811:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5644,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"22776:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5648,"nodeType":"RevertStatement","src":"22769:48:12"}]}}]},"documentation":{"id":5627,"nodeType":"StructuredDocumentation","src":"22293:312:12","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5652,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:12","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"value","nameLocation":"22635:5:12","nodeType":"VariableDeclaration","scope":5652,"src":"22628:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5628,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:12"},"returnParameters":{"id":5633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:12","nodeType":"VariableDeclaration","scope":5652,"src":"22665:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5631,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:12","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:12"},"scope":6239,"src":"22610:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5677,"nodeType":"Block","src":"23231:150:12","statements":[{"expression":{"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5660,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"23241:10:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"23261:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5661,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:12","typeDescriptions":{}}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5666,"nodeType":"ExpressionStatement","src":"23241:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5667,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5658,"src":"23281:10:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"23295:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5676,"nodeType":"IfStatement","src":"23277:98:12","trueBody":{"id":5675,"nodeType":"Block","src":"23302:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:12","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"23358:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5670,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"23323:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5674,"nodeType":"RevertStatement","src":"23316:48:12"}]}}]},"documentation":{"id":5653,"nodeType":"StructuredDocumentation","src":"22840:312:12","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5678,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:12","nodeType":"FunctionDefinition","parameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"value","nameLocation":"23182:5:12","nodeType":"VariableDeclaration","scope":5678,"src":"23175:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5654,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:12"},"returnParameters":{"id":5659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5658,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:12","nodeType":"VariableDeclaration","scope":5678,"src":"23212:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5657,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:12","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:12"},"scope":6239,"src":"23157:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5703,"nodeType":"Block","src":"23778:150:12","statements":[{"expression":{"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5686,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"23788:10:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"23808:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5687,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:12","typeDescriptions":{}}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5692,"nodeType":"ExpressionStatement","src":"23788:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5693,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"23828:10:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"23842:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5702,"nodeType":"IfStatement","src":"23824:98:12","trueBody":{"id":5701,"nodeType":"Block","src":"23849:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:12","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"23905:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5696,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"23870:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5700,"nodeType":"RevertStatement","src":"23863:48:12"}]}}]},"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"23387:312:12","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5704,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:12","nodeType":"FunctionDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"value","nameLocation":"23729:5:12","nodeType":"VariableDeclaration","scope":5704,"src":"23722:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5680,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:12"},"returnParameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:12","nodeType":"VariableDeclaration","scope":5704,"src":"23759:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5683,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:12","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:12"},"scope":6239,"src":"23704:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5729,"nodeType":"Block","src":"24325:150:12","statements":[{"expression":{"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"24335:10:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"24355:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5713,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:12","typeDescriptions":{}}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5718,"nodeType":"ExpressionStatement","src":"24335:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"24375:10:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"24389:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5728,"nodeType":"IfStatement","src":"24371:98:12","trueBody":{"id":5727,"nodeType":"Block","src":"24396:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:12","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"24452:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5722,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"24417:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5726,"nodeType":"RevertStatement","src":"24410:48:12"}]}}]},"documentation":{"id":5705,"nodeType":"StructuredDocumentation","src":"23934:312:12","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5730,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:12","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"value","nameLocation":"24276:5:12","nodeType":"VariableDeclaration","scope":5730,"src":"24269:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5706,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:12"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:12","nodeType":"VariableDeclaration","scope":5730,"src":"24306:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5709,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:12","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:12"},"scope":6239,"src":"24251:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5755,"nodeType":"Block","src":"24872:150:12","statements":[{"expression":{"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5738,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24882:10:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"24902:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5739,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:12","typeDescriptions":{}}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5744,"nodeType":"ExpressionStatement","src":"24882:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5745,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"24922:10:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"24936:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5754,"nodeType":"IfStatement","src":"24918:98:12","trueBody":{"id":5753,"nodeType":"Block","src":"24943:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:12","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"24999:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5748,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"24964:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5752,"nodeType":"RevertStatement","src":"24957:48:12"}]}}]},"documentation":{"id":5731,"nodeType":"StructuredDocumentation","src":"24481:312:12","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5756,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:12","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"value","nameLocation":"24823:5:12","nodeType":"VariableDeclaration","scope":5756,"src":"24816:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5732,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:12"},"returnParameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:12","nodeType":"VariableDeclaration","scope":5756,"src":"24853:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5735,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:12","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:12"},"scope":6239,"src":"24798:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5781,"nodeType":"Block","src":"25419:150:12","statements":[{"expression":{"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"25429:10:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"25449:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5765,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:12","typeDescriptions":{}}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5770,"nodeType":"ExpressionStatement","src":"25429:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5771,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"25469:10:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"25483:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5780,"nodeType":"IfStatement","src":"25465:98:12","trueBody":{"id":5779,"nodeType":"Block","src":"25490:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:12","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"25546:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5774,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"25511:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5778,"nodeType":"RevertStatement","src":"25504:48:12"}]}}]},"documentation":{"id":5757,"nodeType":"StructuredDocumentation","src":"25028:312:12","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5782,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:12","nodeType":"FunctionDefinition","parameters":{"id":5760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5759,"mutability":"mutable","name":"value","nameLocation":"25370:5:12","nodeType":"VariableDeclaration","scope":5782,"src":"25363:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5758,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:12"},"returnParameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:12","nodeType":"VariableDeclaration","scope":5782,"src":"25400:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5761,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:12","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:12"},"scope":6239,"src":"25345:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5807,"nodeType":"Block","src":"25966:150:12","statements":[{"expression":{"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"25976:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"25996:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5791,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:12","typeDescriptions":{}}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5796,"nodeType":"ExpressionStatement","src":"25976:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"26016:10:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"26030:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5806,"nodeType":"IfStatement","src":"26012:98:12","trueBody":{"id":5805,"nodeType":"Block","src":"26037:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"26093:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5800,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"26058:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5804,"nodeType":"RevertStatement","src":"26051:48:12"}]}}]},"documentation":{"id":5783,"nodeType":"StructuredDocumentation","src":"25575:312:12","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5808,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:12","nodeType":"FunctionDefinition","parameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"value","nameLocation":"25917:5:12","nodeType":"VariableDeclaration","scope":5808,"src":"25910:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5784,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:12"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:12","nodeType":"VariableDeclaration","scope":5808,"src":"25947:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5787,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:12","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:12"},"scope":6239,"src":"25892:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5833,"nodeType":"Block","src":"26513:150:12","statements":[{"expression":{"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"26523:10:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"26543:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5817,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:12","typeDescriptions":{}}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5822,"nodeType":"ExpressionStatement","src":"26523:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"26563:10:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"26577:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5832,"nodeType":"IfStatement","src":"26559:98:12","trueBody":{"id":5831,"nodeType":"Block","src":"26584:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:12","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"26640:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5826,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"26605:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5830,"nodeType":"RevertStatement","src":"26598:48:12"}]}}]},"documentation":{"id":5809,"nodeType":"StructuredDocumentation","src":"26122:312:12","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5834,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:12","nodeType":"FunctionDefinition","parameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"value","nameLocation":"26464:5:12","nodeType":"VariableDeclaration","scope":5834,"src":"26457:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5810,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:12"},"returnParameters":{"id":5815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:12","nodeType":"VariableDeclaration","scope":5834,"src":"26494:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5813,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:12","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:12"},"scope":6239,"src":"26439:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5859,"nodeType":"Block","src":"27060:150:12","statements":[{"expression":{"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"27070:10:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"27090:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5843,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:12","typeDescriptions":{}}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5848,"nodeType":"ExpressionStatement","src":"27070:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"27110:10:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"27124:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5858,"nodeType":"IfStatement","src":"27106:98:12","trueBody":{"id":5857,"nodeType":"Block","src":"27131:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:12","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"27187:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5852,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"27152:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5856,"nodeType":"RevertStatement","src":"27145:48:12"}]}}]},"documentation":{"id":5835,"nodeType":"StructuredDocumentation","src":"26669:312:12","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5860,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:12","nodeType":"FunctionDefinition","parameters":{"id":5838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"mutability":"mutable","name":"value","nameLocation":"27011:5:12","nodeType":"VariableDeclaration","scope":5860,"src":"27004:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5836,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:12"},"returnParameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:12","nodeType":"VariableDeclaration","scope":5860,"src":"27041:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5839,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:12","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:12"},"scope":6239,"src":"26986:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5885,"nodeType":"Block","src":"27607:150:12","statements":[{"expression":{"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"27617:10:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"27637:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5869,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:12","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5874,"nodeType":"ExpressionStatement","src":"27617:26:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5875,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"27657:10:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"27671:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5884,"nodeType":"IfStatement","src":"27653:98:12","trueBody":{"id":5883,"nodeType":"Block","src":"27678:73:12","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:12","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"27734:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5878,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"27699:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5882,"nodeType":"RevertStatement","src":"27692:48:12"}]}}]},"documentation":{"id":5861,"nodeType":"StructuredDocumentation","src":"27216:312:12","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5886,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:12","nodeType":"FunctionDefinition","parameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"value","nameLocation":"27558:5:12","nodeType":"VariableDeclaration","scope":5886,"src":"27551:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5862,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:12"},"returnParameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:12","nodeType":"VariableDeclaration","scope":5886,"src":"27588:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5865,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:12","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:12"},"scope":6239,"src":"27533:224:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5911,"nodeType":"Block","src":"28147:148:12","statements":[{"expression":{"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"28157:10:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"28176:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5895,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:12","typeDescriptions":{}}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5900,"nodeType":"ExpressionStatement","src":"28157:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5901,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"28196:10:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"28210:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5910,"nodeType":"IfStatement","src":"28192:97:12","trueBody":{"id":5909,"nodeType":"Block","src":"28217:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:12","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"28272:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5904,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"28238:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5908,"nodeType":"RevertStatement","src":"28231:47:12"}]}}]},"documentation":{"id":5887,"nodeType":"StructuredDocumentation","src":"27763:307:12","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5912,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:12","nodeType":"FunctionDefinition","parameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5889,"mutability":"mutable","name":"value","nameLocation":"28099:5:12","nodeType":"VariableDeclaration","scope":5912,"src":"28092:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5888,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:12"},"returnParameters":{"id":5893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:12","nodeType":"VariableDeclaration","scope":5912,"src":"28129:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5891,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:12","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:12"},"scope":6239,"src":"28075:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5937,"nodeType":"Block","src":"28685:148:12","statements":[{"expression":{"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"28695:10:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"28714:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5921,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:12","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5926,"nodeType":"ExpressionStatement","src":"28695:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"28734:10:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"28748:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5936,"nodeType":"IfStatement","src":"28730:97:12","trueBody":{"id":5935,"nodeType":"Block","src":"28755:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:12","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"28810:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5930,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"28776:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5934,"nodeType":"RevertStatement","src":"28769:47:12"}]}}]},"documentation":{"id":5913,"nodeType":"StructuredDocumentation","src":"28301:307:12","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5938,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:12","nodeType":"FunctionDefinition","parameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"value","nameLocation":"28637:5:12","nodeType":"VariableDeclaration","scope":5938,"src":"28630:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5914,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:12"},"returnParameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5918,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:12","nodeType":"VariableDeclaration","scope":5938,"src":"28667:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5917,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:12","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:12"},"scope":6239,"src":"28613:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5963,"nodeType":"Block","src":"29223:148:12","statements":[{"expression":{"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"29233:10:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"29252:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5947,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:12","typeDescriptions":{}}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5952,"nodeType":"ExpressionStatement","src":"29233:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"29272:10:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"29286:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5962,"nodeType":"IfStatement","src":"29268:97:12","trueBody":{"id":5961,"nodeType":"Block","src":"29293:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:12","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"29348:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5956,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"29314:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5960,"nodeType":"RevertStatement","src":"29307:47:12"}]}}]},"documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"28839:307:12","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5964,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:12","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"29175:5:12","nodeType":"VariableDeclaration","scope":5964,"src":"29168:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5940,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:12"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:12","nodeType":"VariableDeclaration","scope":5964,"src":"29205:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5943,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:12","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:12"},"scope":6239,"src":"29151:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5989,"nodeType":"Block","src":"29761:148:12","statements":[{"expression":{"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"29771:10:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"29790:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5973,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:12","typeDescriptions":{}}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5978,"nodeType":"ExpressionStatement","src":"29771:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5979,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"29810:10:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"29824:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5988,"nodeType":"IfStatement","src":"29806:97:12","trueBody":{"id":5987,"nodeType":"Block","src":"29831:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:12","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"29886:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5982,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"29852:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5986,"nodeType":"RevertStatement","src":"29845:47:12"}]}}]},"documentation":{"id":5965,"nodeType":"StructuredDocumentation","src":"29377:307:12","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5990,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:12","nodeType":"FunctionDefinition","parameters":{"id":5968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"value","nameLocation":"29713:5:12","nodeType":"VariableDeclaration","scope":5990,"src":"29706:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5966,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:12"},"returnParameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:12","nodeType":"VariableDeclaration","scope":5990,"src":"29743:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5969,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:12","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:12"},"scope":6239,"src":"29689:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6015,"nodeType":"Block","src":"30299:148:12","statements":[{"expression":{"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"30309:10:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"30328:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5999,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:12","typeDescriptions":{}}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6004,"nodeType":"ExpressionStatement","src":"30309:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"30348:10:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"30362:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6014,"nodeType":"IfStatement","src":"30344:97:12","trueBody":{"id":6013,"nodeType":"Block","src":"30369:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"30424:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6008,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"30390:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6012,"nodeType":"RevertStatement","src":"30383:47:12"}]}}]},"documentation":{"id":5991,"nodeType":"StructuredDocumentation","src":"29915:307:12","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6016,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:12","nodeType":"FunctionDefinition","parameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"value","nameLocation":"30251:5:12","nodeType":"VariableDeclaration","scope":6016,"src":"30244:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5992,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:12"},"returnParameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:12","nodeType":"VariableDeclaration","scope":6016,"src":"30281:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5995,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:12","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:12"},"scope":6239,"src":"30227:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6041,"nodeType":"Block","src":"30837:148:12","statements":[{"expression":{"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"30847:10:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"30866:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6025,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:12","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6030,"nodeType":"ExpressionStatement","src":"30847:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6031,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"30886:10:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"30900:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"nodeType":"IfStatement","src":"30882:97:12","trueBody":{"id":6039,"nodeType":"Block","src":"30907:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:12","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"30962:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6034,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"30928:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6038,"nodeType":"RevertStatement","src":"30921:47:12"}]}}]},"documentation":{"id":6017,"nodeType":"StructuredDocumentation","src":"30453:307:12","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6042,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:12","nodeType":"FunctionDefinition","parameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"value","nameLocation":"30789:5:12","nodeType":"VariableDeclaration","scope":6042,"src":"30782:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6018,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:12"},"returnParameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:12","nodeType":"VariableDeclaration","scope":6042,"src":"30819:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6021,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:12","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:12"},"scope":6239,"src":"30765:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6067,"nodeType":"Block","src":"31375:148:12","statements":[{"expression":{"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"31385:10:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"31404:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6051,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:12","typeDescriptions":{}}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6056,"nodeType":"ExpressionStatement","src":"31385:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6057,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"31424:10:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"31438:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6066,"nodeType":"IfStatement","src":"31420:97:12","trueBody":{"id":6065,"nodeType":"Block","src":"31445:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:12","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"31500:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6060,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"31466:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6064,"nodeType":"RevertStatement","src":"31459:47:12"}]}}]},"documentation":{"id":6043,"nodeType":"StructuredDocumentation","src":"30991:307:12","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:12","nodeType":"FunctionDefinition","parameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"value","nameLocation":"31327:5:12","nodeType":"VariableDeclaration","scope":6068,"src":"31320:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6044,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:12"},"returnParameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:12","nodeType":"VariableDeclaration","scope":6068,"src":"31357:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6047,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:12","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:12"},"scope":6239,"src":"31303:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6093,"nodeType":"Block","src":"31913:148:12","statements":[{"expression":{"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"31923:10:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"31942:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6077,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:12","typeDescriptions":{}}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6082,"nodeType":"ExpressionStatement","src":"31923:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"31962:10:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"31976:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6092,"nodeType":"IfStatement","src":"31958:97:12","trueBody":{"id":6091,"nodeType":"Block","src":"31983:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:12","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"32038:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6086,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"32004:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6090,"nodeType":"RevertStatement","src":"31997:47:12"}]}}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"31529:307:12","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6094,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:12","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"value","nameLocation":"31865:5:12","nodeType":"VariableDeclaration","scope":6094,"src":"31858:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6070,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:12"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:12","nodeType":"VariableDeclaration","scope":6094,"src":"31895:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6073,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:12","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:12"},"scope":6239,"src":"31841:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6119,"nodeType":"Block","src":"32451:148:12","statements":[{"expression":{"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"32461:10:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"32480:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6103,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:12","typeDescriptions":{}}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6108,"nodeType":"ExpressionStatement","src":"32461:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"32500:10:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"32514:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6118,"nodeType":"IfStatement","src":"32496:97:12","trueBody":{"id":6117,"nodeType":"Block","src":"32521:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"32576:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6112,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"32542:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6116,"nodeType":"RevertStatement","src":"32535:47:12"}]}}]},"documentation":{"id":6095,"nodeType":"StructuredDocumentation","src":"32067:307:12","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6120,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:12","nodeType":"FunctionDefinition","parameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"value","nameLocation":"32403:5:12","nodeType":"VariableDeclaration","scope":6120,"src":"32396:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6096,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:12"},"returnParameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:12","nodeType":"VariableDeclaration","scope":6120,"src":"32433:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6099,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:12","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:12"},"scope":6239,"src":"32379:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6145,"nodeType":"Block","src":"32989:148:12","statements":[{"expression":{"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"32999:10:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"33018:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6129,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:12","typeDescriptions":{}}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6134,"nodeType":"ExpressionStatement","src":"32999:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"33038:10:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"33052:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6144,"nodeType":"IfStatement","src":"33034:97:12","trueBody":{"id":6143,"nodeType":"Block","src":"33059:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:12","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"33114:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6138,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"33080:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6142,"nodeType":"RevertStatement","src":"33073:47:12"}]}}]},"documentation":{"id":6121,"nodeType":"StructuredDocumentation","src":"32605:307:12","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6146,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:12","nodeType":"FunctionDefinition","parameters":{"id":6124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6123,"mutability":"mutable","name":"value","nameLocation":"32941:5:12","nodeType":"VariableDeclaration","scope":6146,"src":"32934:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6122,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:12"},"returnParameters":{"id":6127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:12","nodeType":"VariableDeclaration","scope":6146,"src":"32971:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6125,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:12","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:12"},"scope":6239,"src":"32917:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6171,"nodeType":"Block","src":"33527:148:12","statements":[{"expression":{"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6154,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"33537:10:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"33556:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6155,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:12","typeDescriptions":{}}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6160,"nodeType":"ExpressionStatement","src":"33537:25:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"33576:10:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"33590:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6170,"nodeType":"IfStatement","src":"33572:97:12","trueBody":{"id":6169,"nodeType":"Block","src":"33597:72:12","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"33652:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6164,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"33618:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6168,"nodeType":"RevertStatement","src":"33611:47:12"}]}}]},"documentation":{"id":6147,"nodeType":"StructuredDocumentation","src":"33143:307:12","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6172,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:12","nodeType":"FunctionDefinition","parameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"value","nameLocation":"33479:5:12","nodeType":"VariableDeclaration","scope":6172,"src":"33472:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6148,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:12"},"returnParameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:12","nodeType":"VariableDeclaration","scope":6172,"src":"33509:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6151,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:12","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:12"},"scope":6239,"src":"33455:220:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6197,"nodeType":"Block","src":"34058:146:12","statements":[{"expression":{"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6180,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"34068:10:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"34086:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6181,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:12","typeDescriptions":{}}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6186,"nodeType":"ExpressionStatement","src":"34068:24:12"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"34106:10:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"34120:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6196,"nodeType":"IfStatement","src":"34102:96:12","trueBody":{"id":6195,"nodeType":"Block","src":"34127:71:12","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"34181:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6190,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"34148:29:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6194,"nodeType":"RevertStatement","src":"34141:46:12"}]}}]},"documentation":{"id":6173,"nodeType":"StructuredDocumentation","src":"33681:302:12","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6198,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:12","nodeType":"FunctionDefinition","parameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"value","nameLocation":"34011:5:12","nodeType":"VariableDeclaration","scope":6198,"src":"34004:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6174,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:12"},"returnParameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:12","nodeType":"VariableDeclaration","scope":6198,"src":"34041:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6177,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:12","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:12"},"scope":6239,"src":"33988:216:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6227,"nodeType":"Block","src":"34444:250:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"34557:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6210,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6209,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:12","memberName":"max","nodeType":"MemberAccess","src":"34573:16:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6207,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:12","typeDescriptions":{}}},"id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6221,"nodeType":"IfStatement","src":"34553:105:12","trueBody":{"id":6220,"nodeType":"Block","src":"34592:66:12","statements":[{"errorCall":{"arguments":[{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"34641:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6216,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"34613:27:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6219,"nodeType":"RevertStatement","src":"34606:41:12"}]}},{"expression":{"arguments":[{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"34681:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6222,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:12","typeDescriptions":{}}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6205,"id":6226,"nodeType":"Return","src":"34667:20:12"}]},"documentation":{"id":6199,"nodeType":"StructuredDocumentation","src":"34210:165:12","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:12","nodeType":"FunctionDefinition","parameters":{"id":6202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6201,"mutability":"mutable","name":"value","nameLocation":"34406:5:12","nodeType":"VariableDeclaration","scope":6228,"src":"34398:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6200,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:12"},"returnParameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6228,"src":"34436:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6203,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:12"},"scope":6239,"src":"34380:314:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6237,"nodeType":"Block","src":"34853:87:12","statements":[{"AST":{"nativeSrc":"34888:46:12","nodeType":"YulBlock","src":"34888:46:12","statements":[{"nativeSrc":"34902:22:12","nodeType":"YulAssignment","src":"34902:22:12","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:12","nodeType":"YulIdentifier","src":"34921:1:12"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:12","nodeType":"YulIdentifier","src":"34914:6:12"},"nativeSrc":"34914:9:12","nodeType":"YulFunctionCall","src":"34914:9:12"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:12","nodeType":"YulIdentifier","src":"34907:6:12"},"nativeSrc":"34907:17:12","nodeType":"YulFunctionCall","src":"34907:17:12"},"variableNames":[{"name":"u","nativeSrc":"34902:1:12","nodeType":"YulIdentifier","src":"34902:1:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6231,"isOffset":false,"isSlot":false,"src":"34921:1:12","valueSize":1},{"declaration":6234,"isOffset":false,"isSlot":false,"src":"34902:1:12","valueSize":1}],"flags":["memory-safe"],"id":6236,"nodeType":"InlineAssembly","src":"34863:71:12"}]},"documentation":{"id":6229,"nodeType":"StructuredDocumentation","src":"34700:90:12","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6238,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:12","nodeType":"FunctionDefinition","parameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6231,"mutability":"mutable","name":"b","nameLocation":"34816:1:12","nodeType":"VariableDeclaration","scope":6238,"src":"34811:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6230,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:12"},"returnParameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"u","nameLocation":"34850:1:12","nodeType":"VariableDeclaration","scope":6238,"src":"34842:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6233,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:12"},"scope":6239,"src":"34795:145:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6240,"src":"769:34173:12","usedErrors":[4484,4489,4496,4501],"usedEvents":[]}],"src":"192:34751:12"},"id":12},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6239],"SignedMath":[6383]},"id":6384,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6241,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6384,"sourceUnit":6240,"src":"135:40:13","symbolAliases":[{"foreign":{"id":6242,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"143:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6244,"nodeType":"StructuredDocumentation","src":"177:80:13","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6383,"linearizedBaseContracts":[6383],"name":"SignedMath","nameLocation":"266:10:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":6273,"nodeType":"Block","src":"746:215:13","statements":[{"id":6272,"nodeType":"UncheckedBlock","src":"756:199:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6256,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"894:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"900:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"904:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6265,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"932:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6263,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"916:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6239_$","typeString":"type(library SafeCast)"}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6238,"src":"916:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6261,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:13","typeDescriptions":{}}},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6255,"id":6271,"nodeType":"Return","src":"887:57:13"}]}]},"documentation":{"id":6245,"nodeType":"StructuredDocumentation","src":"283:374:13","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6274,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:13","nodeType":"FunctionDefinition","parameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"condition","nameLocation":"684:9:13","nodeType":"VariableDeclaration","scope":6274,"src":"679:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6246,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6249,"mutability":"mutable","name":"a","nameLocation":"702:1:13","nodeType":"VariableDeclaration","scope":6274,"src":"695:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6248,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6251,"mutability":"mutable","name":"b","nameLocation":"712:1:13","nodeType":"VariableDeclaration","scope":6274,"src":"705:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6250,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:13"},"returnParameters":{"id":6255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6274,"src":"738:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6253,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:13"},"scope":6383,"src":"662:299:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6292,"nodeType":"Block","src":"1102:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"1127:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6286,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"1131:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"1134:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"1137:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6284,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"1119:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6283,"id":6291,"nodeType":"Return","src":"1112:27:13"}]},"documentation":{"id":6275,"nodeType":"StructuredDocumentation","src":"967:66:13","text":" @dev Returns the largest of two signed numbers."},"id":6293,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:13","nodeType":"FunctionDefinition","parameters":{"id":6280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"a","nameLocation":"1058:1:13","nodeType":"VariableDeclaration","scope":6293,"src":"1051:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6276,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6279,"mutability":"mutable","name":"b","nameLocation":"1068:1:13","nodeType":"VariableDeclaration","scope":6293,"src":"1061:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6278,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:13"},"returnParameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6293,"src":"1094:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6281,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:13"},"scope":6383,"src":"1038:108:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6311,"nodeType":"Block","src":"1288:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"1313:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"1317:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"1320:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6308,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"1323:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6303,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"1305:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6302,"id":6310,"nodeType":"Return","src":"1298:27:13"}]},"documentation":{"id":6294,"nodeType":"StructuredDocumentation","src":"1152:67:13","text":" @dev Returns the smallest of two signed numbers."},"id":6312,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:13","nodeType":"FunctionDefinition","parameters":{"id":6299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6296,"mutability":"mutable","name":"a","nameLocation":"1244:1:13","nodeType":"VariableDeclaration","scope":6312,"src":"1237:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6295,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6298,"mutability":"mutable","name":"b","nameLocation":"1254:1:13","nodeType":"VariableDeclaration","scope":6312,"src":"1247:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6297,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:13"},"returnParameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6312,"src":"1280:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6300,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:13"},"scope":6383,"src":"1224:108:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6355,"nodeType":"Block","src":"1537:162:13","statements":[{"assignments":[6323],"declarations":[{"constant":false,"id":6323,"mutability":"mutable","name":"x","nameLocation":"1606:1:13","nodeType":"VariableDeclaration","scope":6355,"src":"1599:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6322,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6336,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"1611:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6325,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"1615:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"1622:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6329,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"1626:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:13"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6337,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"1651:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6342,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"1671:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:13","typeDescriptions":{}}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6338,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:13","typeDescriptions":{}}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6315,"src":"1685:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6348,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"1689:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6321,"id":6354,"nodeType":"Return","src":"1644:48:13"}]},"documentation":{"id":6313,"nodeType":"StructuredDocumentation","src":"1338:126:13","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6356,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:13","nodeType":"FunctionDefinition","parameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6315,"mutability":"mutable","name":"a","nameLocation":"1493:1:13","nodeType":"VariableDeclaration","scope":6356,"src":"1486:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6314,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6317,"mutability":"mutable","name":"b","nameLocation":"1503:1:13","nodeType":"VariableDeclaration","scope":6356,"src":"1496:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6316,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:13"},"returnParameters":{"id":6321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6356,"src":"1529:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6319,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:13"},"scope":6383,"src":"1469:230:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6381,"nodeType":"Block","src":"1843:767:13","statements":[{"id":6380,"nodeType":"UncheckedBlock","src":"1853:751:13","statements":[{"assignments":[6365],"declarations":[{"constant":false,"id":6365,"mutability":"mutable","name":"mask","nameLocation":"2424:4:13","nodeType":"VariableDeclaration","scope":6380,"src":"2417:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6364,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6369,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6366,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"2431:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"2576:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6373,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"2580:4:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6375,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6376,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6365,"src":"2588:4:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:13","typeDescriptions":{}}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6363,"id":6379,"nodeType":"Return","src":"2560:33:13"}]}]},"documentation":{"id":6357,"nodeType":"StructuredDocumentation","src":"1705:78:13","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6382,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:13","nodeType":"FunctionDefinition","parameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"n","nameLocation":"1808:1:13","nodeType":"VariableDeclaration","scope":6382,"src":"1801:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6358,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:13"},"returnParameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6382,"src":"1834:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:13"},"scope":6383,"src":"1788:822:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6384,"src":"258:2354:13","usedErrors":[],"usedEvents":[]}],"src":"109:2504:13"},"id":13},"contracts/ColonyMemory.sol":{"ast":{"absolutePath":"contracts/ColonyMemory.sol","exportedSymbols":{"ColonyMemory":[6846]},"id":6847,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6385,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"ColonyMemory","contractDependencies":[],"contractKind":"contract","documentation":{"id":6386,"nodeType":"StructuredDocumentation","src":"58:199:14","text":"@notice Extended \"shared trust memory\" ledger for ant colony and tumor nanobot simulations.\n         Stores visited cells, food collection, drug delivery events, and tumor treatment outcomes."},"fullyImplemented":true,"id":6846,"linearizedBaseContracts":[6846],"name":"ColonyMemory","nameLocation":"266:12:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ColonyMemory.Visit","id":6393,"members":[{"constant":false,"id":6388,"mutability":"mutable","name":"x","nameLocation":"348:1:14","nodeType":"VariableDeclaration","scope":6393,"src":"341:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6387,"name":"uint32","nodeType":"ElementaryTypeName","src":"341:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6390,"mutability":"mutable","name":"y","nameLocation":"358:1:14","nodeType":"VariableDeclaration","scope":6393,"src":"351:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6389,"name":"uint32","nodeType":"ElementaryTypeName","src":"351:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6392,"mutability":"mutable","name":"ant","nameLocation":"369:3:14","nodeType":"VariableDeclaration","scope":6393,"src":"361:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6391,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Visit","nameLocation":"333:5:14","nodeType":"StructDefinition","scope":6846,"src":"326:49:14","visibility":"public"},{"anonymous":false,"eventSelector":"1217636b53a0c3ef6fe9a2141bfd53cdf9d646e203bc257c1588a8ce653f07e9","id":6398,"name":"CellVisited","nameLocation":"386:11:14","nodeType":"EventDefinition","parameters":{"id":6397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6396,"indexed":false,"mutability":"mutable","name":"v","nameLocation":"404:1:14","nodeType":"VariableDeclaration","scope":6398,"src":"398:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Visit_$6393_memory_ptr","typeString":"struct ColonyMemory.Visit"},"typeName":{"id":6395,"nodeType":"UserDefinedTypeName","pathNode":{"id":6394,"name":"Visit","nameLocations":["398:5:14"],"nodeType":"IdentifierPath","referencedDeclaration":6393,"src":"398:5:14"},"referencedDeclaration":6393,"src":"398:5:14","typeDescriptions":{"typeIdentifier":"t_struct$_Visit_$6393_storage_ptr","typeString":"struct ColonyMemory.Visit"}},"visibility":"internal"}],"src":"397:9:14"},"src":"380:27:14"},{"anonymous":false,"eventSelector":"a96ae3077d483c4b54a8d717a6b5f64cd935e7d7c38bedb4f8f7aeca073a30de","id":6408,"name":"FoodCollected","nameLocation":"418:13:14","nodeType":"EventDefinition","parameters":{"id":6407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"440:7:14","nodeType":"VariableDeclaration","scope":6408,"src":"432:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6399,"name":"uint256","nodeType":"ElementaryTypeName","src":"432:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6402,"indexed":false,"mutability":"mutable","name":"x","nameLocation":"456:1:14","nodeType":"VariableDeclaration","scope":6408,"src":"449:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6401,"name":"uint32","nodeType":"ElementaryTypeName","src":"449:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6404,"indexed":false,"mutability":"mutable","name":"y","nameLocation":"466:1:14","nodeType":"VariableDeclaration","scope":6408,"src":"459:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6403,"name":"uint32","nodeType":"ElementaryTypeName","src":"459:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6406,"indexed":false,"mutability":"mutable","name":"ant","nameLocation":"477:3:14","nodeType":"VariableDeclaration","scope":6408,"src":"469:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6405,"name":"address","nodeType":"ElementaryTypeName","src":"469:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"431:50:14"},"src":"412:70:14"},{"constant":false,"functionSelector":"44d93dd4","id":6412,"mutability":"mutable","name":"visited","nameLocation":"520:7:14","nodeType":"VariableDeclaration","scope":6846,"src":"488:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":6411,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"496:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"488:24:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6410,"name":"bool","nodeType":"ElementaryTypeName","src":"507:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":6450,"nodeType":"Block","src":"610:191:14","statements":[{"assignments":[6420],"declarations":[{"constant":false,"id":6420,"mutability":"mutable","name":"key","nameLocation":"628:3:14","nodeType":"VariableDeclaration","scope":6450,"src":"620:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"620:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6428,"initialValue":{"arguments":[{"arguments":[{"id":6424,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"661:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6425,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"664:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":6422,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"644:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"648:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"644:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"644:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6421,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"634:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"634:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"620:47:14"},{"condition":{"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"681:13:14","subExpression":{"baseExpression":{"id":6429,"name":"visited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"682:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6431,"indexExpression":{"id":6430,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"690:3:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"682:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6449,"nodeType":"IfStatement","src":"677:118:14","trueBody":{"id":6448,"nodeType":"Block","src":"696:99:14","statements":[{"expression":{"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6433,"name":"visited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"710:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6435,"indexExpression":{"id":6434,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"718:3:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"710:12:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"725:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"710:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6438,"nodeType":"ExpressionStatement","src":"710:19:14"},{"eventCall":{"arguments":[{"arguments":[{"id":6441,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"766:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6442,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"769:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":6443,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"772:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"776:6:14","memberName":"sender","nodeType":"MemberAccess","src":"772:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6440,"name":"Visit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6393,"src":"760:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Visit_$6393_storage_ptr_$","typeString":"type(struct ColonyMemory.Visit storage pointer)"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"760:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Visit_$6393_memory_ptr","typeString":"struct ColonyMemory.Visit memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Visit_$6393_memory_ptr","typeString":"struct ColonyMemory.Visit memory"}],"id":6439,"name":"CellVisited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"748:11:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_struct$_Visit_$6393_memory_ptr_$returns$__$","typeString":"function (struct ColonyMemory.Visit memory)"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"748:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6447,"nodeType":"EmitStatement","src":"743:41:14"}]}}]},"functionSelector":"f40022a6","id":6451,"implemented":true,"kind":"function","modifiers":[],"name":"markVisited","nameLocation":"569:11:14","nodeType":"FunctionDefinition","parameters":{"id":6417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"x","nameLocation":"588:1:14","nodeType":"VariableDeclaration","scope":6451,"src":"581:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6413,"name":"uint32","nodeType":"ElementaryTypeName","src":"581:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6416,"mutability":"mutable","name":"y","nameLocation":"598:1:14","nodeType":"VariableDeclaration","scope":6451,"src":"591:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6415,"name":"uint32","nodeType":"ElementaryTypeName","src":"591:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"580:20:14"},"returnParameters":{"id":6418,"nodeType":"ParameterList","parameters":[],"src":"610:0:14"},"scope":6846,"src":"560:241:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6468,"nodeType":"Block","src":"868:57:14","statements":[{"eventCall":{"arguments":[{"id":6461,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"897:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6462,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"901:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6463,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6457,"src":"904:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":6464,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"907:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"911:6:14","memberName":"sender","nodeType":"MemberAccess","src":"907:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6460,"name":"FoodCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"883:13:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (uint256,uint32,uint32,address)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"883:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6467,"nodeType":"EmitStatement","src":"878:40:14"}]},"functionSelector":"15f769b0","id":6469,"implemented":true,"kind":"function","modifiers":[],"name":"recordFood","nameLocation":"816:10:14","nodeType":"FunctionDefinition","parameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"id","nameLocation":"835:2:14","nodeType":"VariableDeclaration","scope":6469,"src":"827:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6452,"name":"uint256","nodeType":"ElementaryTypeName","src":"827:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6455,"mutability":"mutable","name":"x","nameLocation":"846:1:14","nodeType":"VariableDeclaration","scope":6469,"src":"839:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6454,"name":"uint32","nodeType":"ElementaryTypeName","src":"839:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6457,"mutability":"mutable","name":"y","nameLocation":"856:1:14","nodeType":"VariableDeclaration","scope":6469,"src":"849:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6456,"name":"uint32","nodeType":"ElementaryTypeName","src":"849:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"826:32:14"},"returnParameters":{"id":6459,"nodeType":"ParameterList","parameters":[],"src":"868:0:14"},"scope":6846,"src":"807:118:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6488,"nodeType":"Block","src":"1000:66:14","statements":[{"expression":{"baseExpression":{"id":6478,"name":"visited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"1017:7:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6486,"indexExpression":{"arguments":[{"arguments":[{"id":6482,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"1052:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6483,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"1055:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":6480,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1035:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1039:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"1035:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1035:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6479,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1025:9:14","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1025:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1017:42:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6477,"id":6487,"nodeType":"Return","src":"1010:49:14"}]},"functionSelector":"06d9e4b5","id":6489,"implemented":true,"kind":"function","modifiers":[],"name":"hasVisited","nameLocation":"940:10:14","nodeType":"FunctionDefinition","parameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"x","nameLocation":"958:1:14","nodeType":"VariableDeclaration","scope":6489,"src":"951:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6470,"name":"uint32","nodeType":"ElementaryTypeName","src":"951:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6473,"mutability":"mutable","name":"y","nameLocation":"968:1:14","nodeType":"VariableDeclaration","scope":6489,"src":"961:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6472,"name":"uint32","nodeType":"ElementaryTypeName","src":"961:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"950:20:14"},"returnParameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6489,"src":"994:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6475,"name":"bool","nodeType":"ElementaryTypeName","src":"994:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"993:6:14"},"scope":6846,"src":"931:135:14","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"ColonyMemory.DrugDelivery","documentation":{"id":6490,"nodeType":"StructuredDocumentation","src":"1121:46:14","text":"@notice Drug delivery event from a nanobot"},"id":6503,"members":[{"constant":false,"id":6492,"mutability":"mutable","name":"x","nameLocation":"1209:1:14","nodeType":"VariableDeclaration","scope":6503,"src":"1202:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6491,"name":"uint32","nodeType":"ElementaryTypeName","src":"1202:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6494,"mutability":"mutable","name":"y","nameLocation":"1279:1:14","nodeType":"VariableDeclaration","scope":6503,"src":"1272:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6493,"name":"uint32","nodeType":"ElementaryTypeName","src":"1272:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6496,"mutability":"mutable","name":"z","nameLocation":"1349:1:14","nodeType":"VariableDeclaration","scope":6503,"src":"1342:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6495,"name":"uint32","nodeType":"ElementaryTypeName","src":"1342:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6498,"mutability":"mutable","name":"timestamp","nameLocation":"1419:9:14","nodeType":"VariableDeclaration","scope":6503,"src":"1412:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6497,"name":"uint32","nodeType":"ElementaryTypeName","src":"1412:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6500,"mutability":"mutable","name":"nanobot","nameLocation":"1510:7:14","nodeType":"VariableDeclaration","scope":6503,"src":"1502:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6499,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6502,"mutability":"mutable","name":"payloadAmount","nameLocation":"1569:13:14","nodeType":"VariableDeclaration","scope":6503,"src":"1562:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6501,"name":"uint16","nodeType":"ElementaryTypeName","src":"1562:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"DrugDelivery","nameLocation":"1179:12:14","nodeType":"StructDefinition","scope":6846,"src":"1172:457:14","visibility":"public"},{"canonicalName":"ColonyMemory.TumorKill","documentation":{"id":6504,"nodeType":"StructuredDocumentation","src":"1639:55:14","text":"@notice Tumor cell kill event (apoptosis from drug)"},"id":6517,"members":[{"constant":false,"id":6506,"mutability":"mutable","name":"cellId","nameLocation":"1734:6:14","nodeType":"VariableDeclaration","scope":6517,"src":"1726:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1726:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6508,"mutability":"mutable","name":"x","nameLocation":"1793:1:14","nodeType":"VariableDeclaration","scope":6517,"src":"1786:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6507,"name":"uint32","nodeType":"ElementaryTypeName","src":"1786:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6510,"mutability":"mutable","name":"y","nameLocation":"1842:1:14","nodeType":"VariableDeclaration","scope":6517,"src":"1835:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6509,"name":"uint32","nodeType":"ElementaryTypeName","src":"1835:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6512,"mutability":"mutable","name":"z","nameLocation":"1891:1:14","nodeType":"VariableDeclaration","scope":6517,"src":"1884:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6511,"name":"uint32","nodeType":"ElementaryTypeName","src":"1884:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6514,"mutability":"mutable","name":"timestamp","nameLocation":"1940:9:14","nodeType":"VariableDeclaration","scope":6517,"src":"1933:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6513,"name":"uint32","nodeType":"ElementaryTypeName","src":"1933:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6516,"mutability":"mutable","name":"nanobot","nameLocation":"2003:7:14","nodeType":"VariableDeclaration","scope":6517,"src":"1995:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6515,"name":"address","nodeType":"ElementaryTypeName","src":"1995:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TumorKill","nameLocation":"1706:9:14","nodeType":"StructDefinition","scope":6846,"src":"1699:363:14","visibility":"public"},{"canonicalName":"ColonyMemory.SimulationRun","documentation":{"id":6518,"nodeType":"StructuredDocumentation","src":"2072:35:14","text":"@notice Simulation run metadata"},"id":6533,"members":[{"constant":false,"id":6520,"mutability":"mutable","name":"runHash","nameLocation":"2151:7:14","nodeType":"VariableDeclaration","scope":6533,"src":"2143:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2143:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6522,"mutability":"mutable","name":"startTime","nameLocation":"2224:9:14","nodeType":"VariableDeclaration","scope":6533,"src":"2217:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6521,"name":"uint32","nodeType":"ElementaryTypeName","src":"2217:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6524,"mutability":"mutable","name":"totalSteps","nameLocation":"2301:10:14","nodeType":"VariableDeclaration","scope":6533,"src":"2294:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6523,"name":"uint32","nodeType":"ElementaryTypeName","src":"2294:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6526,"mutability":"mutable","name":"cellsKilled","nameLocation":"2370:11:14","nodeType":"VariableDeclaration","scope":6533,"src":"2363:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6525,"name":"uint16","nodeType":"ElementaryTypeName","src":"2363:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6528,"mutability":"mutable","name":"drugDeliveries","nameLocation":"2432:14:14","nodeType":"VariableDeclaration","scope":6533,"src":"2425:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6527,"name":"uint16","nodeType":"ElementaryTypeName","src":"2425:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6530,"mutability":"mutable","name":"submitter","nameLocation":"2497:9:14","nodeType":"VariableDeclaration","scope":6533,"src":"2489:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6529,"name":"address","nodeType":"ElementaryTypeName","src":"2489:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6532,"mutability":"mutable","name":"completed","nameLocation":"2562:9:14","nodeType":"VariableDeclaration","scope":6533,"src":"2557:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6531,"name":"bool","nodeType":"ElementaryTypeName","src":"2557:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SimulationRun","nameLocation":"2119:13:14","nodeType":"StructDefinition","scope":6846,"src":"2112:521:14","visibility":"public"},{"anonymous":false,"eventSelector":"0c591fc8d9121ee406f82b19ea6d42a63a55a45e0ff89b44679a059325a9e88f","id":6549,"name":"DrugDelivered","nameLocation":"2684:13:14","nodeType":"EventDefinition","parameters":{"id":6548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6535,"indexed":true,"mutability":"mutable","name":"runHash","nameLocation":"2723:7:14","nodeType":"VariableDeclaration","scope":6549,"src":"2707:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2707:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6537,"indexed":false,"mutability":"mutable","name":"x","nameLocation":"2747:1:14","nodeType":"VariableDeclaration","scope":6549,"src":"2740:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6536,"name":"uint32","nodeType":"ElementaryTypeName","src":"2740:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6539,"indexed":false,"mutability":"mutable","name":"y","nameLocation":"2757:1:14","nodeType":"VariableDeclaration","scope":6549,"src":"2750:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6538,"name":"uint32","nodeType":"ElementaryTypeName","src":"2750:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6541,"indexed":false,"mutability":"mutable","name":"z","nameLocation":"2767:1:14","nodeType":"VariableDeclaration","scope":6549,"src":"2760:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6540,"name":"uint32","nodeType":"ElementaryTypeName","src":"2760:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6543,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2785:9:14","nodeType":"VariableDeclaration","scope":6549,"src":"2778:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6542,"name":"uint32","nodeType":"ElementaryTypeName","src":"2778:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6545,"indexed":true,"mutability":"mutable","name":"nanobot","nameLocation":"2820:7:14","nodeType":"VariableDeclaration","scope":6549,"src":"2804:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6544,"name":"address","nodeType":"ElementaryTypeName","src":"2804:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6547,"indexed":false,"mutability":"mutable","name":"payloadAmount","nameLocation":"2844:13:14","nodeType":"VariableDeclaration","scope":6549,"src":"2837:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6546,"name":"uint16","nodeType":"ElementaryTypeName","src":"2837:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2697:166:14"},"src":"2678:186:14"},{"anonymous":false,"eventSelector":"e8c635839f4de7f9d0f38caa555296d8429b545b346a980fbe98de2bb6ed9d91","id":6565,"name":"TumorCellKilled","nameLocation":"2880:15:14","nodeType":"EventDefinition","parameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"indexed":true,"mutability":"mutable","name":"runHash","nameLocation":"2921:7:14","nodeType":"VariableDeclaration","scope":6565,"src":"2905:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2905:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6553,"indexed":true,"mutability":"mutable","name":"cellId","nameLocation":"2954:6:14","nodeType":"VariableDeclaration","scope":6565,"src":"2938:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2938:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6555,"indexed":false,"mutability":"mutable","name":"x","nameLocation":"2977:1:14","nodeType":"VariableDeclaration","scope":6565,"src":"2970:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6554,"name":"uint32","nodeType":"ElementaryTypeName","src":"2970:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6557,"indexed":false,"mutability":"mutable","name":"y","nameLocation":"2987:1:14","nodeType":"VariableDeclaration","scope":6565,"src":"2980:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6556,"name":"uint32","nodeType":"ElementaryTypeName","src":"2980:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6559,"indexed":false,"mutability":"mutable","name":"z","nameLocation":"2997:1:14","nodeType":"VariableDeclaration","scope":6565,"src":"2990:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6558,"name":"uint32","nodeType":"ElementaryTypeName","src":"2990:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6561,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3015:9:14","nodeType":"VariableDeclaration","scope":6565,"src":"3008:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6560,"name":"uint32","nodeType":"ElementaryTypeName","src":"3008:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6563,"indexed":true,"mutability":"mutable","name":"nanobot","nameLocation":"3050:7:14","nodeType":"VariableDeclaration","scope":6565,"src":"3034:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6562,"name":"address","nodeType":"ElementaryTypeName","src":"3034:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2895:168:14"},"src":"2874:190:14"},{"anonymous":false,"eventSelector":"edacaa8e2a0034e7170a0aa44490014012724dfa25d7002a7fc867aa075bcead","id":6577,"name":"SimulationCompleted","nameLocation":"3080:19:14","nodeType":"EventDefinition","parameters":{"id":6576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6567,"indexed":true,"mutability":"mutable","name":"runHash","nameLocation":"3125:7:14","nodeType":"VariableDeclaration","scope":6577,"src":"3109:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3109:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6569,"indexed":false,"mutability":"mutable","name":"totalSteps","nameLocation":"3149:10:14","nodeType":"VariableDeclaration","scope":6577,"src":"3142:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6568,"name":"uint32","nodeType":"ElementaryTypeName","src":"3142:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6571,"indexed":false,"mutability":"mutable","name":"cellsKilled","nameLocation":"3176:11:14","nodeType":"VariableDeclaration","scope":6577,"src":"3169:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6570,"name":"uint16","nodeType":"ElementaryTypeName","src":"3169:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6573,"indexed":false,"mutability":"mutable","name":"drugDeliveries","nameLocation":"3204:14:14","nodeType":"VariableDeclaration","scope":6577,"src":"3197:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6572,"name":"uint16","nodeType":"ElementaryTypeName","src":"3197:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6575,"indexed":true,"mutability":"mutable","name":"submitter","nameLocation":"3244:9:14","nodeType":"VariableDeclaration","scope":6577,"src":"3228:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6574,"name":"address","nodeType":"ElementaryTypeName","src":"3228:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3099:160:14"},"src":"3074:186:14"},{"constant":false,"functionSelector":"10756524","id":6582,"mutability":"mutable","name":"simulations","nameLocation":"3348:11:14","nodeType":"VariableDeclaration","scope":6846,"src":"3307:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SimulationRun_$6533_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.SimulationRun)"},"typeName":{"id":6581,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3315:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3307:33:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SimulationRun_$6533_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.SimulationRun)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6580,"nodeType":"UserDefinedTypeName","pathNode":{"id":6579,"name":"SimulationRun","nameLocations":["3326:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":6533,"src":"3326:13:14"},"referencedDeclaration":6533,"src":"3326:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun"}}},"visibility":"public"},{"constant":false,"functionSelector":"51f40850","id":6588,"mutability":"mutable","name":"deliveriesByRun","nameLocation":"3407:15:14","nodeType":"VariableDeclaration","scope":6846,"src":"3365:57:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_DrugDelivery_$6503_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.DrugDelivery[])"},"typeName":{"id":6587,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6583,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3373:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3365:34:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_DrugDelivery_$6503_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.DrugDelivery[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6585,"nodeType":"UserDefinedTypeName","pathNode":{"id":6584,"name":"DrugDelivery","nameLocations":["3384:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":6503,"src":"3384:12:14"},"referencedDeclaration":6503,"src":"3384:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_DrugDelivery_$6503_storage_ptr","typeString":"struct ColonyMemory.DrugDelivery"}},"id":6586,"nodeType":"ArrayTypeName","src":"3384:14:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DrugDelivery_$6503_storage_$dyn_storage_ptr","typeString":"struct ColonyMemory.DrugDelivery[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"c86374df","id":6594,"mutability":"mutable","name":"killsByRun","nameLocation":"3467:10:14","nodeType":"VariableDeclaration","scope":6846,"src":"3428:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_TumorKill_$6517_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.TumorKill[])"},"typeName":{"id":6593,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3436:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3428:31:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_TumorKill_$6517_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.TumorKill[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6591,"nodeType":"UserDefinedTypeName","pathNode":{"id":6590,"name":"TumorKill","nameLocations":["3447:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":6517,"src":"3447:9:14"},"referencedDeclaration":6517,"src":"3447:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_TumorKill_$6517_storage_ptr","typeString":"struct ColonyMemory.TumorKill"}},"id":6592,"nodeType":"ArrayTypeName","src":"3447:11:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TumorKill_$6517_storage_$dyn_storage_ptr","typeString":"struct ColonyMemory.TumorKill[]"}}},"visibility":"public"},{"body":{"id":6641,"nodeType":"Block","src":"3713:408:14","statements":[{"assignments":[6612],"declarations":[{"constant":false,"id":6612,"mutability":"mutable","name":"delivery","nameLocation":"3743:8:14","nodeType":"VariableDeclaration","scope":6641,"src":"3723:28:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DrugDelivery_$6503_memory_ptr","typeString":"struct ColonyMemory.DrugDelivery"},"typeName":{"id":6611,"nodeType":"UserDefinedTypeName","pathNode":{"id":6610,"name":"DrugDelivery","nameLocations":["3723:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":6503,"src":"3723:12:14"},"referencedDeclaration":6503,"src":"3723:12:14","typeDescriptions":{"typeIdentifier":"t_struct$_DrugDelivery_$6503_storage_ptr","typeString":"struct ColonyMemory.DrugDelivery"}},"visibility":"internal"}],"id":6622,"initialValue":{"arguments":[{"id":6614,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"3784:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6615,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"3802:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6616,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"3820:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6617,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"3846:9:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":6618,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3878:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3882:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3878:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6620,"name":"payloadAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"3917:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":6613,"name":"DrugDelivery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"3754:12:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DrugDelivery_$6503_storage_ptr_$","typeString":"type(struct ColonyMemory.DrugDelivery storage pointer)"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3781:1:14","3799:1:14","3817:1:14","3835:9:14","3869:7:14","3902:13:14"],"names":["x","y","z","timestamp","nanobot","payloadAmount"],"nodeType":"FunctionCall","src":"3754:187:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DrugDelivery_$6503_memory_ptr","typeString":"struct ColonyMemory.DrugDelivery memory"}},"nodeType":"VariableDeclarationStatement","src":"3723:218:14"},{"expression":{"arguments":[{"id":6627,"name":"delivery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"3990:8:14","typeDescriptions":{"typeIdentifier":"t_struct$_DrugDelivery_$6503_memory_ptr","typeString":"struct ColonyMemory.DrugDelivery memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DrugDelivery_$6503_memory_ptr","typeString":"struct ColonyMemory.DrugDelivery memory"}],"expression":{"baseExpression":{"id":6623,"name":"deliveriesByRun","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"3960:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_DrugDelivery_$6503_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.DrugDelivery storage ref[] storage ref)"}},"id":6625,"indexExpression":{"id":6624,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"3976:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3960:24:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DrugDelivery_$6503_storage_$dyn_storage","typeString":"struct ColonyMemory.DrugDelivery storage ref[] storage ref"}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:4:14","memberName":"push","nodeType":"MemberAccess","src":"3960:29:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_DrugDelivery_$6503_storage_$dyn_storage_ptr_$_t_struct$_DrugDelivery_$6503_storage_$returns$__$attached_to$_t_array$_t_struct$_DrugDelivery_$6503_storage_$dyn_storage_ptr_$","typeString":"function (struct ColonyMemory.DrugDelivery storage ref[] storage pointer,struct ColonyMemory.DrugDelivery storage ref)"}},"id":6628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3960:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6629,"nodeType":"ExpressionStatement","src":"3960:39:14"},{"eventCall":{"arguments":[{"id":6631,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"4050:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6632,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6599,"src":"4059:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6633,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"4062:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6634,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6603,"src":"4065:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6635,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"4068:9:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":6636,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4079:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4083:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4079:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6638,"name":"payloadAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"4091:13:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":6630,"name":"DrugDelivered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"4023:13:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_address_$_t_uint16_$returns$__$","typeString":"function (bytes32,uint32,uint32,uint32,uint32,address,uint16)"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4023:91:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6640,"nodeType":"EmitStatement","src":"4018:96:14"}]},"documentation":{"id":6595,"nodeType":"StructuredDocumentation","src":"3488:58:14","text":"@notice Record a drug delivery event during simulation"},"functionSelector":"999a6ff2","id":6642,"implemented":true,"kind":"function","modifiers":[],"name":"recordDrugDelivery","nameLocation":"3560:18:14","nodeType":"FunctionDefinition","parameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"runHash","nameLocation":"3596:7:14","nodeType":"VariableDeclaration","scope":6642,"src":"3588:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3588:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6599,"mutability":"mutable","name":"x","nameLocation":"3620:1:14","nodeType":"VariableDeclaration","scope":6642,"src":"3613:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6598,"name":"uint32","nodeType":"ElementaryTypeName","src":"3613:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6601,"mutability":"mutable","name":"y","nameLocation":"3630:1:14","nodeType":"VariableDeclaration","scope":6642,"src":"3623:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6600,"name":"uint32","nodeType":"ElementaryTypeName","src":"3623:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6603,"mutability":"mutable","name":"z","nameLocation":"3640:1:14","nodeType":"VariableDeclaration","scope":6642,"src":"3633:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6602,"name":"uint32","nodeType":"ElementaryTypeName","src":"3633:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6605,"mutability":"mutable","name":"timestamp","nameLocation":"3658:9:14","nodeType":"VariableDeclaration","scope":6642,"src":"3651:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6604,"name":"uint32","nodeType":"ElementaryTypeName","src":"3651:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6607,"mutability":"mutable","name":"payloadAmount","nameLocation":"3684:13:14","nodeType":"VariableDeclaration","scope":6642,"src":"3677:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6606,"name":"uint16","nodeType":"ElementaryTypeName","src":"3677:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"3578:125:14"},"returnParameters":{"id":6609,"nodeType":"ParameterList","parameters":[],"src":"3713:0:14"},"scope":6846,"src":"3551:570:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6689,"nodeType":"Block","src":"4331:370:14","statements":[{"assignments":[6660],"declarations":[{"constant":false,"id":6660,"mutability":"mutable","name":"kill","nameLocation":"4358:4:14","nodeType":"VariableDeclaration","scope":6689,"src":"4341:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TumorKill_$6517_memory_ptr","typeString":"struct ColonyMemory.TumorKill"},"typeName":{"id":6659,"nodeType":"UserDefinedTypeName","pathNode":{"id":6658,"name":"TumorKill","nameLocations":["4341:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":6517,"src":"4341:9:14"},"referencedDeclaration":6517,"src":"4341:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_TumorKill_$6517_storage_ptr","typeString":"struct ColonyMemory.TumorKill"}},"visibility":"internal"}],"id":6670,"initialValue":{"arguments":[{"id":6662,"name":"cellId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"4397:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6663,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"4420:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6664,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6651,"src":"4438:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6665,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"4456:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6666,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"4482:9:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":6667,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4514:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4518:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4514:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6661,"name":"TumorKill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"4365:9:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TumorKill_$6517_storage_ptr_$","typeString":"type(struct ColonyMemory.TumorKill storage pointer)"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4389:6:14","4417:1:14","4435:1:14","4453:1:14","4471:9:14","4505:7:14"],"names":["cellId","x","y","z","timestamp","nanobot"],"nodeType":"FunctionCall","src":"4365:170:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TumorKill_$6517_memory_ptr","typeString":"struct ColonyMemory.TumorKill memory"}},"nodeType":"VariableDeclarationStatement","src":"4341:194:14"},{"expression":{"arguments":[{"id":6675,"name":"kill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"4579:4:14","typeDescriptions":{"typeIdentifier":"t_struct$_TumorKill_$6517_memory_ptr","typeString":"struct ColonyMemory.TumorKill memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TumorKill_$6517_memory_ptr","typeString":"struct ColonyMemory.TumorKill memory"}],"expression":{"baseExpression":{"id":6671,"name":"killsByRun","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"4554:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_TumorKill_$6517_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.TumorKill storage ref[] storage ref)"}},"id":6673,"indexExpression":{"id":6672,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"4565:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4554:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TumorKill_$6517_storage_$dyn_storage","typeString":"struct ColonyMemory.TumorKill storage ref[] storage ref"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4574:4:14","memberName":"push","nodeType":"MemberAccess","src":"4554:24:14","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TumorKill_$6517_storage_$dyn_storage_ptr_$_t_struct$_TumorKill_$6517_storage_$returns$__$attached_to$_t_array$_t_struct$_TumorKill_$6517_storage_$dyn_storage_ptr_$","typeString":"function (struct ColonyMemory.TumorKill storage ref[] storage pointer,struct ColonyMemory.TumorKill storage ref)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4554:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6677,"nodeType":"ExpressionStatement","src":"4554:30:14"},{"eventCall":{"arguments":[{"id":6679,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"4637:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6680,"name":"cellId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6647,"src":"4646:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6681,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6649,"src":"4654:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6682,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6651,"src":"4657:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6683,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6653,"src":"4660:1:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6684,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6655,"src":"4663:9:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":6685,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4674:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4678:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4674:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6678,"name":"TumorCellKilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"4608:15:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint32,uint32,uint32,uint32,address)"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4608:86:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6688,"nodeType":"EmitStatement","src":"4603:91:14"}]},"documentation":{"id":6643,"nodeType":"StructuredDocumentation","src":"4131:42:14","text":"@notice Record a tumor cell kill event"},"functionSelector":"72c9c94b","id":6690,"implemented":true,"kind":"function","modifiers":[],"name":"recordTumorKill","nameLocation":"4187:15:14","nodeType":"FunctionDefinition","parameters":{"id":6656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6645,"mutability":"mutable","name":"runHash","nameLocation":"4220:7:14","nodeType":"VariableDeclaration","scope":6690,"src":"4212:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4212:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6647,"mutability":"mutable","name":"cellId","nameLocation":"4245:6:14","nodeType":"VariableDeclaration","scope":6690,"src":"4237:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4237:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6649,"mutability":"mutable","name":"x","nameLocation":"4268:1:14","nodeType":"VariableDeclaration","scope":6690,"src":"4261:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6648,"name":"uint32","nodeType":"ElementaryTypeName","src":"4261:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6651,"mutability":"mutable","name":"y","nameLocation":"4278:1:14","nodeType":"VariableDeclaration","scope":6690,"src":"4271:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6650,"name":"uint32","nodeType":"ElementaryTypeName","src":"4271:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6653,"mutability":"mutable","name":"z","nameLocation":"4288:1:14","nodeType":"VariableDeclaration","scope":6690,"src":"4281:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6652,"name":"uint32","nodeType":"ElementaryTypeName","src":"4281:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6655,"mutability":"mutable","name":"timestamp","nameLocation":"4306:9:14","nodeType":"VariableDeclaration","scope":6690,"src":"4299:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6654,"name":"uint32","nodeType":"ElementaryTypeName","src":"4299:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4202:119:14"},"returnParameters":{"id":6657,"nodeType":"ParameterList","parameters":[],"src":"4331:0:14"},"scope":6846,"src":"4178:523:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6725,"nodeType":"Block","src":"4815:379:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6697,"name":"simulations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"4833:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SimulationRun_$6533_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.SimulationRun storage ref)"}},"id":6699,"indexExpression":{"id":6698,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"4845:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4833:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage","typeString":"struct ColonyMemory.SimulationRun storage ref"}},"id":6700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4854:9:14","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":6522,"src":"4833:30:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4867:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4833:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52756e20616c726561647920657869737473","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4870:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb9aab6e665d73318313057e0663f10aea1d525e772fd1a2642d119f0b3cad19","typeString":"literal_string \"Run already exists\""},"value":"Run already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb9aab6e665d73318313057e0663f10aea1d525e772fd1a2642d119f0b3cad19","typeString":"literal_string \"Run already exists\""}],"id":6696,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4825:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4825:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6705,"nodeType":"ExpressionStatement","src":"4825:66:14"},{"expression":{"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6706,"name":"simulations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"4910:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SimulationRun_$6533_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.SimulationRun storage ref)"}},"id":6708,"indexExpression":{"id":6707,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"4922:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4910:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage","typeString":"struct ColonyMemory.SimulationRun storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6710,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"4970:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"expression":{"id":6713,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5009:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5015:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"5009:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5002:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6711,"name":"uint32","nodeType":"ElementaryTypeName","src":"5002:6:14","typeDescriptions":{}}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5002:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":6716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5051:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5079:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5110:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":6719,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5136:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5140:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5136:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5171:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6709,"name":"SimulationRun","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"4933:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SimulationRun_$6533_storage_ptr_$","typeString":"type(struct ColonyMemory.SimulationRun storage pointer)"}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4961:7:14","4991:9:14","5039:10:14","5066:11:14","5094:14:14","5125:9:14","5160:9:14"],"names":["runHash","startTime","totalSteps","cellsKilled","drugDeliveries","submitter","completed"],"nodeType":"FunctionCall","src":"4933:254:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_memory_ptr","typeString":"struct ColonyMemory.SimulationRun memory"}},"src":"4910:277:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage","typeString":"struct ColonyMemory.SimulationRun storage ref"}},"id":6724,"nodeType":"ExpressionStatement","src":"4910:277:14"}]},"documentation":{"id":6691,"nodeType":"StructuredDocumentation","src":"4711:43:14","text":"@notice Initialize a new simulation run"},"functionSelector":"2b500d92","id":6726,"implemented":true,"kind":"function","modifiers":[],"name":"initializeSimulation","nameLocation":"4768:20:14","nodeType":"FunctionDefinition","parameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"runHash","nameLocation":"4797:7:14","nodeType":"VariableDeclaration","scope":6726,"src":"4789:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4789:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4788:17:14"},"returnParameters":{"id":6695,"nodeType":"ParameterList","parameters":[],"src":"4815:0:14"},"scope":6846,"src":"4759:435:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6802,"nodeType":"Block","src":"5428:546:14","statements":[{"assignments":[6740],"declarations":[{"constant":false,"id":6740,"mutability":"mutable","name":"run","nameLocation":"5460:3:14","nodeType":"VariableDeclaration","scope":6802,"src":"5438:25:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun"},"typeName":{"id":6739,"nodeType":"UserDefinedTypeName","pathNode":{"id":6738,"name":"SimulationRun","nameLocations":["5438:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":6533,"src":"5438:13:14"},"referencedDeclaration":6533,"src":"5438:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun"}},"visibility":"internal"}],"id":6744,"initialValue":{"baseExpression":{"id":6741,"name":"simulations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"5466:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SimulationRun_$6533_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.SimulationRun storage ref)"}},"id":6743,"indexExpression":{"id":6742,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"5478:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage","typeString":"struct ColonyMemory.SimulationRun storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5438:48:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6746,"name":"run","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5504:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun storage pointer"}},"id":6747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5508:9:14","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":6522,"src":"5504:13:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5520:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5504:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52756e206e6f7420696e697469616c697a6564","id":6750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5523:21:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca151f33c987d7e0d32191cb513e341c9c398e1a92837aa220cf58028a1c0bde","typeString":"literal_string \"Run not initialized\""},"value":"Run not initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca151f33c987d7e0d32191cb513e341c9c398e1a92837aa220cf58028a1c0bde","typeString":"literal_string \"Run not initialized\""}],"id":6745,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5496:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6752,"nodeType":"ExpressionStatement","src":"5496:49:14"},{"expression":{"arguments":[{"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5563:14:14","subExpression":{"expression":{"id":6754,"name":"run","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5564:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun storage pointer"}},"id":6755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5568:9:14","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":6532,"src":"5564:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52756e20616c726561647920636f6d706c65746564","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5579:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_02de18497ddc087240811fd2a67c62125b66362e1547cf0b37a2d253d32a526c","typeString":"literal_string \"Run already completed\""},"value":"Run already completed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_02de18497ddc087240811fd2a67c62125b66362e1547cf0b37a2d253d32a526c","typeString":"literal_string \"Run already completed\""}],"id":6753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5555:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5555:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6759,"nodeType":"ExpressionStatement","src":"5555:48:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5621:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5625:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5621:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6763,"name":"run","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5635:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun storage pointer"}},"id":6764,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5639:9:14","memberName":"submitter","nodeType":"MemberAccess","referencedDeclaration":6530,"src":"5635:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5621:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207375626d69747465722063616e20636f6d706c657465","id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5650:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_19eb6f4ac77c3b650a01fe1bc98567966de23af28cd681598da4991ea0ae8d19","typeString":"literal_string \"Only submitter can complete\""},"value":"Only submitter can complete"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19eb6f4ac77c3b650a01fe1bc98567966de23af28cd681598da4991ea0ae8d19","typeString":"literal_string \"Only submitter can complete\""}],"id":6760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5613:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6768,"nodeType":"ExpressionStatement","src":"5613:67:14"},{"expression":{"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6769,"name":"run","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5699:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun storage pointer"}},"id":6771,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5703:10:14","memberName":"totalSteps","nodeType":"MemberAccess","referencedDeclaration":6524,"src":"5699:14:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6772,"name":"totalSteps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"5716:10:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"5699:27:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":6774,"nodeType":"ExpressionStatement","src":"5699:27:14"},{"expression":{"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6775,"name":"run","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5736:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun storage pointer"}},"id":6777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5740:11:14","memberName":"cellsKilled","nodeType":"MemberAccess","referencedDeclaration":6526,"src":"5736:15:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6778,"name":"cellsKilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"5754:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5736:29:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":6780,"nodeType":"ExpressionStatement","src":"5736:29:14"},{"expression":{"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6781,"name":"run","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5775:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun storage pointer"}},"id":6783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5779:14:14","memberName":"drugDeliveries","nodeType":"MemberAccess","referencedDeclaration":6528,"src":"5775:18:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6784,"name":"drugDeliveries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"5796:14:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"5775:35:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":6786,"nodeType":"ExpressionStatement","src":"5775:35:14"},{"expression":{"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6787,"name":"run","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6740,"src":"5820:3:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun storage pointer"}},"id":6789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5824:9:14","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":6532,"src":"5820:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5836:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5820:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6792,"nodeType":"ExpressionStatement","src":"5820:20:14"},{"eventCall":{"arguments":[{"id":6794,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"5897:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6795,"name":"totalSteps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"5906:10:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":6796,"name":"cellsKilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6733,"src":"5918:11:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":6797,"name":"drugDeliveries","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"5931:14:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":6798,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5947:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5951:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5947:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6793,"name":"SimulationCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"5864:19:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint32_$_t_uint16_$_t_uint16_$_t_address_$returns$__$","typeString":"function (bytes32,uint32,uint16,uint16,address)"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5864:103:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6801,"nodeType":"EmitStatement","src":"5859:108:14"}]},"documentation":{"id":6727,"nodeType":"StructuredDocumentation","src":"5204:65:14","text":"@notice Complete a simulation run and record final statistics"},"functionSelector":"13615122","id":6803,"implemented":true,"kind":"function","modifiers":[],"name":"completeSimulation","nameLocation":"5283:18:14","nodeType":"FunctionDefinition","parameters":{"id":6736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6729,"mutability":"mutable","name":"runHash","nameLocation":"5319:7:14","nodeType":"VariableDeclaration","scope":6803,"src":"5311:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5311:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6731,"mutability":"mutable","name":"totalSteps","nameLocation":"5343:10:14","nodeType":"VariableDeclaration","scope":6803,"src":"5336:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6730,"name":"uint32","nodeType":"ElementaryTypeName","src":"5336:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6733,"mutability":"mutable","name":"cellsKilled","nameLocation":"5370:11:14","nodeType":"VariableDeclaration","scope":6803,"src":"5363:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6732,"name":"uint16","nodeType":"ElementaryTypeName","src":"5363:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6735,"mutability":"mutable","name":"drugDeliveries","nameLocation":"5398:14:14","nodeType":"VariableDeclaration","scope":6803,"src":"5391:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6734,"name":"uint16","nodeType":"ElementaryTypeName","src":"5391:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5301:117:14"},"returnParameters":{"id":6737,"nodeType":"ParameterList","parameters":[],"src":"5428:0:14"},"scope":6846,"src":"5274:700:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6816,"nodeType":"Block","src":"6115:55:14","statements":[{"expression":{"expression":{"baseExpression":{"id":6811,"name":"deliveriesByRun","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"6132:15:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_DrugDelivery_$6503_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.DrugDelivery storage ref[] storage ref)"}},"id":6813,"indexExpression":{"id":6812,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"6148:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6132:24:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DrugDelivery_$6503_storage_$dyn_storage","typeString":"struct ColonyMemory.DrugDelivery storage ref[] storage ref"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6157:6:14","memberName":"length","nodeType":"MemberAccess","src":"6132:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6810,"id":6815,"nodeType":"Return","src":"6125:38:14"}]},"documentation":{"id":6804,"nodeType":"StructuredDocumentation","src":"5984:51:14","text":"@notice Get delivery count for a simulation run"},"functionSelector":"7adb273a","id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"getDeliveryCount","nameLocation":"6049:16:14","nodeType":"FunctionDefinition","parameters":{"id":6807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6806,"mutability":"mutable","name":"runHash","nameLocation":"6074:7:14","nodeType":"VariableDeclaration","scope":6817,"src":"6066:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6066:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6065:17:14"},"returnParameters":{"id":6810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6817,"src":"6106:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6808,"name":"uint256","nodeType":"ElementaryTypeName","src":"6106:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6105:9:14"},"scope":6846,"src":"6040:130:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6830,"nodeType":"Block","src":"6303:50:14","statements":[{"expression":{"expression":{"baseExpression":{"id":6825,"name":"killsByRun","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"6320:10:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_TumorKill_$6517_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.TumorKill storage ref[] storage ref)"}},"id":6827,"indexExpression":{"id":6826,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6331:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:19:14","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TumorKill_$6517_storage_$dyn_storage","typeString":"struct ColonyMemory.TumorKill storage ref[] storage ref"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6340:6:14","memberName":"length","nodeType":"MemberAccess","src":"6320:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6824,"id":6829,"nodeType":"Return","src":"6313:33:14"}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"6180:47:14","text":"@notice Get kill count for a simulation run"},"functionSelector":"25c3dc2e","id":6831,"implemented":true,"kind":"function","modifiers":[],"name":"getKillCount","nameLocation":"6241:12:14","nodeType":"FunctionDefinition","parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"runHash","nameLocation":"6262:7:14","nodeType":"VariableDeclaration","scope":6831,"src":"6254:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6254:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6253:17:14"},"returnParameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6831,"src":"6294:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6822,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:9:14"},"scope":6846,"src":"6232:121:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6844,"nodeType":"Block","src":"6491:44:14","statements":[{"expression":{"baseExpression":{"id":6840,"name":"simulations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"6508:11:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_SimulationRun_$6533_storage_$","typeString":"mapping(bytes32 => struct ColonyMemory.SimulationRun storage ref)"}},"id":6842,"indexExpression":{"id":6841,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"6520:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6508:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage","typeString":"struct ColonyMemory.SimulationRun storage ref"}},"functionReturnParameters":6839,"id":6843,"nodeType":"Return","src":"6501:27:14"}]},"documentation":{"id":6832,"nodeType":"StructuredDocumentation","src":"6363:35:14","text":"@notice Get simulation run info"},"functionSelector":"1eb67481","id":6845,"implemented":true,"kind":"function","modifiers":[],"name":"getSimulationRun","nameLocation":"6412:16:14","nodeType":"FunctionDefinition","parameters":{"id":6835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6834,"mutability":"mutable","name":"runHash","nameLocation":"6437:7:14","nodeType":"VariableDeclaration","scope":6845,"src":"6429:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6429:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6428:17:14"},"returnParameters":{"id":6839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6845,"src":"6469:20:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_memory_ptr","typeString":"struct ColonyMemory.SimulationRun"},"typeName":{"id":6837,"nodeType":"UserDefinedTypeName","pathNode":{"id":6836,"name":"SimulationRun","nameLocations":["6469:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":6533,"src":"6469:13:14"},"referencedDeclaration":6533,"src":"6469:13:14","typeDescriptions":{"typeIdentifier":"t_struct$_SimulationRun_$6533_storage_ptr","typeString":"struct ColonyMemory.SimulationRun"}},"visibility":"internal"}],"src":"6468:22:14"},"scope":6846,"src":"6403:132:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6847,"src":"257:6280:14","usedErrors":[],"usedEvents":[6398,6408,6549,6565,6577]}],"src":"32:6506:14"},"id":14},"contracts/ExperienceRegistry.sol":{"ast":{"absolutePath":"contracts/ExperienceRegistry.sol","exportedSymbols":{"ExperienceRegistry":[7339]},"id":7340,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6848,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"ExperienceRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":6849,"nodeType":"StructuredDocumentation","src":"58:236:15","text":"@notice Experience Registry for continual learning and knowledge sharing.\n         Stores simulation run metadata, IPFS pointers, and quality attestations.\n         Enables agents to learn from previous successful strategies."},"fullyImplemented":true,"id":7339,"linearizedBaseContracts":[7339],"name":"ExperienceRegistry","nameLocation":"303:18:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ExperienceRegistry.Experience","documentation":{"id":6850,"nodeType":"StructuredDocumentation","src":"328:40:15","text":"@notice Simulation experience record"},"id":6867,"members":[{"constant":false,"id":6852,"mutability":"mutable","name":"runHash","nameLocation":"409:7:15","nodeType":"VariableDeclaration","scope":6867,"src":"401:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"401:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6854,"mutability":"mutable","name":"ipfsCid","nameLocation":"480:7:15","nodeType":"VariableDeclaration","scope":6867,"src":"473:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6853,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6856,"mutability":"mutable","name":"dataHash","nameLocation":"558:8:15","nodeType":"VariableDeclaration","scope":6867,"src":"550:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"550:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6858,"mutability":"mutable","name":"score","nameLocation":"634:5:15","nodeType":"VariableDeclaration","scope":6867,"src":"626:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6857,"name":"uint256","nodeType":"ElementaryTypeName","src":"626:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6860,"mutability":"mutable","name":"submitter","nameLocation":"720:9:15","nodeType":"VariableDeclaration","scope":6867,"src":"712:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6859,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6862,"mutability":"mutable","name":"timestamp","nameLocation":"792:9:15","nodeType":"VariableDeclaration","scope":6867,"src":"785:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6861,"name":"uint32","nodeType":"ElementaryTypeName","src":"785:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6864,"mutability":"mutable","name":"attestations","nameLocation":"843:12:15","nodeType":"VariableDeclaration","scope":6867,"src":"836:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6863,"name":"uint16","nodeType":"ElementaryTypeName","src":"836:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6866,"mutability":"mutable","name":"verified","nameLocation":"916:8:15","nodeType":"VariableDeclaration","scope":6867,"src":"911:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6865,"name":"bool","nodeType":"ElementaryTypeName","src":"911:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Experience","nameLocation":"380:10:15","nodeType":"StructDefinition","scope":7339,"src":"373:607:15","visibility":"public"},{"canonicalName":"ExperienceRegistry.StrategyMeta","documentation":{"id":6868,"nodeType":"StructuredDocumentation","src":"990:58:15","text":"@notice Strategy metadata for categorizing experiences"},"id":6879,"members":[{"constant":false,"id":6870,"mutability":"mutable","name":"strategyType","nameLocation":"1090:12:15","nodeType":"VariableDeclaration","scope":6879,"src":"1083:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6869,"name":"string","nodeType":"ElementaryTypeName","src":"1083:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6872,"mutability":"mutable","name":"modelUsed","nameLocation":"1173:9:15","nodeType":"VariableDeclaration","scope":6879,"src":"1166:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6871,"name":"string","nodeType":"ElementaryTypeName","src":"1166:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6874,"mutability":"mutable","name":"nanobotCount","nameLocation":"1229:12:15","nodeType":"VariableDeclaration","scope":6879,"src":"1222:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6873,"name":"uint16","nodeType":"ElementaryTypeName","src":"1222:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6876,"mutability":"mutable","name":"tumorRadius","nameLocation":"1283:11:15","nodeType":"VariableDeclaration","scope":6879,"src":"1276:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6875,"name":"uint16","nodeType":"ElementaryTypeName","src":"1276:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6878,"mutability":"mutable","name":"datasetHash","nameLocation":"1340:11:15","nodeType":"VariableDeclaration","scope":6879,"src":"1332:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1332:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"StrategyMeta","nameLocation":"1060:12:15","nodeType":"StructDefinition","scope":7339,"src":"1053:350:15","visibility":"public"},{"canonicalName":"ExperienceRegistry.Attestation","documentation":{"id":6880,"nodeType":"StructuredDocumentation","src":"1413:40:15","text":"@notice Attestation from a validator"},"id":6889,"members":[{"constant":false,"id":6882,"mutability":"mutable","name":"validator","nameLocation":"1495:9:15","nodeType":"VariableDeclaration","scope":6889,"src":"1487:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6881,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6884,"mutability":"mutable","name":"timestamp","nameLocation":"1521:9:15","nodeType":"VariableDeclaration","scope":6889,"src":"1514:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6883,"name":"uint32","nodeType":"ElementaryTypeName","src":"1514:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":6886,"mutability":"mutable","name":"quality","nameLocation":"1546:7:15","nodeType":"VariableDeclaration","scope":6889,"src":"1540:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6885,"name":"uint8","nodeType":"ElementaryTypeName","src":"1540:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6888,"mutability":"mutable","name":"notes","nameLocation":"1602:5:15","nodeType":"VariableDeclaration","scope":6889,"src":"1595:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6887,"name":"string","nodeType":"ElementaryTypeName","src":"1595:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Attestation","nameLocation":"1465:11:15","nodeType":"StructDefinition","scope":7339,"src":"1458:184:15","visibility":"public"},{"anonymous":false,"eventSelector":"c8643348aec2503f08aa01288744bb383830b348039b88a434ae1d5278ddc696","id":6901,"name":"ExperienceSubmitted","nameLocation":"1672:19:15","nodeType":"EventDefinition","parameters":{"id":6900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6891,"indexed":true,"mutability":"mutable","name":"runHash","nameLocation":"1717:7:15","nodeType":"VariableDeclaration","scope":6901,"src":"1701:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1701:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6893,"indexed":false,"mutability":"mutable","name":"ipfsCid","nameLocation":"1741:7:15","nodeType":"VariableDeclaration","scope":6901,"src":"1734:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6892,"name":"string","nodeType":"ElementaryTypeName","src":"1734:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6895,"indexed":false,"mutability":"mutable","name":"dataHash","nameLocation":"1766:8:15","nodeType":"VariableDeclaration","scope":6901,"src":"1758:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1758:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6897,"indexed":false,"mutability":"mutable","name":"score","nameLocation":"1792:5:15","nodeType":"VariableDeclaration","scope":6901,"src":"1784:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1784:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6899,"indexed":true,"mutability":"mutable","name":"submitter","nameLocation":"1823:9:15","nodeType":"VariableDeclaration","scope":6901,"src":"1807:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6898,"name":"address","nodeType":"ElementaryTypeName","src":"1807:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1691:147:15"},"src":"1666:173:15"},{"anonymous":false,"eventSelector":"9a3f0c0b287bde0ebea0be11740769eca2fea70883ef1bd79eab05f21c062c6a","id":6909,"name":"ExperienceAttested","nameLocation":"1855:18:15","nodeType":"EventDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6903,"indexed":true,"mutability":"mutable","name":"runHash","nameLocation":"1899:7:15","nodeType":"VariableDeclaration","scope":6909,"src":"1883:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6905,"indexed":true,"mutability":"mutable","name":"validator","nameLocation":"1932:9:15","nodeType":"VariableDeclaration","scope":6909,"src":"1916:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6904,"name":"address","nodeType":"ElementaryTypeName","src":"1916:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6907,"indexed":false,"mutability":"mutable","name":"quality","nameLocation":"1957:7:15","nodeType":"VariableDeclaration","scope":6909,"src":"1951:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6906,"name":"uint8","nodeType":"ElementaryTypeName","src":"1951:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1873:97:15"},"src":"1849:122:15"},{"anonymous":false,"eventSelector":"cd88bd92cbb653cb16eea4a15037ddc18c0b33cf33cb092a44aa993b0684b5a5","id":6915,"name":"ExperienceVerified","nameLocation":"1987:18:15","nodeType":"EventDefinition","parameters":{"id":6914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6911,"indexed":true,"mutability":"mutable","name":"runHash","nameLocation":"2031:7:15","nodeType":"VariableDeclaration","scope":6915,"src":"2015:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6910,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2015:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6913,"indexed":true,"mutability":"mutable","name":"verifier","nameLocation":"2064:8:15","nodeType":"VariableDeclaration","scope":6915,"src":"2048:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6912,"name":"address","nodeType":"ElementaryTypeName","src":"2048:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2005:73:15"},"src":"1981:98:15"},{"constant":false,"functionSelector":"34f01811","id":6920,"mutability":"mutable","name":"experiences","nameLocation":"2142:11:15","nodeType":"VariableDeclaration","scope":7339,"src":"2104:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience)"},"typeName":{"id":6919,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6916,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2112:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2104:30:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6918,"nodeType":"UserDefinedTypeName","pathNode":{"id":6917,"name":"Experience","nameLocations":["2123:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":6867,"src":"2123:10:15"},"referencedDeclaration":6867,"src":"2123:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage_ptr","typeString":"struct ExperienceRegistry.Experience"}}},"visibility":"public"},{"constant":false,"functionSelector":"3ff34eb9","id":6925,"mutability":"mutable","name":"strategies","nameLocation":"2199:10:15","nodeType":"VariableDeclaration","scope":7339,"src":"2159:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_StrategyMeta_$6879_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.StrategyMeta)"},"typeName":{"id":6924,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2167:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2159:32:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_StrategyMeta_$6879_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.StrategyMeta)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6923,"nodeType":"UserDefinedTypeName","pathNode":{"id":6922,"name":"StrategyMeta","nameLocations":["2178:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":6879,"src":"2178:12:15"},"referencedDeclaration":6879,"src":"2178:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyMeta_$6879_storage_ptr","typeString":"struct ExperienceRegistry.StrategyMeta"}}},"visibility":"public"},{"constant":false,"functionSelector":"a78c52bb","id":6931,"mutability":"mutable","name":"attestations","nameLocation":"2256:12:15","nodeType":"VariableDeclaration","scope":7339,"src":"2215:53:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Attestation[])"},"typeName":{"id":6930,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6926,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2215:33:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Attestation[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6928,"nodeType":"UserDefinedTypeName","pathNode":{"id":6927,"name":"Attestation","nameLocations":["2234:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":6889,"src":"2234:11:15"},"referencedDeclaration":6889,"src":"2234:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$6889_storage_ptr","typeString":"struct ExperienceRegistry.Attestation"}},"id":6929,"nodeType":"ArrayTypeName","src":"2234:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"58714163","id":6935,"mutability":"mutable","name":"authorizedValidators","nameLocation":"2306:20:15","nodeType":"VariableDeclaration","scope":7339,"src":"2274:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6934,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6932,"name":"address","nodeType":"ElementaryTypeName","src":"2282:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2274:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6933,"name":"bool","nodeType":"ElementaryTypeName","src":"2293:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":6937,"mutability":"mutable","name":"owner","nameLocation":"2389:5:15","nodeType":"VariableDeclaration","scope":7339,"src":"2374:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6936,"name":"address","nodeType":"ElementaryTypeName","src":"2374:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"13f269dd","id":6940,"mutability":"mutable","name":"minAttestations","nameLocation":"2472:15:15","nodeType":"VariableDeclaration","scope":7339,"src":"2459:32:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6938,"name":"uint8","nodeType":"ElementaryTypeName","src":"2459:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":6939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"body":{"id":6955,"nodeType":"Block","src":"2516:84:15","statements":[{"expression":{"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6943,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"2526:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2534:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2538:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2534:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2526:18:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6947,"nodeType":"ExpressionStatement","src":"2526:18:15"},{"expression":{"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6948,"name":"authorizedValidators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"2554:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6951,"indexExpression":{"expression":{"id":6949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2575:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2575:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2554:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2589:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2554:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6954,"nodeType":"ExpressionStatement","src":"2554:39:15"}]},"id":6956,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6941,"nodeType":"ParameterList","parameters":[],"src":"2513:2:15"},"returnParameters":{"id":6942,"nodeType":"ParameterList","parameters":[],"src":"2516:0:15"},"scope":7339,"src":"2502:98:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6967,"nodeType":"Block","src":"2631:70:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6959,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2649:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2653:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2649:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6961,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6937,"src":"2663:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2649:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e6572","id":6963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2670:12:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""},"value":"Only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d9f114efaa93d67eedad749dd7fd16a6895ff93e28b7a30c667a069f2ed42d","typeString":"literal_string \"Only owner\""}],"id":6958,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2641:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6965,"nodeType":"ExpressionStatement","src":"2641:42:15"},{"id":6966,"nodeType":"PlaceholderStatement","src":"2693:1:15"}]},"id":6968,"name":"onlyOwner","nameLocation":"2619:9:15","nodeType":"ModifierDefinition","parameters":{"id":6957,"nodeType":"ParameterList","parameters":[],"src":"2628:2:15"},"src":"2610:91:15","virtual":false,"visibility":"internal"},{"body":{"id":6979,"nodeType":"Block","src":"2736:97:15","statements":[{"expression":{"arguments":[{"baseExpression":{"id":6971,"name":"authorizedValidators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"2754:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6974,"indexExpression":{"expression":{"id":6972,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2775:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2779:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2775:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2754:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a65642076616c696461746f72","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2788:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_05c259c45dd6ebc87e2c5daf83ceda0a9ab40790baa9696cf6f56da1a91ce06c","typeString":"literal_string \"Not authorized validator\""},"value":"Not authorized validator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05c259c45dd6ebc87e2c5daf83ceda0a9ab40790baa9696cf6f56da1a91ce06c","typeString":"literal_string \"Not authorized validator\""}],"id":6970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2746:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6977,"nodeType":"ExpressionStatement","src":"2746:69:15"},{"id":6978,"nodeType":"PlaceholderStatement","src":"2825:1:15"}]},"id":6980,"name":"onlyValidator","nameLocation":"2720:13:15","nodeType":"ModifierDefinition","parameters":{"id":6969,"nodeType":"ParameterList","parameters":[],"src":"2733:2:15"},"src":"2711:122:15","virtual":false,"visibility":"internal"},{"body":{"id":7053,"nodeType":"Block","src":"3201:758:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7003,"name":"experiences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"3219:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience storage ref)"}},"id":7005,"indexExpression":{"id":7004,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"3231:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3219:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage","typeString":"struct ExperienceRegistry.Experience storage ref"}},"id":7006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3240:9:15","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":6862,"src":"3219:30:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3253:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3219:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457870657269656e636520616c726561647920657869737473","id":7009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5fd77e3bcbc9d92a6a09225e18b28dabf55cd783406371b429dee003da0dab8","typeString":"literal_string \"Experience already exists\""},"value":"Experience already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b5fd77e3bcbc9d92a6a09225e18b28dabf55cd783406371b429dee003da0dab8","typeString":"literal_string \"Experience already exists\""}],"id":7002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3211:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3211:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7011,"nodeType":"ExpressionStatement","src":"3211:73:15"},{"expression":{"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7012,"name":"experiences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"3303:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience storage ref)"}},"id":7014,"indexExpression":{"id":7013,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"3315:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3303:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage","typeString":"struct ExperienceRegistry.Experience storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7016,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"3360:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7017,"name":"ipfsCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"3390:7:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7018,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"3421:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7019,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3450:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7020,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3480:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3484:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3480:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":7024,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3522:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3528:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"3522:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3515:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7022,"name":"uint32","nodeType":"ElementaryTypeName","src":"3515:6:15","typeDescriptions":{}}},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"30","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3566:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":7028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3591:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7015,"name":"Experience","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"3326:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Experience_$6867_storage_ptr_$","typeString":"type(struct ExperienceRegistry.Experience storage pointer)"}},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3351:7:15","3381:7:15","3411:8:15","3443:5:15","3469:9:15","3504:9:15","3552:12:15","3581:8:15"],"names":["runHash","ipfsCid","dataHash","score","submitter","timestamp","attestations","verified"],"nodeType":"FunctionCall","src":"3326:281:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_memory_ptr","typeString":"struct ExperienceRegistry.Experience memory"}},"src":"3303:304:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage","typeString":"struct ExperienceRegistry.Experience storage ref"}},"id":7031,"nodeType":"ExpressionStatement","src":"3303:304:15"},{"expression":{"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7032,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"3626:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_StrategyMeta_$6879_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.StrategyMeta storage ref)"}},"id":7034,"indexExpression":{"id":7033,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"3637:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3626:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyMeta_$6879_storage","typeString":"struct ExperienceRegistry.StrategyMeta storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7036,"name":"strategyType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"3689:12:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7037,"name":"modelUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"3726:9:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7038,"name":"nanobotCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6995,"src":"3763:12:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":7039,"name":"tumorRadius","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"3802:11:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":7040,"name":"datasetHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"3840:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7035,"name":"StrategyMeta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3648:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_StrategyMeta_$6879_storage_ptr_$","typeString":"type(struct ExperienceRegistry.StrategyMeta storage pointer)"}},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3675:12:15","3715:9:15","3749:12:15","3789:11:15","3827:11:15"],"names":["strategyType","modelUsed","nanobotCount","tumorRadius","datasetHash"],"nodeType":"FunctionCall","src":"3648:214:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StrategyMeta_$6879_memory_ptr","typeString":"struct ExperienceRegistry.StrategyMeta memory"}},"src":"3626:236:15","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyMeta_$6879_storage","typeString":"struct ExperienceRegistry.StrategyMeta storage ref"}},"id":7043,"nodeType":"ExpressionStatement","src":"3626:236:15"},{"eventCall":{"arguments":[{"id":7045,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"3906:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7046,"name":"ipfsCid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"3915:7:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7047,"name":"dataHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"3924:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7048,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"3934:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7049,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3941:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3945:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3941:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7044,"name":"ExperienceSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"3886:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$","typeString":"function (bytes32,string memory,bytes32,uint256,address)"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3886:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7052,"nodeType":"EmitStatement","src":"3881:71:15"}]},"documentation":{"id":6981,"nodeType":"StructuredDocumentation","src":"2843:46:15","text":"@notice Submit a new simulation experience"},"functionSelector":"7b77044d","id":7054,"implemented":true,"kind":"function","modifiers":[],"name":"submitExperience","nameLocation":"2903:16:15","nodeType":"FunctionDefinition","parameters":{"id":7000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6983,"mutability":"mutable","name":"runHash","nameLocation":"2937:7:15","nodeType":"VariableDeclaration","scope":7054,"src":"2929:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2929:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6985,"mutability":"mutable","name":"ipfsCid","nameLocation":"2970:7:15","nodeType":"VariableDeclaration","scope":7054,"src":"2954:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6984,"name":"string","nodeType":"ElementaryTypeName","src":"2954:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"dataHash","nameLocation":"2995:8:15","nodeType":"VariableDeclaration","scope":7054,"src":"2987:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2987:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6989,"mutability":"mutable","name":"score","nameLocation":"3021:5:15","nodeType":"VariableDeclaration","scope":7054,"src":"3013:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6988,"name":"uint256","nodeType":"ElementaryTypeName","src":"3013:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6991,"mutability":"mutable","name":"strategyType","nameLocation":"3052:12:15","nodeType":"VariableDeclaration","scope":7054,"src":"3036:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6990,"name":"string","nodeType":"ElementaryTypeName","src":"3036:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6993,"mutability":"mutable","name":"modelUsed","nameLocation":"3090:9:15","nodeType":"VariableDeclaration","scope":7054,"src":"3074:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6992,"name":"string","nodeType":"ElementaryTypeName","src":"3074:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6995,"mutability":"mutable","name":"nanobotCount","nameLocation":"3116:12:15","nodeType":"VariableDeclaration","scope":7054,"src":"3109:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6994,"name":"uint16","nodeType":"ElementaryTypeName","src":"3109:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6997,"mutability":"mutable","name":"tumorRadius","nameLocation":"3145:11:15","nodeType":"VariableDeclaration","scope":7054,"src":"3138:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6996,"name":"uint16","nodeType":"ElementaryTypeName","src":"3138:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":6999,"mutability":"mutable","name":"datasetHash","nameLocation":"3174:11:15","nodeType":"VariableDeclaration","scope":7054,"src":"3166:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3166:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2919:272:15"},"returnParameters":{"id":7001,"nodeType":"ParameterList","parameters":[],"src":"3201:0:15"},"scope":7339,"src":"2894:1065:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7178,"nodeType":"Block","src":"4158:1170:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7067,"name":"experiences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"4176:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience storage ref)"}},"id":7069,"indexExpression":{"id":7068,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"4188:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4176:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage","typeString":"struct ExperienceRegistry.Experience storage ref"}},"id":7070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4197:9:15","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":6862,"src":"4176:30:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4209:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4176:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"457870657269656e636520646f6573206e6f74206578697374","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4212:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_55629d3a50d17c34aefec6f4b5b38f0143705a7932d23ca0dd70018344b0760e","typeString":"literal_string \"Experience does not exist\""},"value":"Experience does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_55629d3a50d17c34aefec6f4b5b38f0143705a7932d23ca0dd70018344b0760e","typeString":"literal_string \"Experience does not exist\""}],"id":7066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4168:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4168:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7075,"nodeType":"ExpressionStatement","src":"4168:72:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7077,"name":"quality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"4258:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4269:3:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"4258:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5175616c697479206d75737420626520302d313030","id":7080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4274:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1193de04ecc784898f6f799b203fe35831a21492434cd20452873c3f673b0283","typeString":"literal_string \"Quality must be 0-100\""},"value":"Quality must be 0-100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1193de04ecc784898f6f799b203fe35831a21492434cd20452873c3f673b0283","typeString":"literal_string \"Quality must be 0-100\""}],"id":7076,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4250:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4250:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7082,"nodeType":"ExpressionStatement","src":"4250:48:15"},{"assignments":[7087],"declarations":[{"constant":false,"id":7087,"mutability":"mutable","name":"existingAttestations","nameLocation":"4386:20:15","nodeType":"VariableDeclaration","scope":7178,"src":"4364:42:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation[]"},"typeName":{"baseType":{"id":7085,"nodeType":"UserDefinedTypeName","pathNode":{"id":7084,"name":"Attestation","nameLocations":["4364:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":6889,"src":"4364:11:15"},"referencedDeclaration":6889,"src":"4364:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$6889_storage_ptr","typeString":"struct ExperienceRegistry.Attestation"}},"id":7086,"nodeType":"ArrayTypeName","src":"4364:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation[]"}},"visibility":"internal"}],"id":7091,"initialValue":{"baseExpression":{"id":7088,"name":"attestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"4409:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Attestation storage ref[] storage ref)"}},"id":7090,"indexExpression":{"id":7089,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"4422:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4409:21:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4364:66:15"},{"body":{"id":7114,"nodeType":"Block","src":"4495:101:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7104,"name":"existingAttestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"4517:20:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage pointer"}},"id":7106,"indexExpression":{"id":7105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"4538:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4517:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$6889_storage","typeString":"struct ExperienceRegistry.Attestation storage ref"}},"id":7107,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4541:9:15","memberName":"validator","nodeType":"MemberAccess","referencedDeclaration":6882,"src":"4517:33:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4554:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4558:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4554:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4517:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206174746573746564","id":7111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4566:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5bf2eb178c9ffed6699b9eb55a4e81f0887d2c7e773851d8cae8996fb12e827","typeString":"literal_string \"Already attested\""},"value":"Already attested"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e5bf2eb178c9ffed6699b9eb55a4e81f0887d2c7e773851d8cae8996fb12e827","typeString":"literal_string \"Already attested\""}],"id":7103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4509:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4509:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7113,"nodeType":"ExpressionStatement","src":"4509:76:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"4457:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7097,"name":"existingAttestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7087,"src":"4461:20:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage pointer"}},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4482:6:15","memberName":"length","nodeType":"MemberAccess","src":"4461:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4457:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7115,"initializationExpression":{"assignments":[7093],"declarations":[{"constant":false,"id":7093,"mutability":"mutable","name":"i","nameLocation":"4450:1:15","nodeType":"VariableDeclaration","scope":7115,"src":"4445:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7092,"name":"uint","nodeType":"ElementaryTypeName","src":"4445:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7095,"initialValue":{"hexValue":"30","id":7094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4454:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4445:10:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4490:3:15","subExpression":{"id":7100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"4490:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7102,"nodeType":"ExpressionStatement","src":"4490:3:15"},"nodeType":"ForStatement","src":"4440:156:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7121,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4678:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4682:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4678:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":7125,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4720:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4726:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"4720:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4713:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7123,"name":"uint32","nodeType":"ElementaryTypeName","src":"4713:6:15","typeDescriptions":{}}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4713:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":7128,"name":"quality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"4759:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":7129,"name":"notes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7061,"src":"4787:5:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":7120,"name":"Attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6889,"src":"4641:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Attestation_$6889_storage_ptr_$","typeString":"type(struct ExperienceRegistry.Attestation storage pointer)"}},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4667:9:15","4702:9:15","4750:7:15","4780:5:15"],"names":["validator","timestamp","quality","notes"],"nodeType":"FunctionCall","src":"4641:162:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$6889_memory_ptr","typeString":"struct ExperienceRegistry.Attestation memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Attestation_$6889_memory_ptr","typeString":"struct ExperienceRegistry.Attestation memory"}],"expression":{"baseExpression":{"id":7116,"name":"attestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"4614:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Attestation storage ref[] storage ref)"}},"id":7118,"indexExpression":{"id":7117,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"4627:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4614:21:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage ref"}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4636:4:15","memberName":"push","nodeType":"MemberAccess","src":"4614:26:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr_$_t_struct$_Attestation_$6889_storage_$returns$__$attached_to$_t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr_$","typeString":"function (struct ExperienceRegistry.Attestation storage ref[] storage pointer,struct ExperienceRegistry.Attestation storage ref)"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:190:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7132,"nodeType":"ExpressionStatement","src":"4614:190:15"},{"expression":{"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4823:35:15","subExpression":{"expression":{"baseExpression":{"id":7133,"name":"experiences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"4823:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience storage ref)"}},"id":7135,"indexExpression":{"id":7134,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"4835:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4823:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage","typeString":"struct ExperienceRegistry.Experience storage ref"}},"id":7136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4844:12:15","memberName":"attestations","nodeType":"MemberAccess","referencedDeclaration":6864,"src":"4823:33:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":7138,"nodeType":"ExpressionStatement","src":"4823:35:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7139,"name":"experiences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"4952:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience storage ref)"}},"id":7141,"indexExpression":{"id":7140,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"4964:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4952:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage","typeString":"struct ExperienceRegistry.Experience storage ref"}},"id":7142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4973:12:15","memberName":"attestations","nodeType":"MemberAccess","referencedDeclaration":6864,"src":"4952:33:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7143,"name":"minAttestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"4989:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4952:52:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7170,"nodeType":"IfStatement","src":"4948:302:15","trueBody":{"id":7169,"nodeType":"Block","src":"5006:244:15","statements":[{"assignments":[7146],"declarations":[{"constant":false,"id":7146,"mutability":"mutable","name":"avgQuality","nameLocation":"5028:10:15","nodeType":"VariableDeclaration","scope":7169,"src":"5020:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7145,"name":"uint256","nodeType":"ElementaryTypeName","src":"5020:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7150,"initialValue":{"arguments":[{"id":7148,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"5065:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7147,"name":"calculateAverageQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"5041:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) view returns (uint256)"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5041:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5020:53:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7151,"name":"avgQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"5091:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3730","id":7152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5105:2:15","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},"src":"5091:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7168,"nodeType":"IfStatement","src":"5087:153:15","trueBody":{"id":7167,"nodeType":"Block","src":"5109:131:15","statements":[{"expression":{"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7154,"name":"experiences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"5127:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience storage ref)"}},"id":7156,"indexExpression":{"id":7155,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"5139:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5127:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage","typeString":"struct ExperienceRegistry.Experience storage ref"}},"id":7157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5148:8:15","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":6866,"src":"5127:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5159:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5127:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7160,"nodeType":"ExpressionStatement","src":"5127:36:15"},{"eventCall":{"arguments":[{"id":7162,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"5205:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5214:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5218:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5214:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7161,"name":"ExperienceVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"5186:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5186:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7166,"nodeType":"EmitStatement","src":"5181:44:15"}]}}]}},{"eventCall":{"arguments":[{"id":7172,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"5292:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5301:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5305:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5301:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7175,"name":"quality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"5313:7:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7171,"name":"ExperienceAttested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"5273:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint8_$returns$__$","typeString":"function (bytes32,address,uint8)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5273:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7177,"nodeType":"EmitStatement","src":"5268:53:15"}]},"documentation":{"id":7055,"nodeType":"StructuredDocumentation","src":"3969:50:15","text":"@notice Attest to the quality of an experience"},"functionSelector":"b144d4a3","id":7179,"implemented":true,"kind":"function","modifiers":[{"id":7064,"kind":"modifierInvocation","modifierName":{"id":7063,"name":"onlyValidator","nameLocations":["4144:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":6980,"src":"4144:13:15"},"nodeType":"ModifierInvocation","src":"4144:13:15"}],"name":"attestExperience","nameLocation":"4033:16:15","nodeType":"FunctionDefinition","parameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"runHash","nameLocation":"4067:7:15","nodeType":"VariableDeclaration","scope":7179,"src":"4059:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4059:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7059,"mutability":"mutable","name":"quality","nameLocation":"4090:7:15","nodeType":"VariableDeclaration","scope":7179,"src":"4084:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7058,"name":"uint8","nodeType":"ElementaryTypeName","src":"4084:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7061,"mutability":"mutable","name":"notes","nameLocation":"4123:5:15","nodeType":"VariableDeclaration","scope":7179,"src":"4107:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7060,"name":"string","nodeType":"ElementaryTypeName","src":"4107:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4049:85:15"},"returnParameters":{"id":7065,"nodeType":"ParameterList","parameters":[],"src":"4158:0:15"},"scope":7339,"src":"4024:1304:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7232,"nodeType":"Block","src":"5484:270:15","statements":[{"assignments":[7191],"declarations":[{"constant":false,"id":7191,"mutability":"mutable","name":"atts","nameLocation":"5516:4:15","nodeType":"VariableDeclaration","scope":7232,"src":"5494:26:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation[]"},"typeName":{"baseType":{"id":7189,"nodeType":"UserDefinedTypeName","pathNode":{"id":7188,"name":"Attestation","nameLocations":["5494:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":6889,"src":"5494:11:15"},"referencedDeclaration":6889,"src":"5494:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$6889_storage_ptr","typeString":"struct ExperienceRegistry.Attestation"}},"id":7190,"nodeType":"ArrayTypeName","src":"5494:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation[]"}},"visibility":"internal"}],"id":7195,"initialValue":{"baseExpression":{"id":7192,"name":"attestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"5523:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Attestation storage ref[] storage ref)"}},"id":7194,"indexExpression":{"id":7193,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"5536:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5523:21:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5494:50:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7196,"name":"atts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"5558:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage pointer"}},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5563:6:15","memberName":"length","nodeType":"MemberAccess","src":"5558:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5573:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5558:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7202,"nodeType":"IfStatement","src":"5554:30:15","trueBody":{"expression":{"hexValue":"30","id":7200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5583:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7186,"id":7201,"nodeType":"Return","src":"5576:8:15"}},{"assignments":[7204],"declarations":[{"constant":false,"id":7204,"mutability":"mutable","name":"sum","nameLocation":"5611:3:15","nodeType":"VariableDeclaration","scope":7232,"src":"5603:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7203,"name":"uint256","nodeType":"ElementaryTypeName","src":"5603:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7206,"initialValue":{"hexValue":"30","id":7205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5617:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5603:15:15"},{"body":{"id":7225,"nodeType":"Block","src":"5667:47:15","statements":[{"expression":{"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7218,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"5681:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":7219,"name":"atts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"5688:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage pointer"}},"id":7221,"indexExpression":{"id":7220,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"5693:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5688:7:15","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$6889_storage","typeString":"struct ExperienceRegistry.Attestation storage ref"}},"id":7222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5696:7:15","memberName":"quality","nodeType":"MemberAccess","referencedDeclaration":6886,"src":"5688:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5681:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7224,"nodeType":"ExpressionStatement","src":"5681:22:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7211,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"5645:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7212,"name":"atts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"5649:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage pointer"}},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5654:6:15","memberName":"length","nodeType":"MemberAccess","src":"5649:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5645:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7226,"initializationExpression":{"assignments":[7208],"declarations":[{"constant":false,"id":7208,"mutability":"mutable","name":"i","nameLocation":"5638:1:15","nodeType":"VariableDeclaration","scope":7226,"src":"5633:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7207,"name":"uint","nodeType":"ElementaryTypeName","src":"5633:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7210,"initialValue":{"hexValue":"30","id":7209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5642:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5633:10:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5662:3:15","subExpression":{"id":7215,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"5662:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7217,"nodeType":"ExpressionStatement","src":"5662:3:15"},"nodeType":"ForStatement","src":"5628:86:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7227,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"5730:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":7228,"name":"atts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"5736:4:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage pointer"}},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5741:6:15","memberName":"length","nodeType":"MemberAccess","src":"5736:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5730:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7186,"id":7231,"nodeType":"Return","src":"5723:24:15"}]},"documentation":{"id":7180,"nodeType":"StructuredDocumentation","src":"5338:61:15","text":"@notice Calculate average quality score for an experience"},"functionSelector":"bb66dab2","id":7233,"implemented":true,"kind":"function","modifiers":[],"name":"calculateAverageQuality","nameLocation":"5413:23:15","nodeType":"FunctionDefinition","parameters":{"id":7183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7182,"mutability":"mutable","name":"runHash","nameLocation":"5445:7:15","nodeType":"VariableDeclaration","scope":7233,"src":"5437:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7181,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5437:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5436:17:15"},"returnParameters":{"id":7186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7233,"src":"5475:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5475:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5474:9:15"},"scope":7339,"src":"5404:350:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7265,"nodeType":"Block","src":"6074:138:15","statements":[{"expression":{"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7247,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"6084:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_memory_ptr","typeString":"struct ExperienceRegistry.Experience memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7248,"name":"experiences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"6090:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience storage ref)"}},"id":7250,"indexExpression":{"id":7249,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"6102:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6090:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage","typeString":"struct ExperienceRegistry.Experience storage ref"}},"src":"6084:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_memory_ptr","typeString":"struct ExperienceRegistry.Experience memory"}},"id":7252,"nodeType":"ExpressionStatement","src":"6084:26:15"},{"expression":{"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7253,"name":"strategy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"6120:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyMeta_$6879_memory_ptr","typeString":"struct ExperienceRegistry.StrategyMeta memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7254,"name":"strategies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"6131:10:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_StrategyMeta_$6879_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.StrategyMeta storage ref)"}},"id":7256,"indexExpression":{"id":7255,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"6142:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6131:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyMeta_$6879_storage","typeString":"struct ExperienceRegistry.StrategyMeta storage ref"}},"src":"6120:30:15","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyMeta_$6879_memory_ptr","typeString":"struct ExperienceRegistry.StrategyMeta memory"}},"id":7258,"nodeType":"ExpressionStatement","src":"6120:30:15"},{"expression":{"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7259,"name":"avgQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"6160:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7261,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"6197:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7260,"name":"calculateAverageQuality","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7233,"src":"6173:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) view returns (uint256)"}},"id":7262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6173:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6160:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7264,"nodeType":"ExpressionStatement","src":"6160:45:15"}]},"documentation":{"id":7234,"nodeType":"StructuredDocumentation","src":"5764:139:15","text":"@notice Query top experiences by score for a specific strategy type\n @dev Off-chain indexer should be used for efficient queries"},"functionSelector":"ebee03bb","id":7266,"implemented":true,"kind":"function","modifiers":[],"name":"getExperience","nameLocation":"5917:13:15","nodeType":"FunctionDefinition","parameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7236,"mutability":"mutable","name":"runHash","nameLocation":"5939:7:15","nodeType":"VariableDeclaration","scope":7266,"src":"5931:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5931:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5930:17:15"},"returnParameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7240,"mutability":"mutable","name":"exp","nameLocation":"5998:3:15","nodeType":"VariableDeclaration","scope":7266,"src":"5980:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_memory_ptr","typeString":"struct ExperienceRegistry.Experience"},"typeName":{"id":7239,"nodeType":"UserDefinedTypeName","pathNode":{"id":7238,"name":"Experience","nameLocations":["5980:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":6867,"src":"5980:10:15"},"referencedDeclaration":6867,"src":"5980:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage_ptr","typeString":"struct ExperienceRegistry.Experience"}},"visibility":"internal"},{"constant":false,"id":7243,"mutability":"mutable","name":"strategy","nameLocation":"6031:8:15","nodeType":"VariableDeclaration","scope":7266,"src":"6011:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyMeta_$6879_memory_ptr","typeString":"struct ExperienceRegistry.StrategyMeta"},"typeName":{"id":7242,"nodeType":"UserDefinedTypeName","pathNode":{"id":7241,"name":"StrategyMeta","nameLocations":["6011:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":6879,"src":"6011:12:15"},"referencedDeclaration":6879,"src":"6011:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_StrategyMeta_$6879_storage_ptr","typeString":"struct ExperienceRegistry.StrategyMeta"}},"visibility":"internal"},{"constant":false,"id":7245,"mutability":"mutable","name":"avgQuality","nameLocation":"6057:10:15","nodeType":"VariableDeclaration","scope":7266,"src":"6049:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7244,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5970:103:15"},"scope":7339,"src":"5908:304:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7280,"nodeType":"Block","src":"6364:45:15","statements":[{"expression":{"baseExpression":{"id":7276,"name":"attestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"6381:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Attestation storage ref[] storage ref)"}},"id":7278,"indexExpression":{"id":7277,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"6394:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6381:21:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage","typeString":"struct ExperienceRegistry.Attestation storage ref[] storage ref"}},"functionReturnParameters":7275,"id":7279,"nodeType":"Return","src":"6374:28:15"}]},"documentation":{"id":7267,"nodeType":"StructuredDocumentation","src":"6222:50:15","text":"@notice Get all attestations for an experience"},"functionSelector":"37e59e36","id":7281,"implemented":true,"kind":"function","modifiers":[],"name":"getAttestations","nameLocation":"6286:15:15","nodeType":"FunctionDefinition","parameters":{"id":7270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7269,"mutability":"mutable","name":"runHash","nameLocation":"6310:7:15","nodeType":"VariableDeclaration","scope":7281,"src":"6302:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6302:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6301:17:15"},"returnParameters":{"id":7275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7281,"src":"6342:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_memory_ptr_$dyn_memory_ptr","typeString":"struct ExperienceRegistry.Attestation[]"},"typeName":{"baseType":{"id":7272,"nodeType":"UserDefinedTypeName","pathNode":{"id":7271,"name":"Attestation","nameLocations":["6342:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":6889,"src":"6342:11:15"},"referencedDeclaration":6889,"src":"6342:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$6889_storage_ptr","typeString":"struct ExperienceRegistry.Attestation"}},"id":7273,"nodeType":"ArrayTypeName","src":"6342:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$6889_storage_$dyn_storage_ptr","typeString":"struct ExperienceRegistry.Attestation[]"}},"visibility":"internal"}],"src":"6341:22:15"},"scope":7339,"src":"6277:132:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7295,"nodeType":"Block","src":"6523:55:15","statements":[{"expression":{"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7289,"name":"authorizedValidators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"6533:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7291,"indexExpression":{"id":7290,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7284,"src":"6554:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6533:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6567:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6533:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7294,"nodeType":"ExpressionStatement","src":"6533:38:15"}]},"documentation":{"id":7282,"nodeType":"StructuredDocumentation","src":"6419:39:15","text":"@notice Add an authorized validator"},"functionSelector":"4d238c8e","id":7296,"implemented":true,"kind":"function","modifiers":[{"id":7287,"kind":"modifierInvocation","modifierName":{"id":7286,"name":"onlyOwner","nameLocations":["6513:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":6968,"src":"6513:9:15"},"nodeType":"ModifierInvocation","src":"6513:9:15"}],"name":"addValidator","nameLocation":"6472:12:15","nodeType":"FunctionDefinition","parameters":{"id":7285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7284,"mutability":"mutable","name":"validator","nameLocation":"6493:9:15","nodeType":"VariableDeclaration","scope":7296,"src":"6485:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7283,"name":"address","nodeType":"ElementaryTypeName","src":"6485:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6484:19:15"},"returnParameters":{"id":7288,"nodeType":"ParameterList","parameters":[],"src":"6523:0:15"},"scope":7339,"src":"6463:115:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7310,"nodeType":"Block","src":"6698:56:15","statements":[{"expression":{"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7304,"name":"authorizedValidators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"6708:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7306,"indexExpression":{"id":7305,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"6729:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6708:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6742:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6708:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7309,"nodeType":"ExpressionStatement","src":"6708:39:15"}]},"documentation":{"id":7297,"nodeType":"StructuredDocumentation","src":"6588:42:15","text":"@notice Remove an authorized validator"},"functionSelector":"40a141ff","id":7311,"implemented":true,"kind":"function","modifiers":[{"id":7302,"kind":"modifierInvocation","modifierName":{"id":7301,"name":"onlyOwner","nameLocations":["6688:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":6968,"src":"6688:9:15"},"nodeType":"ModifierInvocation","src":"6688:9:15"}],"name":"removeValidator","nameLocation":"6644:15:15","nodeType":"FunctionDefinition","parameters":{"id":7300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7299,"mutability":"mutable","name":"validator","nameLocation":"6668:9:15","nodeType":"VariableDeclaration","scope":7311,"src":"6660:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7298,"name":"address","nodeType":"ElementaryTypeName","src":"6660:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6659:19:15"},"returnParameters":{"id":7303,"nodeType":"ParameterList","parameters":[],"src":"6698:0:15"},"scope":7339,"src":"6635:119:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7323,"nodeType":"Block","src":"6875:38:15","statements":[{"expression":{"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7319,"name":"minAttestations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"6885:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7320,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"6903:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6885:21:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":7322,"nodeType":"ExpressionStatement","src":"6885:21:15"}]},"documentation":{"id":7312,"nodeType":"StructuredDocumentation","src":"6764:48:15","text":"@notice Update minimum attestations required"},"functionSelector":"27dee37c","id":7324,"implemented":true,"kind":"function","modifiers":[{"id":7317,"kind":"modifierInvocation","modifierName":{"id":7316,"name":"onlyOwner","nameLocations":["6865:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":6968,"src":"6865:9:15"},"nodeType":"ModifierInvocation","src":"6865:9:15"}],"name":"setMinAttestations","nameLocation":"6826:18:15","nodeType":"FunctionDefinition","parameters":{"id":7315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7314,"mutability":"mutable","name":"min","nameLocation":"6851:3:15","nodeType":"VariableDeclaration","scope":7324,"src":"6845:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7313,"name":"uint8","nodeType":"ElementaryTypeName","src":"6845:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6844:11:15"},"returnParameters":{"id":7318,"nodeType":"ParameterList","parameters":[],"src":"6875:0:15"},"scope":7339,"src":"6817:96:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7337,"nodeType":"Block","src":"7040:53:15","statements":[{"expression":{"expression":{"baseExpression":{"id":7332,"name":"experiences","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6920,"src":"7057:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Experience_$6867_storage_$","typeString":"mapping(bytes32 => struct ExperienceRegistry.Experience storage ref)"}},"id":7334,"indexExpression":{"id":7333,"name":"runHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"7069:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7057:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_Experience_$6867_storage","typeString":"struct ExperienceRegistry.Experience storage ref"}},"id":7335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7078:8:15","memberName":"verified","nodeType":"MemberAccess","referencedDeclaration":6866,"src":"7057:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7331,"id":7336,"nodeType":"Return","src":"7050:36:15"}]},"documentation":{"id":7325,"nodeType":"StructuredDocumentation","src":"6923:46:15","text":"@notice Check if an experience is verified"},"functionSelector":"c181b273","id":7338,"implemented":true,"kind":"function","modifiers":[],"name":"isVerified","nameLocation":"6983:10:15","nodeType":"FunctionDefinition","parameters":{"id":7328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7327,"mutability":"mutable","name":"runHash","nameLocation":"7002:7:15","nodeType":"VariableDeclaration","scope":7338,"src":"6994:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6994:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6993:17:15"},"returnParameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7338,"src":"7034:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7329,"name":"bool","nodeType":"ElementaryTypeName","src":"7034:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7033:6:15"},"scope":7339,"src":"6974:119:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7340,"src":"294:6801:15","usedErrors":[],"usedEvents":[6901,6909,6915]}],"src":"32:7065:15"},"id":15},"contracts/FoodToken.sol":{"ast":{"absolutePath":"contracts/FoodToken.sol","exportedSymbols":{"Context":[1363],"ERC165":[2841],"ERC721":[1093],"ERC721Utils":[1333],"FoodToken":[7384],"IERC165":[2853],"IERC721":[1210],"IERC721Errors":[89],"IERC721Metadata":[1256],"Strings":[2817]},"id":7385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7341,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7385,"sourceUnit":1094,"src":"58:57:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7344,"name":"ERC721","nameLocations":["291:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"291:6:16"},"id":7345,"nodeType":"InheritanceSpecifier","src":"291:6:16"}],"canonicalName":"FoodToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":7343,"nodeType":"StructuredDocumentation","src":"117:152:16","text":"@title ERC-721 that represents a single piece of food in the grid.\n        Minted by the simulation and transferred to the ant that picks it up."},"fullyImplemented":true,"id":7384,"linearizedBaseContracts":[7384,1093,89,1256,1210,2841,2853,1363],"name":"FoodToken","nameLocation":"278:9:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"61b8ce8c","id":7347,"mutability":"mutable","name":"nextId","nameLocation":"319:6:16","nodeType":"VariableDeclaration","scope":7384,"src":"304:21:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7346,"name":"uint256","nodeType":"ElementaryTypeName","src":"304:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"349ff770","id":7349,"mutability":"mutable","name":"colony","nameLocation":"346:6:16","nodeType":"VariableDeclaration","scope":7384,"src":"331:21:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7348,"name":"address","nodeType":"ElementaryTypeName","src":"331:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":7362,"nodeType":"Block","src":"465:33:16","statements":[{"expression":{"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7358,"name":"colony","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"475:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7359,"name":"_colony","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7351,"src":"484:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"475:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7361,"nodeType":"ExpressionStatement","src":"475:16:16"}]},"id":7363,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"416e74656c6c6967656e6365466f6f64","id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"437:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c5b03707dc689de5603c775681c4d9ab98809abb2df692dc47187107f6a653d","typeString":"literal_string \"AntelligenceFood\""},"value":"AntelligenceFood"},{"hexValue":"464f4f44","id":7355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"457:6:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2f6f5a261d6f4514c3f09a834720fe583c82f2ee4758ce9a45fbd67428e9f93d","typeString":"literal_string \"FOOD\""},"value":"FOOD"}],"id":7356,"kind":"baseConstructorSpecifier","modifierName":{"id":7353,"name":"ERC721","nameLocations":["430:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1093,"src":"430:6:16"},"nodeType":"ModifierInvocation","src":"430:34:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7351,"mutability":"mutable","name":"_colony","nameLocation":"421:7:16","nodeType":"VariableDeclaration","scope":7363,"src":"413:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7350,"name":"address","nodeType":"ElementaryTypeName","src":"413:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"412:17:16"},"returnParameters":{"id":7357,"nodeType":"ParameterList","parameters":[],"src":"465:0:16"},"scope":7384,"src":"401:97:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7382,"nodeType":"Block","src":"539:103:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"557:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"561:6:16","memberName":"sender","nodeType":"MemberAccess","src":"557:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7371,"name":"colony","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7349,"src":"571:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"557:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920636f6c6f6e79206d6179206d696e74","id":7373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"579:22:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_0408a6c1968f24add9b40946ec8189a93b0ad9ab1a683814acb15d86ddb35900","typeString":"literal_string \"Only colony may mint\""},"value":"Only colony may mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0408a6c1968f24add9b40946ec8189a93b0ad9ab1a683814acb15d86ddb35900","typeString":"literal_string \"Only colony may mint\""}],"id":7368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"549:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"549:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7375,"nodeType":"ExpressionStatement","src":"549:53:16"},{"expression":{"arguments":[{"id":7377,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"622:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"626:8:16","subExpression":{"id":7378,"name":"nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7347,"src":"626:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7376,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[771,801],"referencedDeclaration":771,"src":"612:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"612:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7381,"nodeType":"ExpressionStatement","src":"612:23:16"}]},"functionSelector":"6a627842","id":7383,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"513:4:16","nodeType":"FunctionDefinition","parameters":{"id":7366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7365,"mutability":"mutable","name":"to","nameLocation":"526:2:16","nodeType":"VariableDeclaration","scope":7383,"src":"518:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7364,"name":"address","nodeType":"ElementaryTypeName","src":"518:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"517:12:16"},"returnParameters":{"id":7367,"nodeType":"ParameterList","parameters":[],"src":"539:0:16"},"scope":7384,"src":"504:138:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7385,"src":"269:375:16","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[1109,1118,1127]}],"src":"32:613:16"},"id":16}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ecdf901afbdc72fc0e11c9f97f700647fd4534460b1a248b840e1ee0e8072e4d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xDF SWAP1 BYTE 0xFB 0xDC PUSH19 0xFC0E11C9F97F700647FD4534460B1A248B840E 0x1E 0xE0 0xE8 SMOD 0x2E 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ecdf901afbdc72fc0e11c9f97f700647fd4534460b1a248b840e1ee0e8072e4d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xDF SWAP1 BYTE 0xFB 0xDC PUSH19 0xFC0E11C9F97F700647FD4534460B1A248B840E 0x1E 0xE0 0xE8 SMOD 0x2E 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a26ceb9e22e9d3421f2f76b318ebc5f2324cc113daaa2f7b54162df0401c12e964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEB9E22E9D3421F2F76B318EBC5 CALLCODE ORIGIN 0x4C 0xC1 SGT 0xDA 0xAA 0x2F PUSH28 0x54162DF0401C12E964736F6C63430008180033000000000000000000 ","sourceMap":"297:18982:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a26ceb9e22e9d3421f2f76b318ebc5f2324cc113daaa2f7b54162df0401c12e964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEB9E22E9D3421F2F76B318EBC5 CALLCODE ORIGIN 0x4C 0xC1 SGT 0xDA 0xAA 0x2F PUSH28 0x54162DF0401C12E964736F6C63430008180033000000000000000000 ","sourceMap":"297:18982:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f558c60c9486582fb7f3f828dbf3aa89c08408258ee976da2fd24181bd220cc064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC 0xC6 0xC SWAP5 DUP7 PC 0x2F 0xB7 RETURN 0xF8 0x28 0xDB RETURN 0xAA DUP10 0xC0 DUP5 ADDMOD 0x25 DUP15 0xE9 PUSH23 0xDA2FD24181BD220CC064736F6C63430008180033000000 ","sourceMap":"281:31863:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f558c60c9486582fb7f3f828dbf3aa89c08408258ee976da2fd24181bd220cc064736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC 0xC6 0xC SWAP5 DUP7 PC 0x2F 0xB7 RETURN 0xF8 0x28 0xDB RETURN 0xAA DUP10 0xC0 DUP5 ADDMOD 0x25 DUP15 0xE9 PUSH23 0xDA2FD24181BD220CC064736F6C63430008180033000000 ","sourceMap":"281:31863:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/ColonyMemory.sol":{"ColonyMemory":{"abi":[{"anonymous":false,"inputs":[{"components":[{"internalType":"uint32","name":"x","type":"uint32"},{"internalType":"uint32","name":"y","type":"uint32"},{"internalType":"address","name":"ant","type":"address"}],"indexed":false,"internalType":"struct ColonyMemory.Visit","name":"v","type":"tuple"}],"name":"CellVisited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"runHash","type":"bytes32"},{"indexed":false,"internalType":"uint32","name":"x","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"y","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"z","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"timestamp","type":"uint32"},{"indexed":true,"internalType":"address","name":"nanobot","type":"address"},{"indexed":false,"internalType":"uint16","name":"payloadAmount","type":"uint16"}],"name":"DrugDelivered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint32","name":"x","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"y","type":"uint32"},{"indexed":false,"internalType":"address","name":"ant","type":"address"}],"name":"FoodCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"runHash","type":"bytes32"},{"indexed":false,"internalType":"uint32","name":"totalSteps","type":"uint32"},{"indexed":false,"internalType":"uint16","name":"cellsKilled","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"drugDeliveries","type":"uint16"},{"indexed":true,"internalType":"address","name":"submitter","type":"address"}],"name":"SimulationCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"runHash","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"cellId","type":"uint256"},{"indexed":false,"internalType":"uint32","name":"x","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"y","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"z","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"timestamp","type":"uint32"},{"indexed":true,"internalType":"address","name":"nanobot","type":"address"}],"name":"TumorCellKilled","type":"event"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"},{"internalType":"uint32","name":"totalSteps","type":"uint32"},{"internalType":"uint16","name":"cellsKilled","type":"uint16"},{"internalType":"uint16","name":"drugDeliveries","type":"uint16"}],"name":"completeSimulation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"deliveriesByRun","outputs":[{"internalType":"uint32","name":"x","type":"uint32"},{"internalType":"uint32","name":"y","type":"uint32"},{"internalType":"uint32","name":"z","type":"uint32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"address","name":"nanobot","type":"address"},{"internalType":"uint16","name":"payloadAmount","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"}],"name":"getDeliveryCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"}],"name":"getKillCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"}],"name":"getSimulationRun","outputs":[{"components":[{"internalType":"bytes32","name":"runHash","type":"bytes32"},{"internalType":"uint32","name":"startTime","type":"uint32"},{"internalType":"uint32","name":"totalSteps","type":"uint32"},{"internalType":"uint16","name":"cellsKilled","type":"uint16"},{"internalType":"uint16","name":"drugDeliveries","type":"uint16"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"bool","name":"completed","type":"bool"}],"internalType":"struct ColonyMemory.SimulationRun","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"x","type":"uint32"},{"internalType":"uint32","name":"y","type":"uint32"}],"name":"hasVisited","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"}],"name":"initializeSimulation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"killsByRun","outputs":[{"internalType":"uint256","name":"cellId","type":"uint256"},{"internalType":"uint32","name":"x","type":"uint32"},{"internalType":"uint32","name":"y","type":"uint32"},{"internalType":"uint32","name":"z","type":"uint32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"address","name":"nanobot","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"x","type":"uint32"},{"internalType":"uint32","name":"y","type":"uint32"}],"name":"markVisited","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"},{"internalType":"uint32","name":"x","type":"uint32"},{"internalType":"uint32","name":"y","type":"uint32"},{"internalType":"uint32","name":"z","type":"uint32"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint16","name":"payloadAmount","type":"uint16"}],"name":"recordDrugDelivery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint32","name":"x","type":"uint32"},{"internalType":"uint32","name":"y","type":"uint32"}],"name":"recordFood","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"},{"internalType":"uint256","name":"cellId","type":"uint256"},{"internalType":"uint32","name":"x","type":"uint32"},{"internalType":"uint32","name":"y","type":"uint32"},{"internalType":"uint32","name":"z","type":"uint32"},{"internalType":"uint32","name":"timestamp","type":"uint32"}],"name":"recordTumorKill","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"simulations","outputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"},{"internalType":"uint32","name":"startTime","type":"uint32"},{"internalType":"uint32","name":"totalSteps","type":"uint32"},{"internalType":"uint16","name":"cellsKilled","type":"uint16"},{"internalType":"uint16","name":"drugDeliveries","type":"uint16"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"bool","name":"completed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"visited","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461001657610de5908161001c8239f35b600080fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c90816306d9e4b514610c0c575080631075652414610b9457806313615122146109d557806315f769b01461096a5780631eb674811461087157806325c3dc2e146108495780632b500d92146106eb57806344d93dd4146106bf57806351f408501461063d57806372c9c94b1461047e5780637adb273a14610456578063999a6ff214610265578063c86374df146101e05763f40022a6146100bf57600080fd5b346101dc57806003193601126101dc576100d7610c77565b906100e0610c8f565b815160e084811b6001600160e01b0319908116602084019081529184901b1660248301529061011c81602881015b03601f198101835282610d8d565b519020845283602052818420805460ff811615610137578580f35b60ff191660011790558151926060840167ffffffffffffffff8111858210176101c957835263ffffffff908116808552918116602080860191825233958501958652845193845290519091169082015291516001600160a01b0316908201529091507f1217636b53a0c3ef6fe9a2141bfd53cdf9d646e203bc257c1588a8ce653f07e990606090a18038808080808580f35b634e487b7160e01b865260418752602486fd5b5080fd5b50346101dc576101ef36610cdb565b929081526003602052818120908154841015610262575060c09261021291610d23565b50908154916001810154809163ffffffff928391600260018060a01b03910154169480519687528282166020880152828260201c16818801521c16606085015260601c16608083015260a0820152f35b80fd5b5082346104525760c03660031901126104525780359083610284610c8f565b9161028d610ca2565b94610296610cb5565b9561029f610cc8565b9260a4359561ffff871680970361044e57879187918551966102c088610d71565b63ffffffff8092169b8c89528260208a0197169687815283898b019216998a835289856060830195169c8d86526080830199338b5260a08401998a528152600260205220805490600160401b821015610438579061032391600182018155610cf1565b96909661041f5750848093610370826103b0979560019a9961039096511663ffffffff198b5416178a555116889063ffffffff60201b82549160201b169063ffffffff60201b1916179055565b51865463ffffffff60401b1916911660401b63ffffffff60401b16178555565b51835463ffffffff60601b1916911660601b63ffffffff60601b16178255565b019160018060a01b0390511682549161ffff60a01b905160a01b169169ffffffffffffffffffff60b01b161717905581519687526020870152850152606084015260808301527f0c591fc8d9121ee406f82b19ea6d42a63a55a45e0ff89b44679a059325a9e88f60a03393a380f35b90508f925060249350829150634e487b7160e01b825252fd5b50505060248f604187634e487b7160e01b835252fd5b8580fd5b8280fd5b5082346104525760203660031901126104525760209282913581526002845220549051908152f35b5082346104525760c03660031901126104525780356024359161049f610ca2565b906104a8610cb5565b946104b1610cc8565b9560a4359363ffffffff938486168096036106395786918451956104d487610d71565b8987528b816020890193169b8c845282888a019716968781528360608b019216998a83528960808201948d865260a0830199338b528152600360205220805490600160401b821015610623579061053091600182018155610d23565b97909761041f57508480936105866105c69760029a9997956105a695518b558160018c0199511663ffffffff198a54161789555116879063ffffffff60201b82549160201b169063ffffffff60201b1916179055565b51855463ffffffff60401b1916911660401b63ffffffff60401b16178455565b51825463ffffffff60601b1916911660601b63ffffffff60601b16179055565b019060018060a01b039051166bffffffffffffffffffffffff60a01b8254161790558151968752602087015285015260608401527fe8c635839f4de7f9d0f38caa555296d8429b545b346a980fbe98de2bb6ed9d9160803394a480f35b50505060248f604188634e487b7160e01b835252fd5b8980fd5b50346101dc5761064c36610cdb565b929081526002602052818120908154841015610262575061067260c09361ffff92610cf1565b50805490600163ffffffff910154918451948282168652828260201c1660208701528282821c169086015260601c16606084015260018060a01b038116608084015260a01c1660a0820152f35b508234610452576020366003190112610452578160209360ff9235815280855220541690519015158152f35b5082903461045257602036600319011261045257813591828452600160205263ffffffff9081600184872001541661081157509060029181519161072e83610d3f565b8483526107e0602084019280421684528285018881526107ab60608701928a845260808801928b845260a089019633885260c08a019b8d8d528d5260016020528c20985189558160018a0198511663ffffffff198954161788555116869063ffffffff60201b82549160201b169063ffffffff60201b1916179055565b90518454915161ffff60501b60509190911b1663ffffffff60401b1990921661ffff60401b60409290921b9190911617178355565b516bffffffffffffffffffffffff82549181199060601b169116179055019051151560ff8019835416911617905580f35b606490602084519162461bcd60e51b8352820152601260248201527152756e20616c72656164792065786973747360701b6044820152fd5b5082346104525760203660031901126104525760209282913581526003845220549051908152f35b50903461026257602092836003193601126101dc5790829181835161089581610d3f565b818152818782015281858201528160608201528160808201528160a082015260c001523581526001845220918151916108cd83610d3f565b83549384845260018101549263ffffffff92818601908486168252808701948087851c16865261ffff9586948260608b0195878b871c16875260808c0198888c60501c168a5260a08d019b60601c8c526002015460ff169b60c0019b15158c5285519c8d525116908b01525116908801525116606086015251166080840152600160a01b6001900390511660a083015251151560c082015260e090f35b50829034610452576060366003190112610452577fa96ae3077d483c4b54a8d717a6b5f64cd935e7d7c38bedb4f8f7aeca073a30de916080916109ab610c8f565b6109b3610ca2565b82519335845263ffffffff80921660208501521690820152336060820152a180f35b508234610452576080366003190112610452578035906109f3610c8f565b9261ffff9160443583811691828203610b905760643594851694858103610b8c57868952600160205284892092600184019081549363ffffffff9586861615610b53576002019460ff865416610b185760601c3303610ad55750815460409190911b61ffff60401b1660208b901b63ffffffff60201b166bffffffffffffffff0000000019909216919091171760509290921b61ffff60501b16919091179055600160ff1982541617905582519516855260208501528301527fedacaa8e2a0034e7170a0aa44490014012724dfa25d7002a7fc867aa075bcead60603393a380f35b606490602089519162461bcd60e51b8352820152601b60248201527f4f6e6c79207375626d69747465722063616e20636f6d706c65746500000000006044820152fd5b885162461bcd60e51b81526020818401526015602482015274149d5b88185b1c9958591e4818dbdb5c1b195d1959605a1b6044820152606490fd5b885162461bcd60e51b81526020818401526013602482015272149d5b881b9bdd081a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b8880fd5b8780fd5b5082346104525760203660031901126104525760e09282913581526001602052209081549160026001820154918263ffffffff9460ff61ffff94859401541695815197885280831660208901528260201c16818801521c1660608501528160501c16608084015260601c60a0830152151560c0820152f35b9050346104525781600319360112610452578160209360ff92610c2d610c77565b90610c638161010e610c3d610c8f565b8a830195869060089263ffffffff60e01b809260e01b16835260e01b1660048201520190565b519020815280855220541690519015158152f35b6004359063ffffffff82168203610c8a57565b600080fd5b6024359063ffffffff82168203610c8a57565b6044359063ffffffff82168203610c8a57565b6064359063ffffffff82168203610c8a57565b6084359063ffffffff82168203610c8a57565b6040906003190112610c8a576004359060243590565b8054821015610d0d5760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015610d0d576000526003602060002091020190600090565b60e0810190811067ffffffffffffffff821117610d5b57604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff821117610d5b57604052565b90601f8019910116810190811067ffffffffffffffff821117610d5b5760405256fea26469706673582212201fb16e38ae24beff95293dc74f7fa0ed163cdad561bc822215e8c49cf09f478c64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0xDE5 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6D9E4B5 EQ PUSH2 0xC0C JUMPI POP DUP1 PUSH4 0x10756524 EQ PUSH2 0xB94 JUMPI DUP1 PUSH4 0x13615122 EQ PUSH2 0x9D5 JUMPI DUP1 PUSH4 0x15F769B0 EQ PUSH2 0x96A JUMPI DUP1 PUSH4 0x1EB67481 EQ PUSH2 0x871 JUMPI DUP1 PUSH4 0x25C3DC2E EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0x2B500D92 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0x44D93DD4 EQ PUSH2 0x6BF JUMPI DUP1 PUSH4 0x51F40850 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0x72C9C94B EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x7ADB273A EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x999A6FF2 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xC86374DF EQ PUSH2 0x1E0 JUMPI PUSH4 0xF40022A6 EQ PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DC JUMPI PUSH2 0xD7 PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xE0 PUSH2 0xC8F JUMP JUMPDEST DUP2 MLOAD PUSH1 0xE0 DUP5 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 DUP5 SWAP1 SHL AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH2 0x11C DUP2 PUSH1 0x28 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xD8D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x137 JUMPI DUP6 DUP1 RETURN JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 PUSH1 0x60 DUP5 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP6 DUP3 LT OR PUSH2 0x1C9 JUMPI DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP1 DUP6 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 DUP3 MSTORE CALLER SWAP6 DUP6 ADD SWAP6 DUP7 MSTORE DUP5 MLOAD SWAP4 DUP5 MSTORE SWAP1 MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH32 0x1217636B53A0C3EF6FE9A2141BFD53CDF9D646E203BC257C1588A8CE653F07E9 SWAP1 PUSH1 0x60 SWAP1 LOG1 DUP1 CODESIZE DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DC JUMPI PUSH2 0x1EF CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 SWAP1 DUP2 SLOAD DUP5 LT ISZERO PUSH2 0x262 JUMPI POP PUSH1 0xC0 SWAP3 PUSH2 0x212 SWAP2 PUSH2 0xD23 JUMP JUMPDEST POP SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD DUP1 SWAP2 PUSH4 0xFFFFFFFF SWAP3 DUP4 SWAP2 PUSH1 0x2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP5 DUP1 MLOAD SWAP7 DUP8 MSTORE DUP3 DUP3 AND PUSH1 0x20 DUP9 ADD MSTORE DUP3 DUP3 PUSH1 0x20 SHR AND DUP2 DUP9 ADD MSTORE SHR AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 SHR AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP1 CALLDATALOAD SWAP1 DUP4 PUSH2 0x284 PUSH2 0xC8F JUMP JUMPDEST SWAP2 PUSH2 0x28D PUSH2 0xCA2 JUMP JUMPDEST SWAP5 PUSH2 0x296 PUSH2 0xCB5 JUMP JUMPDEST SWAP6 PUSH2 0x29F PUSH2 0xCC8 JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP6 PUSH2 0xFFFF DUP8 AND DUP1 SWAP8 SUB PUSH2 0x44E JUMPI DUP8 SWAP2 DUP8 SWAP2 DUP6 MLOAD SWAP7 PUSH2 0x2C0 DUP9 PUSH2 0xD71 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 SWAP3 AND SWAP12 DUP13 DUP10 MSTORE DUP3 PUSH1 0x20 DUP11 ADD SWAP8 AND SWAP7 DUP8 DUP2 MSTORE DUP4 DUP10 DUP12 ADD SWAP3 AND SWAP10 DUP11 DUP4 MSTORE DUP10 DUP6 PUSH1 0x60 DUP4 ADD SWAP6 AND SWAP13 DUP14 DUP7 MSTORE PUSH1 0x80 DUP4 ADD SWAP10 CALLER DUP12 MSTORE PUSH1 0xA0 DUP5 ADD SWAP10 DUP11 MSTORE DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x438 JUMPI SWAP1 PUSH2 0x323 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xCF1 JUMP JUMPDEST SWAP7 SWAP1 SWAP7 PUSH2 0x41F JUMPI POP DUP5 DUP1 SWAP4 PUSH2 0x370 DUP3 PUSH2 0x3B0 SWAP8 SWAP6 PUSH1 0x1 SWAP11 SWAP10 PUSH2 0x390 SWAP7 MLOAD AND PUSH4 0xFFFFFFFF NOT DUP12 SLOAD AND OR DUP11 SSTORE MLOAD AND DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL DUP3 SLOAD SWAP2 PUSH1 0x20 SHL AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP7 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT AND SWAP2 AND PUSH1 0x40 SHL PUSH4 0xFFFFFFFF PUSH1 0x40 SHL AND OR DUP6 SSTORE JUMP JUMPDEST MLOAD DUP4 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x60 SHL NOT AND SWAP2 AND PUSH1 0x60 SHL PUSH4 0xFFFFFFFF PUSH1 0x60 SHL AND OR DUP3 SSTORE JUMP JUMPDEST ADD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND DUP3 SLOAD SWAP2 PUSH2 0xFFFF PUSH1 0xA0 SHL SWAP1 MLOAD PUSH1 0xA0 SHL AND SWAP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR OR SWAP1 SSTORE DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH32 0xC591FC8D9121EE406F82B19EA6D42A63A55A45E0FF89B44679A059325A9E88F PUSH1 0xA0 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST SWAP1 POP DUP16 SWAP3 POP PUSH1 0x24 SWAP4 POP DUP3 SWAP2 POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE MSTORE REVERT JUMPDEST POP POP POP PUSH1 0x24 DUP16 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP1 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x49F PUSH2 0xCA2 JUMP JUMPDEST SWAP1 PUSH2 0x4A8 PUSH2 0xCB5 JUMP JUMPDEST SWAP5 PUSH2 0x4B1 PUSH2 0xCC8 JUMP JUMPDEST SWAP6 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH4 0xFFFFFFFF SWAP4 DUP5 DUP7 AND DUP1 SWAP7 SUB PUSH2 0x639 JUMPI DUP7 SWAP2 DUP5 MLOAD SWAP6 PUSH2 0x4D4 DUP8 PUSH2 0xD71 JUMP JUMPDEST DUP10 DUP8 MSTORE DUP12 DUP2 PUSH1 0x20 DUP10 ADD SWAP4 AND SWAP12 DUP13 DUP5 MSTORE DUP3 DUP9 DUP11 ADD SWAP8 AND SWAP7 DUP8 DUP2 MSTORE DUP4 PUSH1 0x60 DUP12 ADD SWAP3 AND SWAP10 DUP11 DUP4 MSTORE DUP10 PUSH1 0x80 DUP3 ADD SWAP5 DUP14 DUP7 MSTORE PUSH1 0xA0 DUP4 ADD SWAP10 CALLER DUP12 MSTORE DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x623 JUMPI SWAP1 PUSH2 0x530 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xD23 JUMP JUMPDEST SWAP8 SWAP1 SWAP8 PUSH2 0x41F JUMPI POP DUP5 DUP1 SWAP4 PUSH2 0x586 PUSH2 0x5C6 SWAP8 PUSH1 0x2 SWAP11 SWAP10 SWAP8 SWAP6 PUSH2 0x5A6 SWAP6 MLOAD DUP12 SSTORE DUP2 PUSH1 0x1 DUP13 ADD SWAP10 MLOAD AND PUSH4 0xFFFFFFFF NOT DUP11 SLOAD AND OR DUP10 SSTORE MLOAD AND DUP8 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL DUP3 SLOAD SWAP2 PUSH1 0x20 SHL AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP6 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT AND SWAP2 AND PUSH1 0x40 SHL PUSH4 0xFFFFFFFF PUSH1 0x40 SHL AND OR DUP5 SSTORE JUMP JUMPDEST MLOAD DUP3 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x60 SHL NOT AND SWAP2 AND PUSH1 0x60 SHL PUSH4 0xFFFFFFFF PUSH1 0x60 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH32 0xE8C635839F4DE7F9D0F38CAA555296D8429B545B346A980FBE98DE2BB6ED9D91 PUSH1 0x80 CALLER SWAP5 LOG4 DUP1 RETURN JUMPDEST POP POP POP PUSH1 0x24 DUP16 PUSH1 0x41 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DC JUMPI PUSH2 0x64C CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 SWAP1 DUP2 SLOAD DUP5 LT ISZERO PUSH2 0x262 JUMPI POP PUSH2 0x672 PUSH1 0xC0 SWAP4 PUSH2 0xFFFF SWAP3 PUSH2 0xCF1 JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF SWAP2 ADD SLOAD SWAP2 DUP5 MLOAD SWAP5 DUP3 DUP3 AND DUP7 MSTORE DUP3 DUP3 PUSH1 0x20 SHR AND PUSH1 0x20 DUP8 ADD MSTORE DUP3 DUP3 DUP3 SHR AND SWAP1 DUP7 ADD MSTORE PUSH1 0x60 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 CALLDATALOAD DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP2 CALLDATALOAD SWAP2 DUP3 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 PUSH1 0x1 DUP5 DUP8 KECCAK256 ADD SLOAD AND PUSH2 0x811 JUMPI POP SWAP1 PUSH1 0x2 SWAP2 DUP2 MLOAD SWAP2 PUSH2 0x72E DUP4 PUSH2 0xD3F JUMP JUMPDEST DUP5 DUP4 MSTORE PUSH2 0x7E0 PUSH1 0x20 DUP5 ADD SWAP3 DUP1 TIMESTAMP AND DUP5 MSTORE DUP3 DUP6 ADD DUP9 DUP2 MSTORE PUSH2 0x7AB PUSH1 0x60 DUP8 ADD SWAP3 DUP11 DUP5 MSTORE PUSH1 0x80 DUP9 ADD SWAP3 DUP12 DUP5 MSTORE PUSH1 0xA0 DUP10 ADD SWAP7 CALLER DUP9 MSTORE PUSH1 0xC0 DUP11 ADD SWAP12 DUP14 DUP14 MSTORE DUP14 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP13 KECCAK256 SWAP9 MLOAD DUP10 SSTORE DUP2 PUSH1 0x1 DUP11 ADD SWAP9 MLOAD AND PUSH4 0xFFFFFFFF NOT DUP10 SLOAD AND OR DUP9 SSTORE MLOAD AND DUP7 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL DUP3 SLOAD SWAP2 PUSH1 0x20 SHL AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 MLOAD DUP5 SLOAD SWAP2 MLOAD PUSH2 0xFFFF PUSH1 0x50 SHL PUSH1 0x50 SWAP2 SWAP1 SWAP2 SHL AND PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT SWAP1 SWAP3 AND PUSH2 0xFFFF PUSH1 0x40 SHL PUSH1 0x40 SWAP3 SWAP1 SWAP3 SHL SWAP2 SWAP1 SWAP2 AND OR OR DUP4 SSTORE JUMP JUMPDEST MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x60 SHL AND SWAP2 AND OR SWAP1 SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x52756E20616C726561647920657869737473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x262 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DC JUMPI SWAP1 DUP3 SWAP2 DUP2 DUP4 MLOAD PUSH2 0x895 DUP2 PUSH2 0xD3F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP2 DUP8 DUP3 ADD MSTORE DUP2 DUP6 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE DUP2 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SWAP2 DUP2 MLOAD SWAP2 PUSH2 0x8CD DUP4 PUSH2 0xD3F JUMP JUMPDEST DUP4 SLOAD SWAP4 DUP5 DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 PUSH4 0xFFFFFFFF SWAP3 DUP2 DUP7 ADD SWAP1 DUP5 DUP7 AND DUP3 MSTORE DUP1 DUP8 ADD SWAP5 DUP1 DUP8 DUP6 SHR AND DUP7 MSTORE PUSH2 0xFFFF SWAP6 DUP7 SWAP5 DUP3 PUSH1 0x60 DUP12 ADD SWAP6 DUP8 DUP12 DUP8 SHR AND DUP8 MSTORE PUSH1 0x80 DUP13 ADD SWAP9 DUP9 DUP13 PUSH1 0x50 SHR AND DUP11 MSTORE PUSH1 0xA0 DUP14 ADD SWAP12 PUSH1 0x60 SHR DUP13 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND SWAP12 PUSH1 0xC0 ADD SWAP12 ISZERO ISZERO DUP13 MSTORE DUP6 MLOAD SWAP13 DUP14 MSTORE MLOAD AND SWAP1 DUP12 ADD MSTORE MLOAD AND SWAP1 DUP9 ADD MSTORE MLOAD AND PUSH1 0x60 DUP7 ADD MSTORE MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI PUSH32 0xA96AE3077D483C4B54A8D717A6B5F64CD935E7D7C38BEDB4F8F7AECA073A30DE SWAP2 PUSH1 0x80 SWAP2 PUSH2 0x9AB PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x9B3 PUSH2 0xCA2 JUMP JUMPDEST DUP3 MLOAD SWAP4 CALLDATALOAD DUP5 MSTORE PUSH4 0xFFFFFFFF DUP1 SWAP3 AND PUSH1 0x20 DUP6 ADD MSTORE AND SWAP1 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x9F3 PUSH2 0xC8F JUMP JUMPDEST SWAP3 PUSH2 0xFFFF SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0xB90 JUMPI PUSH1 0x64 CALLDATALOAD SWAP5 DUP6 AND SWAP5 DUP6 DUP2 SUB PUSH2 0xB8C JUMPI DUP7 DUP10 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP5 DUP10 KECCAK256 SWAP3 PUSH1 0x1 DUP5 ADD SWAP1 DUP2 SLOAD SWAP4 PUSH4 0xFFFFFFFF SWAP6 DUP7 DUP7 AND ISZERO PUSH2 0xB53 JUMPI PUSH1 0x2 ADD SWAP5 PUSH1 0xFF DUP7 SLOAD AND PUSH2 0xB18 JUMPI PUSH1 0x60 SHR CALLER SUB PUSH2 0xAD5 JUMPI POP DUP2 SLOAD PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL PUSH2 0xFFFF PUSH1 0x40 SHL AND PUSH1 0x20 DUP12 SWAP1 SHL PUSH4 0xFFFFFFFF PUSH1 0x20 SHL AND PUSH12 0xFFFFFFFFFFFFFFFF00000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR OR PUSH1 0x50 SWAP3 SWAP1 SWAP3 SHL PUSH2 0xFFFF PUSH1 0x50 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 MLOAD SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH32 0xEDACAA8E2A0034E7170A0AA44490014012724DFA25D7002A7FC867AA075BCEAD PUSH1 0x60 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP10 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207375626D69747465722063616E20636F6D706C6574650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x149D5B88185B1C9958591E4818DBDB5C1B195D1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x149D5B881B9BDD081A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI PUSH1 0xE0 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 DUP3 PUSH4 0xFFFFFFFF SWAP5 PUSH1 0xFF PUSH2 0xFFFF SWAP5 DUP6 SWAP5 ADD SLOAD AND SWAP6 DUP2 MLOAD SWAP8 DUP9 MSTORE DUP1 DUP4 AND PUSH1 0x20 DUP10 ADD MSTORE DUP3 PUSH1 0x20 SHR AND DUP2 DUP9 ADD MSTORE SHR AND PUSH1 0x60 DUP6 ADD MSTORE DUP2 PUSH1 0x50 SHR AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 SHR PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x452 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x452 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0xC2D PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xC63 DUP2 PUSH2 0x10E PUSH2 0xC3D PUSH2 0xC8F JUMP JUMPDEST DUP11 DUP4 ADD SWAP6 DUP7 SWAP1 PUSH1 0x8 SWAP3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP1 SWAP3 PUSH1 0xE0 SHL AND DUP4 MSTORE PUSH1 0xE0 SHL AND PUSH1 0x4 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xC8A JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5B JUMPI PUSH1 0x40 MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xB1 PUSH15 0x38AE24BEFF95293DC74F7FA0ED163C 0xDA 0xD5 PUSH2 0xBC82 0x22 ISZERO 0xE8 0xC4 SWAP13 CREATE SWAP16 SELFBALANCE DUP13 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"257:6280:14:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_bytes32t_uint256":{"entryPoint":3291,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint32":{"entryPoint":3234,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_10691":{"entryPoint":3191,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_10692":{"entryPoint":3215,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_10703":{"entryPoint":3253,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint32_10704":{"entryPoint":3272,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_packed_uint32_uint32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"finalize_allocation":{"entryPoint":3469,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_10698":{"entryPoint":3391,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_10706":{"entryPoint":3441,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_DrugDelivery__dyn":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_struct_TumorKill__dyn":{"entryPoint":3363,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offset_4t_uint32_to_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offset_8t_uint16_to_uint16":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint16_to_uint16":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint32_to_t_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint32_to_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040908082526004918236101561001757600080fd5b600091823560e01c90816306d9e4b514610c0c575080631075652414610b9457806313615122146109d557806315f769b01461096a5780631eb674811461087157806325c3dc2e146108495780632b500d92146106eb57806344d93dd4146106bf57806351f408501461063d57806372c9c94b1461047e5780637adb273a14610456578063999a6ff214610265578063c86374df146101e05763f40022a6146100bf57600080fd5b346101dc57806003193601126101dc576100d7610c77565b906100e0610c8f565b815160e084811b6001600160e01b0319908116602084019081529184901b1660248301529061011c81602881015b03601f198101835282610d8d565b519020845283602052818420805460ff811615610137578580f35b60ff191660011790558151926060840167ffffffffffffffff8111858210176101c957835263ffffffff908116808552918116602080860191825233958501958652845193845290519091169082015291516001600160a01b0316908201529091507f1217636b53a0c3ef6fe9a2141bfd53cdf9d646e203bc257c1588a8ce653f07e990606090a18038808080808580f35b634e487b7160e01b865260418752602486fd5b5080fd5b50346101dc576101ef36610cdb565b929081526003602052818120908154841015610262575060c09261021291610d23565b50908154916001810154809163ffffffff928391600260018060a01b03910154169480519687528282166020880152828260201c16818801521c16606085015260601c16608083015260a0820152f35b80fd5b5082346104525760c03660031901126104525780359083610284610c8f565b9161028d610ca2565b94610296610cb5565b9561029f610cc8565b9260a4359561ffff871680970361044e57879187918551966102c088610d71565b63ffffffff8092169b8c89528260208a0197169687815283898b019216998a835289856060830195169c8d86526080830199338b5260a08401998a528152600260205220805490600160401b821015610438579061032391600182018155610cf1565b96909661041f5750848093610370826103b0979560019a9961039096511663ffffffff198b5416178a555116889063ffffffff60201b82549160201b169063ffffffff60201b1916179055565b51865463ffffffff60401b1916911660401b63ffffffff60401b16178555565b51835463ffffffff60601b1916911660601b63ffffffff60601b16178255565b019160018060a01b0390511682549161ffff60a01b905160a01b169169ffffffffffffffffffff60b01b161717905581519687526020870152850152606084015260808301527f0c591fc8d9121ee406f82b19ea6d42a63a55a45e0ff89b44679a059325a9e88f60a03393a380f35b90508f925060249350829150634e487b7160e01b825252fd5b50505060248f604187634e487b7160e01b835252fd5b8580fd5b8280fd5b5082346104525760203660031901126104525760209282913581526002845220549051908152f35b5082346104525760c03660031901126104525780356024359161049f610ca2565b906104a8610cb5565b946104b1610cc8565b9560a4359363ffffffff938486168096036106395786918451956104d487610d71565b8987528b816020890193169b8c845282888a019716968781528360608b019216998a83528960808201948d865260a0830199338b528152600360205220805490600160401b821015610623579061053091600182018155610d23565b97909761041f57508480936105866105c69760029a9997956105a695518b558160018c0199511663ffffffff198a54161789555116879063ffffffff60201b82549160201b169063ffffffff60201b1916179055565b51855463ffffffff60401b1916911660401b63ffffffff60401b16178455565b51825463ffffffff60601b1916911660601b63ffffffff60601b16179055565b019060018060a01b039051166bffffffffffffffffffffffff60a01b8254161790558151968752602087015285015260608401527fe8c635839f4de7f9d0f38caa555296d8429b545b346a980fbe98de2bb6ed9d9160803394a480f35b50505060248f604188634e487b7160e01b835252fd5b8980fd5b50346101dc5761064c36610cdb565b929081526002602052818120908154841015610262575061067260c09361ffff92610cf1565b50805490600163ffffffff910154918451948282168652828260201c1660208701528282821c169086015260601c16606084015260018060a01b038116608084015260a01c1660a0820152f35b508234610452576020366003190112610452578160209360ff9235815280855220541690519015158152f35b5082903461045257602036600319011261045257813591828452600160205263ffffffff9081600184872001541661081157509060029181519161072e83610d3f565b8483526107e0602084019280421684528285018881526107ab60608701928a845260808801928b845260a089019633885260c08a019b8d8d528d5260016020528c20985189558160018a0198511663ffffffff198954161788555116869063ffffffff60201b82549160201b169063ffffffff60201b1916179055565b90518454915161ffff60501b60509190911b1663ffffffff60401b1990921661ffff60401b60409290921b9190911617178355565b516bffffffffffffffffffffffff82549181199060601b169116179055019051151560ff8019835416911617905580f35b606490602084519162461bcd60e51b8352820152601260248201527152756e20616c72656164792065786973747360701b6044820152fd5b5082346104525760203660031901126104525760209282913581526003845220549051908152f35b50903461026257602092836003193601126101dc5790829181835161089581610d3f565b818152818782015281858201528160608201528160808201528160a082015260c001523581526001845220918151916108cd83610d3f565b83549384845260018101549263ffffffff92818601908486168252808701948087851c16865261ffff9586948260608b0195878b871c16875260808c0198888c60501c168a5260a08d019b60601c8c526002015460ff169b60c0019b15158c5285519c8d525116908b01525116908801525116606086015251166080840152600160a01b6001900390511660a083015251151560c082015260e090f35b50829034610452576060366003190112610452577fa96ae3077d483c4b54a8d717a6b5f64cd935e7d7c38bedb4f8f7aeca073a30de916080916109ab610c8f565b6109b3610ca2565b82519335845263ffffffff80921660208501521690820152336060820152a180f35b508234610452576080366003190112610452578035906109f3610c8f565b9261ffff9160443583811691828203610b905760643594851694858103610b8c57868952600160205284892092600184019081549363ffffffff9586861615610b53576002019460ff865416610b185760601c3303610ad55750815460409190911b61ffff60401b1660208b901b63ffffffff60201b166bffffffffffffffff0000000019909216919091171760509290921b61ffff60501b16919091179055600160ff1982541617905582519516855260208501528301527fedacaa8e2a0034e7170a0aa44490014012724dfa25d7002a7fc867aa075bcead60603393a380f35b606490602089519162461bcd60e51b8352820152601b60248201527f4f6e6c79207375626d69747465722063616e20636f6d706c65746500000000006044820152fd5b885162461bcd60e51b81526020818401526015602482015274149d5b88185b1c9958591e4818dbdb5c1b195d1959605a1b6044820152606490fd5b885162461bcd60e51b81526020818401526013602482015272149d5b881b9bdd081a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b8880fd5b8780fd5b5082346104525760203660031901126104525760e09282913581526001602052209081549160026001820154918263ffffffff9460ff61ffff94859401541695815197885280831660208901528260201c16818801521c1660608501528160501c16608084015260601c60a0830152151560c0820152f35b9050346104525781600319360112610452578160209360ff92610c2d610c77565b90610c638161010e610c3d610c8f565b8a830195869060089263ffffffff60e01b809260e01b16835260e01b1660048201520190565b519020815280855220541690519015158152f35b6004359063ffffffff82168203610c8a57565b600080fd5b6024359063ffffffff82168203610c8a57565b6044359063ffffffff82168203610c8a57565b6064359063ffffffff82168203610c8a57565b6084359063ffffffff82168203610c8a57565b6040906003190112610c8a576004359060243590565b8054821015610d0d5760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b8054821015610d0d576000526003602060002091020190600090565b60e0810190811067ffffffffffffffff821117610d5b57604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff821117610d5b57604052565b90601f8019910116810190811067ffffffffffffffff821117610d5b5760405256fea26469706673582212201fb16e38ae24beff95293dc74f7fa0ed163cdad561bc822215e8c49cf09f478c64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6D9E4B5 EQ PUSH2 0xC0C JUMPI POP DUP1 PUSH4 0x10756524 EQ PUSH2 0xB94 JUMPI DUP1 PUSH4 0x13615122 EQ PUSH2 0x9D5 JUMPI DUP1 PUSH4 0x15F769B0 EQ PUSH2 0x96A JUMPI DUP1 PUSH4 0x1EB67481 EQ PUSH2 0x871 JUMPI DUP1 PUSH4 0x25C3DC2E EQ PUSH2 0x849 JUMPI DUP1 PUSH4 0x2B500D92 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0x44D93DD4 EQ PUSH2 0x6BF JUMPI DUP1 PUSH4 0x51F40850 EQ PUSH2 0x63D JUMPI DUP1 PUSH4 0x72C9C94B EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x7ADB273A EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x999A6FF2 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xC86374DF EQ PUSH2 0x1E0 JUMPI PUSH4 0xF40022A6 EQ PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1DC JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DC JUMPI PUSH2 0xD7 PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xE0 PUSH2 0xC8F JUMP JUMPDEST DUP2 MLOAD PUSH1 0xE0 DUP5 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x20 DUP5 ADD SWAP1 DUP2 MSTORE SWAP2 DUP5 SWAP1 SHL AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH2 0x11C DUP2 PUSH1 0x28 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xD8D JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x137 JUMPI DUP6 DUP1 RETURN JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 PUSH1 0x60 DUP5 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP6 DUP3 LT OR PUSH2 0x1C9 JUMPI DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP1 DUP6 MSTORE SWAP2 DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 DUP3 MSTORE CALLER SWAP6 DUP6 ADD SWAP6 DUP7 MSTORE DUP5 MLOAD SWAP4 DUP5 MSTORE SWAP1 MLOAD SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH32 0x1217636B53A0C3EF6FE9A2141BFD53CDF9D646E203BC257C1588A8CE653F07E9 SWAP1 PUSH1 0x60 SWAP1 LOG1 DUP1 CODESIZE DUP1 DUP1 DUP1 DUP1 DUP6 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DC JUMPI PUSH2 0x1EF CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 SWAP1 DUP2 SLOAD DUP5 LT ISZERO PUSH2 0x262 JUMPI POP PUSH1 0xC0 SWAP3 PUSH2 0x212 SWAP2 PUSH2 0xD23 JUMP JUMPDEST POP SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD DUP1 SWAP2 PUSH4 0xFFFFFFFF SWAP3 DUP4 SWAP2 PUSH1 0x2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP5 DUP1 MLOAD SWAP7 DUP8 MSTORE DUP3 DUP3 AND PUSH1 0x20 DUP9 ADD MSTORE DUP3 DUP3 PUSH1 0x20 SHR AND DUP2 DUP9 ADD MSTORE SHR AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x60 SHR AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP1 CALLDATALOAD SWAP1 DUP4 PUSH2 0x284 PUSH2 0xC8F JUMP JUMPDEST SWAP2 PUSH2 0x28D PUSH2 0xCA2 JUMP JUMPDEST SWAP5 PUSH2 0x296 PUSH2 0xCB5 JUMP JUMPDEST SWAP6 PUSH2 0x29F PUSH2 0xCC8 JUMP JUMPDEST SWAP3 PUSH1 0xA4 CALLDATALOAD SWAP6 PUSH2 0xFFFF DUP8 AND DUP1 SWAP8 SUB PUSH2 0x44E JUMPI DUP8 SWAP2 DUP8 SWAP2 DUP6 MLOAD SWAP7 PUSH2 0x2C0 DUP9 PUSH2 0xD71 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 SWAP3 AND SWAP12 DUP13 DUP10 MSTORE DUP3 PUSH1 0x20 DUP11 ADD SWAP8 AND SWAP7 DUP8 DUP2 MSTORE DUP4 DUP10 DUP12 ADD SWAP3 AND SWAP10 DUP11 DUP4 MSTORE DUP10 DUP6 PUSH1 0x60 DUP4 ADD SWAP6 AND SWAP13 DUP14 DUP7 MSTORE PUSH1 0x80 DUP4 ADD SWAP10 CALLER DUP12 MSTORE PUSH1 0xA0 DUP5 ADD SWAP10 DUP11 MSTORE DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x438 JUMPI SWAP1 PUSH2 0x323 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xCF1 JUMP JUMPDEST SWAP7 SWAP1 SWAP7 PUSH2 0x41F JUMPI POP DUP5 DUP1 SWAP4 PUSH2 0x370 DUP3 PUSH2 0x3B0 SWAP8 SWAP6 PUSH1 0x1 SWAP11 SWAP10 PUSH2 0x390 SWAP7 MLOAD AND PUSH4 0xFFFFFFFF NOT DUP12 SLOAD AND OR DUP11 SSTORE MLOAD AND DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL DUP3 SLOAD SWAP2 PUSH1 0x20 SHL AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP7 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT AND SWAP2 AND PUSH1 0x40 SHL PUSH4 0xFFFFFFFF PUSH1 0x40 SHL AND OR DUP6 SSTORE JUMP JUMPDEST MLOAD DUP4 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x60 SHL NOT AND SWAP2 AND PUSH1 0x60 SHL PUSH4 0xFFFFFFFF PUSH1 0x60 SHL AND OR DUP3 SSTORE JUMP JUMPDEST ADD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND DUP3 SLOAD SWAP2 PUSH2 0xFFFF PUSH1 0xA0 SHL SWAP1 MLOAD PUSH1 0xA0 SHL AND SWAP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR OR SWAP1 SSTORE DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH32 0xC591FC8D9121EE406F82B19EA6D42A63A55A45E0FF89B44679A059325A9E88F PUSH1 0xA0 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST SWAP1 POP DUP16 SWAP3 POP PUSH1 0x24 SWAP4 POP DUP3 SWAP2 POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE MSTORE REVERT JUMPDEST POP POP POP PUSH1 0x24 DUP16 PUSH1 0x41 DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP1 CALLDATALOAD PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x49F PUSH2 0xCA2 JUMP JUMPDEST SWAP1 PUSH2 0x4A8 PUSH2 0xCB5 JUMP JUMPDEST SWAP5 PUSH2 0x4B1 PUSH2 0xCC8 JUMP JUMPDEST SWAP6 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH4 0xFFFFFFFF SWAP4 DUP5 DUP7 AND DUP1 SWAP7 SUB PUSH2 0x639 JUMPI DUP7 SWAP2 DUP5 MLOAD SWAP6 PUSH2 0x4D4 DUP8 PUSH2 0xD71 JUMP JUMPDEST DUP10 DUP8 MSTORE DUP12 DUP2 PUSH1 0x20 DUP10 ADD SWAP4 AND SWAP12 DUP13 DUP5 MSTORE DUP3 DUP9 DUP11 ADD SWAP8 AND SWAP7 DUP8 DUP2 MSTORE DUP4 PUSH1 0x60 DUP12 ADD SWAP3 AND SWAP10 DUP11 DUP4 MSTORE DUP10 PUSH1 0x80 DUP3 ADD SWAP5 DUP14 DUP7 MSTORE PUSH1 0xA0 DUP4 ADD SWAP10 CALLER DUP12 MSTORE DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x623 JUMPI SWAP1 PUSH2 0x530 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xD23 JUMP JUMPDEST SWAP8 SWAP1 SWAP8 PUSH2 0x41F JUMPI POP DUP5 DUP1 SWAP4 PUSH2 0x586 PUSH2 0x5C6 SWAP8 PUSH1 0x2 SWAP11 SWAP10 SWAP8 SWAP6 PUSH2 0x5A6 SWAP6 MLOAD DUP12 SSTORE DUP2 PUSH1 0x1 DUP13 ADD SWAP10 MLOAD AND PUSH4 0xFFFFFFFF NOT DUP11 SLOAD AND OR DUP10 SSTORE MLOAD AND DUP8 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL DUP3 SLOAD SWAP2 PUSH1 0x20 SHL AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD DUP6 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT AND SWAP2 AND PUSH1 0x40 SHL PUSH4 0xFFFFFFFF PUSH1 0x40 SHL AND OR DUP5 SSTORE JUMP JUMPDEST MLOAD DUP3 SLOAD PUSH4 0xFFFFFFFF PUSH1 0x60 SHL NOT AND SWAP2 AND PUSH1 0x60 SHL PUSH4 0xFFFFFFFF PUSH1 0x60 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH32 0xE8C635839F4DE7F9D0F38CAA555296D8429B545B346A980FBE98DE2BB6ED9D91 PUSH1 0x80 CALLER SWAP5 LOG4 DUP1 RETURN JUMPDEST POP POP POP PUSH1 0x24 DUP16 PUSH1 0x41 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE MSTORE REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1DC JUMPI PUSH2 0x64C CALLDATASIZE PUSH2 0xCDB JUMP JUMPDEST SWAP3 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 DUP2 KECCAK256 SWAP1 DUP2 SLOAD DUP5 LT ISZERO PUSH2 0x262 JUMPI POP PUSH2 0x672 PUSH1 0xC0 SWAP4 PUSH2 0xFFFF SWAP3 PUSH2 0xCF1 JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH4 0xFFFFFFFF SWAP2 ADD SLOAD SWAP2 DUP5 MLOAD SWAP5 DUP3 DUP3 AND DUP7 MSTORE DUP3 DUP3 PUSH1 0x20 SHR AND PUSH1 0x20 DUP8 ADD MSTORE DUP3 DUP3 DUP3 SHR AND SWAP1 DUP7 ADD MSTORE PUSH1 0x60 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 CALLDATALOAD DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP2 CALLDATALOAD SWAP2 DUP3 DUP5 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 PUSH1 0x1 DUP5 DUP8 KECCAK256 ADD SLOAD AND PUSH2 0x811 JUMPI POP SWAP1 PUSH1 0x2 SWAP2 DUP2 MLOAD SWAP2 PUSH2 0x72E DUP4 PUSH2 0xD3F JUMP JUMPDEST DUP5 DUP4 MSTORE PUSH2 0x7E0 PUSH1 0x20 DUP5 ADD SWAP3 DUP1 TIMESTAMP AND DUP5 MSTORE DUP3 DUP6 ADD DUP9 DUP2 MSTORE PUSH2 0x7AB PUSH1 0x60 DUP8 ADD SWAP3 DUP11 DUP5 MSTORE PUSH1 0x80 DUP9 ADD SWAP3 DUP12 DUP5 MSTORE PUSH1 0xA0 DUP10 ADD SWAP7 CALLER DUP9 MSTORE PUSH1 0xC0 DUP11 ADD SWAP12 DUP14 DUP14 MSTORE DUP14 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP13 KECCAK256 SWAP9 MLOAD DUP10 SSTORE DUP2 PUSH1 0x1 DUP11 ADD SWAP9 MLOAD AND PUSH4 0xFFFFFFFF NOT DUP10 SLOAD AND OR DUP9 SSTORE MLOAD AND DUP7 SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL DUP3 SLOAD SWAP2 PUSH1 0x20 SHL AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 MLOAD DUP5 SLOAD SWAP2 MLOAD PUSH2 0xFFFF PUSH1 0x50 SHL PUSH1 0x50 SWAP2 SWAP1 SWAP2 SHL AND PUSH4 0xFFFFFFFF PUSH1 0x40 SHL NOT SWAP1 SWAP3 AND PUSH2 0xFFFF PUSH1 0x40 SHL PUSH1 0x40 SWAP3 SWAP1 SWAP3 SHL SWAP2 SWAP1 SWAP2 AND OR OR DUP4 SSTORE JUMP JUMPDEST MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SLOAD SWAP2 DUP2 NOT SWAP1 PUSH1 0x60 SHL AND SWAP2 AND OR SWAP1 SSTORE ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP5 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x52756E20616C726561647920657869737473 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI PUSH1 0x20 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x262 JUMPI PUSH1 0x20 SWAP3 DUP4 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1DC JUMPI SWAP1 DUP3 SWAP2 DUP2 DUP4 MLOAD PUSH2 0x895 DUP2 PUSH2 0xD3F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP2 DUP8 DUP3 ADD MSTORE DUP2 DUP6 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE DUP2 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD MSTORE CALLDATALOAD DUP2 MSTORE PUSH1 0x1 DUP5 MSTORE KECCAK256 SWAP2 DUP2 MLOAD SWAP2 PUSH2 0x8CD DUP4 PUSH2 0xD3F JUMP JUMPDEST DUP4 SLOAD SWAP4 DUP5 DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 PUSH4 0xFFFFFFFF SWAP3 DUP2 DUP7 ADD SWAP1 DUP5 DUP7 AND DUP3 MSTORE DUP1 DUP8 ADD SWAP5 DUP1 DUP8 DUP6 SHR AND DUP7 MSTORE PUSH2 0xFFFF SWAP6 DUP7 SWAP5 DUP3 PUSH1 0x60 DUP12 ADD SWAP6 DUP8 DUP12 DUP8 SHR AND DUP8 MSTORE PUSH1 0x80 DUP13 ADD SWAP9 DUP9 DUP13 PUSH1 0x50 SHR AND DUP11 MSTORE PUSH1 0xA0 DUP14 ADD SWAP12 PUSH1 0x60 SHR DUP13 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND SWAP12 PUSH1 0xC0 ADD SWAP12 ISZERO ISZERO DUP13 MSTORE DUP6 MLOAD SWAP13 DUP14 MSTORE MLOAD AND SWAP1 DUP12 ADD MSTORE MLOAD AND SWAP1 DUP9 ADD MSTORE MLOAD AND PUSH1 0x60 DUP7 ADD MSTORE MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 SWAP1 RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI PUSH32 0xA96AE3077D483C4B54A8D717A6B5F64CD935E7D7C38BEDB4F8F7AECA073A30DE SWAP2 PUSH1 0x80 SWAP2 PUSH2 0x9AB PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x9B3 PUSH2 0xCA2 JUMP JUMPDEST DUP3 MLOAD SWAP4 CALLDATALOAD DUP5 MSTORE PUSH4 0xFFFFFFFF DUP1 SWAP3 AND PUSH1 0x20 DUP6 ADD MSTORE AND SWAP1 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x9F3 PUSH2 0xC8F JUMP JUMPDEST SWAP3 PUSH2 0xFFFF SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 AND SWAP2 DUP3 DUP3 SUB PUSH2 0xB90 JUMPI PUSH1 0x64 CALLDATALOAD SWAP5 DUP6 AND SWAP5 DUP6 DUP2 SUB PUSH2 0xB8C JUMPI DUP7 DUP10 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP5 DUP10 KECCAK256 SWAP3 PUSH1 0x1 DUP5 ADD SWAP1 DUP2 SLOAD SWAP4 PUSH4 0xFFFFFFFF SWAP6 DUP7 DUP7 AND ISZERO PUSH2 0xB53 JUMPI PUSH1 0x2 ADD SWAP5 PUSH1 0xFF DUP7 SLOAD AND PUSH2 0xB18 JUMPI PUSH1 0x60 SHR CALLER SUB PUSH2 0xAD5 JUMPI POP DUP2 SLOAD PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHL PUSH2 0xFFFF PUSH1 0x40 SHL AND PUSH1 0x20 DUP12 SWAP1 SHL PUSH4 0xFFFFFFFF PUSH1 0x20 SHL AND PUSH12 0xFFFFFFFFFFFFFFFF00000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR OR PUSH1 0x50 SWAP3 SWAP1 SWAP3 SHL PUSH2 0xFFFF PUSH1 0x50 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 MLOAD SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD MSTORE PUSH32 0xEDACAA8E2A0034E7170A0AA44490014012724DFA25D7002A7FC867AA075BCEAD PUSH1 0x60 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP10 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207375626D69747465722063616E20636F6D706C6574650000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x149D5B88185B1C9958591E4818DBDB5C1B195D1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP5 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x149D5B881B9BDD081A5B9A5D1A585B1A5E9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP DUP3 CALLVALUE PUSH2 0x452 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x452 JUMPI PUSH1 0xE0 SWAP3 DUP3 SWAP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 DUP3 PUSH4 0xFFFFFFFF SWAP5 PUSH1 0xFF PUSH2 0xFFFF SWAP5 DUP6 SWAP5 ADD SLOAD AND SWAP6 DUP2 MLOAD SWAP8 DUP9 MSTORE DUP1 DUP4 AND PUSH1 0x20 DUP10 ADD MSTORE DUP3 PUSH1 0x20 SHR AND DUP2 DUP9 ADD MSTORE SHR AND PUSH1 0x60 DUP6 ADD MSTORE DUP2 PUSH1 0x50 SHR AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x60 SHR PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x452 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x452 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0xC2D PUSH2 0xC77 JUMP JUMPDEST SWAP1 PUSH2 0xC63 DUP2 PUSH2 0x10E PUSH2 0xC3D PUSH2 0xC8F JUMP JUMPDEST DUP11 DUP4 ADD SWAP6 DUP7 SWAP1 PUSH1 0x8 SWAP3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP1 SWAP3 PUSH1 0xE0 SHL AND DUP4 MSTORE PUSH1 0xE0 SHL AND PUSH1 0x4 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP2 MSTORE DUP1 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xC8A JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xC8A JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5B JUMPI PUSH1 0x40 MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xB1 PUSH15 0x38AE24BEFF95293DC74F7FA0ED163C 0xDA 0xD5 PUSH2 0xBC82 0x22 ISZERO 0xE8 0xC4 SWAP13 CREATE SWAP16 SELFBALANCE DUP13 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"257:6280:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;;257:6280:14;;;;644:22;;257:6280;;;;;;;;;;;;644:22;;257:6280;;;;644:22;;1035;;644;;;;;;:::i;:::-;257:6280;634:33;;257:6280;;;;;;;;;;;;;681:13;677:118;;257:6280;;;677:118;-1:-1:-1;;257:6280:14;725:4;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:23;;;257:6280;;;772:10;760:23;;;257:6280;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;257:6280:14;;;;;;;-1:-1:-1;748:36:14;;257:6280;;748:36;677:118;;;;;;257:6280;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3428:49;257:6280;;;;;;;;3428:49;;;;;;257:6280;3428:49;;;;:::i;:::-;257:6280;;;;3428:49;;;;257:6280;;;;;;;3428:49;257:6280;;;;;3428:49;;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3428:49;;;257:6280;;;;;;;;-1:-1:-1;;257:6280:14;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3754:187;257:6280;3754:187;;257:6280;;;;;;3754:187;;;;257:6280;;;;;;3754:187;;257:6280;3754:187;;257:6280;;;;;;;3754:187;;3878:10;;257:6280;;;3754:187;;257:6280;;;;;3960:15;257:6280;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;-1:-1:-1;;;;257:6280:14;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;-1:-1:-1;;;;257:6280:14;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:91;257:6280;3878:10;4023:91;;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;257:6280:14;;;;;;;;;;;6132:15;257:6280;;;;;;;;;;;;;;;;;;-1:-1:-1;;257:6280:14;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4365:170;;257:6280;4365:170;;257:6280;;;;;;4365:170;;;;257:6280;;;;;;4365:170;257:6280;4365:170;;257:6280;;;;;;4365:170;257:6280;4365:170;;257:6280;;;;;4365:170;;4514:10;;257:6280;;;;4554:10;257:6280;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;-1:-1:-1;;;;257:6280:14;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;-1:-1:-1;;;;257:6280:14;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4608:86;257:6280;4514:10;4608:86;;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3365:57;257:6280;;;;;;;;3365:57;;;;;;;257:6280;3365:57;257:6280;3365:57;;:::i;:::-;257:6280;;;;3365:57;257:6280;3365:57;;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;257:6280:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;257:6280:14;;;;;;;;;;;;;;;;;;;;4833:30;257:6280;;;;;;;;;;;;;;:::i;:::-;;;;;;4933:254;;5009:15;;;257:6280;;;4933:254;;;257:6280;;;;4933:254;;;257:6280;;;;4933:254;;;257:6280;;;;4933:254;;;5136:10;;257:6280;;4933:254;;;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;-1:-1:-1;;;;257:6280:14;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;;;;;;;;;;;4933:254;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;-1:-1:-1;;257:6280:14;;;;;;;;;;;6320:10;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;257:6280:14;;;;883:35;257:6280;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;907:10;257:6280;;;;883:35;257:6280;;;;;;;;;;-1:-1:-1;;257:6280:14;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5504:13;257:6280;5504:13;;257:6280;;;;;;;;;5504:17;257:6280;;5564:13;;257:6280;;;;;;;;;5621:10;:27;257:6280;;-1:-1:-1;257:6280:14;;;;;;;-1:-1:-1;;;257:6280:14;;;;;-1:-1:-1;;;257:6280:14;-1:-1:-1;;257:6280:14;;;;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5864:103;257:6280;5621:10;5864:103;;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;-1:-1:-1;;;257:6280:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;257:6280:14;;;;;;;;;;;;;;;;;;3307:52;;257:6280;3307:52;;257:6280;;;;;;;3307:52;;;;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1035:22;257:6280;1035:22;257:6280;;:::i;:::-;1035:22;;;;;257:6280;;;;;;;;;;;;;;;;;;;;;;;1035:22;257:6280;1025:33;;257:6280;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;257:6280:14;;-1:-1:-1;257:6280:14;;;;;;-1:-1:-1;257:6280:14;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;257:6280:14;;;-1:-1:-1;257:6280:14;;;;;-1:-1:-1;257:6280:14;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;1035:22;;257:6280;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"completeSimulation(bytes32,uint32,uint16,uint16)":"13615122","deliveriesByRun(bytes32,uint256)":"51f40850","getDeliveryCount(bytes32)":"7adb273a","getKillCount(bytes32)":"25c3dc2e","getSimulationRun(bytes32)":"1eb67481","hasVisited(uint32,uint32)":"06d9e4b5","initializeSimulation(bytes32)":"2b500d92","killsByRun(bytes32,uint256)":"c86374df","markVisited(uint32,uint32)":"f40022a6","recordDrugDelivery(bytes32,uint32,uint32,uint32,uint32,uint16)":"999a6ff2","recordFood(uint256,uint32,uint32)":"15f769b0","recordTumorKill(bytes32,uint256,uint32,uint32,uint32,uint32)":"72c9c94b","simulations(bytes32)":"10756524","visited(bytes32)":"44d93dd4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"ant\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct ColonyMemory.Visit\",\"name\":\"v\",\"type\":\"tuple\"}],\"name\":\"CellVisited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"z\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nanobot\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"payloadAmount\",\"type\":\"uint16\"}],\"name\":\"DrugDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ant\",\"type\":\"address\"}],\"name\":\"FoodCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"totalSteps\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"cellsKilled\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"drugDeliveries\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"name\":\"SimulationCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"cellId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"z\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nanobot\",\"type\":\"address\"}],\"name\":\"TumorCellKilled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"totalSteps\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"cellsKilled\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"drugDeliveries\",\"type\":\"uint16\"}],\"name\":\"completeSimulation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deliveriesByRun\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"z\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"nanobot\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"payloadAmount\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"}],\"name\":\"getDeliveryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"}],\"name\":\"getKillCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"}],\"name\":\"getSimulationRun\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"totalSteps\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"cellsKilled\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"drugDeliveries\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct ColonyMemory.SimulationRun\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"hasVisited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"}],\"name\":\"initializeSimulation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"killsByRun\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cellId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"z\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"nanobot\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"markVisited\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"z\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"payloadAmount\",\"type\":\"uint16\"}],\"name\":\"recordDrugDelivery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"recordFood\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"cellId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"z\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"name\":\"recordTumorKill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"simulations\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"startTime\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"totalSteps\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"cellsKilled\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"drugDeliveries\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"visited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"completeSimulation(bytes32,uint32,uint16,uint16)\":{\"notice\":\"Complete a simulation run and record final statistics\"},\"getDeliveryCount(bytes32)\":{\"notice\":\"Get delivery count for a simulation run\"},\"getKillCount(bytes32)\":{\"notice\":\"Get kill count for a simulation run\"},\"getSimulationRun(bytes32)\":{\"notice\":\"Get simulation run info\"},\"initializeSimulation(bytes32)\":{\"notice\":\"Initialize a new simulation run\"},\"recordDrugDelivery(bytes32,uint32,uint32,uint32,uint32,uint16)\":{\"notice\":\"Record a drug delivery event during simulation\"},\"recordTumorKill(bytes32,uint256,uint32,uint32,uint32,uint32)\":{\"notice\":\"Record a tumor cell kill event\"}},\"notice\":\"Extended \\\"shared trust memory\\\" ledger for ant colony and tumor nanobot simulations.         Stores visited cells, food collection, drug delivery events, and tumor treatment outcomes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ColonyMemory.sol\":\"ColonyMemory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ColonyMemory.sol\":{\"keccak256\":\"0xf7ef526149236e4c794a97488459eeaeece42e8e2e1e2feddf11bd0839055863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9def8d7f0ce77a5390ea8f459fd162159bce2e66f304dc5b032d66ba9dbf667\",\"dweb:/ipfs/QmbaxySxfNpGgjdHXKLr66w7omxQRXSbRTJntGatRzQVKB\"]}},\"version\":1}"}},"contracts/ExperienceRegistry.sol":{"ExperienceRegistry":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"runHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"validator","type":"address"},{"indexed":false,"internalType":"uint8","name":"quality","type":"uint8"}],"name":"ExperienceAttested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"runHash","type":"bytes32"},{"indexed":false,"internalType":"string","name":"ipfsCid","type":"string"},{"indexed":false,"internalType":"bytes32","name":"dataHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"score","type":"uint256"},{"indexed":true,"internalType":"address","name":"submitter","type":"address"}],"name":"ExperienceSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"runHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"verifier","type":"address"}],"name":"ExperienceVerified","type":"event"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"addValidator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"},{"internalType":"uint8","name":"quality","type":"uint8"},{"internalType":"string","name":"notes","type":"string"}],"name":"attestExperience","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"attestations","outputs":[{"internalType":"address","name":"validator","type":"address"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint8","name":"quality","type":"uint8"},{"internalType":"string","name":"notes","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedValidators","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"}],"name":"calculateAverageQuality","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"experiences","outputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"},{"internalType":"string","name":"ipfsCid","type":"string"},{"internalType":"bytes32","name":"dataHash","type":"bytes32"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint16","name":"attestations","type":"uint16"},{"internalType":"bool","name":"verified","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"}],"name":"getAttestations","outputs":[{"components":[{"internalType":"address","name":"validator","type":"address"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint8","name":"quality","type":"uint8"},{"internalType":"string","name":"notes","type":"string"}],"internalType":"struct ExperienceRegistry.Attestation[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"}],"name":"getExperience","outputs":[{"components":[{"internalType":"bytes32","name":"runHash","type":"bytes32"},{"internalType":"string","name":"ipfsCid","type":"string"},{"internalType":"bytes32","name":"dataHash","type":"bytes32"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"address","name":"submitter","type":"address"},{"internalType":"uint32","name":"timestamp","type":"uint32"},{"internalType":"uint16","name":"attestations","type":"uint16"},{"internalType":"bool","name":"verified","type":"bool"}],"internalType":"struct ExperienceRegistry.Experience","name":"exp","type":"tuple"},{"components":[{"internalType":"string","name":"strategyType","type":"string"},{"internalType":"string","name":"modelUsed","type":"string"},{"internalType":"uint16","name":"nanobotCount","type":"uint16"},{"internalType":"uint16","name":"tumorRadius","type":"uint16"},{"internalType":"bytes32","name":"datasetHash","type":"bytes32"}],"internalType":"struct ExperienceRegistry.StrategyMeta","name":"strategy","type":"tuple"},{"internalType":"uint256","name":"avgQuality","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"}],"name":"isVerified","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minAttestations","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"validator","type":"address"}],"name":"removeValidator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"min","type":"uint8"}],"name":"setMinAttestations","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"strategies","outputs":[{"internalType":"string","name":"strategyType","type":"string"},{"internalType":"string","name":"modelUsed","type":"string"},{"internalType":"uint16","name":"nanobotCount","type":"uint16"},{"internalType":"uint16","name":"tumorRadius","type":"uint16"},{"internalType":"bytes32","name":"datasetHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"runHash","type":"bytes32"},{"internalType":"string","name":"ipfsCid","type":"string"},{"internalType":"bytes32","name":"dataHash","type":"bytes32"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"string","name":"strategyType","type":"string"},{"internalType":"string","name":"modelUsed","type":"string"},{"internalType":"uint16","name":"nanobotCount","type":"uint16"},{"internalType":"uint16","name":"tumorRadius","type":"uint16"},{"internalType":"bytes32","name":"datasetHash","type":"bytes32"}],"name":"submitExperience","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461004a57600480546001600160a81b03191633908117600160a11b179091556000908152600360205260409020805460ff1916600117905561161a90816100508239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816313f269dd146112e65750806327dee37c1461129557806334f01811146111f157806337e59e36146110a35780633ff34eb91461101a57806340a141ff14610fcc5780634d238c8e14610f7b5780635871416314610f385780637b77044d146108d65780638da5cb5b146108ad578063a78c52bb14610824578063b144d4a31461035f578063bb66dab214610339578063c181b273146103025763ebee03bb146100c457600080fd5b346102fd5760203660031901126102fd57600060e06040516100e58161135c565b828152606060208201528260408201528260608201528260808201528260a08201528260c082015201526000608060405161011f81611378565b606081526060602082015282604082015282606082015201526004356000526000602052604060002060ff6004604051926101598461135c565b80548452610169600182016113b4565b60208501526002810154604085015260038101546060850152015460018060a01b038116608084015263ffffffff8160a01c1660a084015261ffff8160c01c1660c084015260d01c16151560e082015260043560005260016020526040600020906003604051926101d984611378565b6101e2816113b4565b84526101f0600182016113b4565b602085015261ffff6002820154818116604087015260101c16606085015201546080830152610220600435611577565b91604051928392606084528051606085015260e061024f60208301516101006080880152610160870190611459565b91604081015160a0870152606081015160c087015260018060a01b036080820151168287015263ffffffff60a08201511661010087015261ffff60c0820151166101208701520151151561014085015283810360208501526080806102d26102c0865160a0865260a0860190611459565b60208701518582036020870152611459565b9461ffff604082015116604085015261ffff6060820151166060850152015191015260408301520390f35b600080fd5b346102fd5760203660031901126102fd576004356000526000602052602060ff60046040600020015460d01c166040519015158152f35b346102fd5760203660031901126102fd576020610357600435611577565b604051908152f35b346102fd5760603660031901126102fd5760043560249081359160ff83168093036102fd576044906001600160401b0382358181116102fd576103a6903690600401611499565b91336000526020946003865260ff60406000205416156107e057866000526000865263ffffffff908160046040600020015460a01c161561079c5760649060648a116107605760008981526002895260408120805492915b83811061070857505050505086600052600286526040600020936040519161042583611341565b33835261044388840195824216875260408501938c85523691611531565b94606084019586528654680100000000000000008110156106f35761046f9060019889820181556114c6565b9490946106de575184549151935160ff60c01b60c09190911b169290931660a01b63ffffffff60a01b166001600160a01b039093166001600160c81b0319909116179190911717815591518051928401929182116106c95781906104d38454611307565b601f8111610676575b508690601f831160011461061357600092610608575b5050600019600383901b1c191690831b1790555b836000526000835260046040600020019061ffff9283835460c01c16908482146105f45750825461ffff60c01b1916910160c01b61ffff60c01b161790557f9a3f0c0b287bde0ebea0be11740769eca2fea70883ef1bd79eab05f21c062c6a9190836000526000825260046040600020015460c01c1660ff60045460a01c161115610597575b6040519384523393a3005b60466105a284611577565b1061058c57600083815280825260408120600401805460ff60d01b1916600160d01b179055339084907fcd88bd92cbb653cb16eea4a15037ddc18c0b33cf33cb092a44aa993b0684b5a59080a361058c565b634e487b7160e01b60009081526011600452fd5b0151905088806104f2565b90859350601f1983169185600052886000209260005b8a8282106106605750508411610647575b505050811b019055610506565b015160001960f88460031b161c1916905588808061063a565b8385015186558997909501949384019301610629565b9091508360005286600020601f840160051c8101918885106106bf575b84939291601f88920160051c01915b8281106106b05750506104dc565b600081558594508791016106a2565b9091508190610693565b84634e487b7160e01b60005260416004526000fd5b88634e487b7160e01b60005260006004526000fd5b88634e487b7160e01b60005260416004526000fd5b61071281836114c6565b50546001600160a01b0316331461072b576001016103fe565b60405162461bcd60e51b8152600481018c90526010818c01526f105b1c9958591e48185d1d195cdd195960821b818501528590fd5b60405162461bcd60e51b8152600481018990526015818901527405175616c697479206d75737420626520302d31303605c1b6044820152606490fd5b60405162461bcd60e51b8152600481018890526019818801527f457870657269656e636520646f6573206e6f74206578697374000000000000006044820152606490fd5b60405162461bcd60e51b8152600481018790526018818701527f4e6f7420617574686f72697a65642076616c696461746f7200000000000000006044820152606490fd5b346102fd5760403660031901126102fd576024356004356000526002602052604060002080548210156102fd5760ff9161085d916114c6565b506108a961086f6001835493016113b4565b60405193849360018060a01b038116855263ffffffff8160a01c16602086015260c01c166040840152608060608401526080830190611459565b0390f35b346102fd5760003660031901126102fd576004546040516001600160a01b039091168152602090f35b346102fd576101203660031901126102fd576024356001600160401b0381116102fd57610907903690600401611499565b6084356001600160401b0381116102fd57610926903690600401611499565b9060a4356001600160401b0381116102fd57610946903690600401611499565b9060c4359161ffff831683036102fd5760e4359361ffff851685036102fd57600435600052600060205263ffffffff60046040600020015460a01c16610ef3576040516109928161135c565b60043581526109a236898b611531565b60208201526044356040820152606435606082015233608082015263ffffffff421660a0820152600060c0820152600060e0820152600435600052600060205260406000208151815560208201518051906001600160401b038211610d3f57610a0e6001840154611307565b601f8111610eac575b50602090601f8311600114610e27579360e0600461ffff9b9a989585610afa96610b039a968f9d9a600092610e1c575b50508160011b916000199060031b1c19161760018201555b604084015160028201556060840151600382015560808401519101805460a08086015163ffffffff60a01b911b166001600160a01b039093166001600160c01b0319909116179190911781559160c081810151845461ffff60c01b1916908c1690911b61ffff60c01b161783550151815460ff60d01b191690151560d01b60ff60d01b1617905560405199610af38b611378565b3691611531565b88523691611531565b6020860152166040840152166060820152610104356080820152600435600052600160205260406000209080518051906001600160401b038211610d3f578190610b4d8554611307565b601f8111610dcc575b50602090601f8311600114610d6057600092610d55575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b038211610d3f57610ba56001850154611307565b601f8111610cf8575b50602090601f8311600114610c8457918060039492608094600092610c79575b505060001982861b1c1916600191821b17908501555b6002840161ffff60408301511681549063ffff0000606085015160101b169163ffffffff19161717905501519101558060405192606084528160608501526080840137600060808284010152604435602083015260643560408301527fc8643348aec2503f08aa01288744bb383830b348039b88a434ae1d5278ddc696339260808160043594601f80199101168101030190a3005b015190508880610bce565b906001850160005260206000209160005b601f1985168110610ce05750926003949260019260809583601f19811610610cc8575b505050811b016001850155610be4565b015160001983881b60f8161c19169055888080610cb8565b91926020600181928685015181550194019201610c95565b600185016000526020600020601f840160051c810160208510610d38575b601f830160051c82018110610d2c575050610bae565b60008155600101610d16565b5080610d16565b634e487b7160e01b600052604160045260246000fd5b015190508680610b6d565b9250846000526020600020906000935b601f1984168510610db1576001945083601f19811610610d98575b505050811b018255610b82565b015160001960f88460031b161c19169055868080610d8b565b81810151835560209485019460019093019290910190610d70565b909150846000526020600020601f840160051c810160208510610e15575b90849392915b601f830160051c82018110610e06575050610b56565b60008155859450600101610df0565b5080610dea565b015190503880610a47565b906001840160005260206000209160005b601f1985168110610e945750600461ffff9b9a9895600186610b039a968f9d9a9660e096610afa9a601f19811610610e7b575b505050811b016001820155610a5f565b015160001960f88460031b161c19169055388080610e6b565b91926020600181928685015181550194019201610e38565b600184016000526020600020601f840160051c810160208510610eec575b601f830160051c82018110610ee0575050610a17565b60008155600101610eca565b5080610eca565b60405162461bcd60e51b815260206004820152601960248201527f457870657269656e636520616c726561647920657869737473000000000000006044820152606490fd5b346102fd5760203660031901126102fd576004356001600160a01b038116908190036102fd576000526003602052602060ff604060002054166040519015158152f35b346102fd5760203660031901126102fd576004356001600160a01b03818116918290036102fd57610fb1906004541633146114f8565b6000908152600360205260409020805460ff19166001179055005b346102fd5760203660031901126102fd576004356001600160a01b03818116918290036102fd57611002906004541633146114f8565b6000908152600360205260409020805460ff19169055005b346102fd5760203660031901126102fd57600435600052600160205261107a6040600020611047816113b4565b90611054600182016113b4565b600282015491611088600361ffff9201549260405196879660a0885260a0880190611459565b908682036020880152611459565b92818116604086015260101c16606084015260808301520390f35b346102fd576020806003193601126102fd576004356000526002808252604060002080546001600160401b038111610d3f5760405193926110ea600583901b850186611393565b8185528385018093600052846000206000915b84831061119757604080518881528951818a01819052600092600582901b83018101918a918c9085015b8287106111345785850386f35b909192938280611187600193603f198a8203018652885190608090868060a01b03835116815263ffffffff85840151168582015260ff604084015116604082015281606080940151938201520190611459565b9601920196019592919092611127565b838760019260409a999a516111ab81611341565b60ff8654868060a01b038116835263ffffffff8160a01c168584015260c01c1660408201526111db8587016113b4565b60608201528152019201920191909695966110fd565b346102fd5760203660031901126102fd57600435600052600060205260406000208054611220600183016113b4565b9160ff6002820154916004600382015491015490611251604051968796610100908852806020890152870190611459565b936040860152606085015260018060a01b038116608085015263ffffffff8160a01c1660a085015261ffff8160c01c1660c085015260d01c16151560e08301520390f35b346102fd5760203660031901126102fd5760043560ff811681036102fd57600454906112cb336001600160a01b038416146114f8565b60ff60a01b1990911660a09190911b60ff60a01b1617600455005b346102fd5760003660031901126102fd5760209060ff60045460a01c168152f35b90600182811c92168015611337575b602083101461132157565b634e487b7160e01b600052602260045260246000fd5b91607f1691611316565b608081019081106001600160401b03821117610d3f57604052565b61010081019081106001600160401b03821117610d3f57604052565b60a081019081106001600160401b03821117610d3f57604052565b90601f801991011681019081106001600160401b03821117610d3f57604052565b906040519182600082546113c781611307565b9081845260209460019160018116908160001461143757506001146113f8575b5050506113f692500383611393565b565b600090815285812095935091905b81831061141f5750506113f693508201013880806113e7565b85548884018501529485019487945091830191611406565b925050506113f694925060ff191682840152151560051b8201013880806113e7565b919082519283825260005b848110611485575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611464565b9181601f840112156102fd578235916001600160401b0383116102fd57602083818601950101116102fd57565b80548210156114e25760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b156114ff57565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b6044820152606490fd5b9291926001600160401b038211610d3f576040519161155a601f8201601f191660200184611393565b8294818452818301116102fd578281602093846000960137010152565b600090815260026020526040812080549182156115de57908180915b8483106115a1575050500490565b90919260ff6115b085846114c6565b505460c01c1681018091116115ca57926001019190611593565b634e487b7160e01b83526011600452602483fd5b9150509056fea2646970667358221220e3211e8a31279956d4658c13396624627fc138c3316483e4084c2eef86e943b764736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x4A JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER SWAP1 DUP2 OR PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x161A SWAP1 DUP2 PUSH2 0x50 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x13F269DD EQ PUSH2 0x12E6 JUMPI POP DUP1 PUSH4 0x27DEE37C EQ PUSH2 0x1295 JUMPI DUP1 PUSH4 0x34F01811 EQ PUSH2 0x11F1 JUMPI DUP1 PUSH4 0x37E59E36 EQ PUSH2 0x10A3 JUMPI DUP1 PUSH4 0x3FF34EB9 EQ PUSH2 0x101A JUMPI DUP1 PUSH4 0x40A141FF EQ PUSH2 0xFCC JUMPI DUP1 PUSH4 0x4D238C8E EQ PUSH2 0xF7B JUMPI DUP1 PUSH4 0x58714163 EQ PUSH2 0xF38 JUMPI DUP1 PUSH4 0x7B77044D EQ PUSH2 0x8D6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0xA78C52BB EQ PUSH2 0x824 JUMPI DUP1 PUSH4 0xB144D4A3 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xBB66DAB2 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xC181B273 EQ PUSH2 0x302 JUMPI PUSH4 0xEBEE03BB EQ PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x0 PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0xE5 DUP2 PUSH2 0x135C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x11F DUP2 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x159 DUP5 PUSH2 0x135C JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH2 0x169 PUSH1 0x1 DUP3 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0xFFFF DUP2 PUSH1 0xC0 SHR AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1D9 DUP5 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x1E2 DUP2 PUSH2 0x13B4 JUMP JUMPDEST DUP5 MSTORE PUSH2 0x1F0 PUSH1 0x1 DUP3 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xFFFF PUSH1 0x2 DUP3 ADD SLOAD DUP2 DUP2 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x10 SHR AND PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x220 PUSH1 0x4 CALLDATALOAD PUSH2 0x1577 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x60 DUP5 MSTORE DUP1 MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xE0 PUSH2 0x24F PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x100 PUSH1 0x80 DUP9 ADD MSTORE PUSH2 0x160 DUP8 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND DUP3 DUP8 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0xFFFF PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH2 0x120 DUP8 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x140 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP1 PUSH2 0x2D2 PUSH2 0x2C0 DUP7 MLOAD PUSH1 0xA0 DUP7 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x1459 JUMP JUMPDEST SWAP5 PUSH2 0xFFFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xFFFF PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xD0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x20 PUSH2 0x357 PUSH1 0x4 CALLDATALOAD PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x2FD JUMPI PUSH1 0x44 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2FD JUMPI PUSH2 0x3A6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1499 JUMP JUMPDEST SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x3 DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x7E0 JUMPI DUP7 PUSH1 0x0 MSTORE PUSH1 0x0 DUP7 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x79C JUMPI PUSH1 0x64 SWAP1 PUSH1 0x64 DUP11 GT PUSH2 0x760 JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x2 DUP10 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x708 JUMPI POP POP POP POP POP DUP7 PUSH1 0x0 MSTORE PUSH1 0x2 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x425 DUP4 PUSH2 0x1341 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH2 0x443 DUP9 DUP5 ADD SWAP6 DUP3 TIMESTAMP AND DUP8 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 DUP13 DUP6 MSTORE CALLDATASIZE SWAP2 PUSH2 0x1531 JUMP JUMPDEST SWAP5 PUSH1 0x60 DUP5 ADD SWAP6 DUP7 MSTORE DUP7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI PUSH2 0x46F SWAP1 PUSH1 0x1 SWAP9 DUP10 DUP3 ADD DUP2 SSTORE PUSH2 0x14C6 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x6DE JUMPI MLOAD DUP5 SLOAD SWAP2 MLOAD SWAP4 MLOAD PUSH1 0xFF PUSH1 0xC0 SHL PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHL AND SWAP3 SWAP1 SWAP4 AND PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR OR DUP2 SSTORE SWAP2 MLOAD DUP1 MLOAD SWAP3 DUP5 ADD SWAP3 SWAP2 DUP3 GT PUSH2 0x6C9 JUMPI DUP2 SWAP1 PUSH2 0x4D3 DUP5 SLOAD PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x676 JUMPI JUMPDEST POP DUP7 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x613 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x608 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH2 0xFFFF SWAP3 DUP4 DUP4 SLOAD PUSH1 0xC0 SHR AND SWAP1 DUP5 DUP3 EQ PUSH2 0x5F4 JUMPI POP DUP3 SLOAD PUSH2 0xFFFF PUSH1 0xC0 SHL NOT AND SWAP2 ADD PUSH1 0xC0 SHL PUSH2 0xFFFF PUSH1 0xC0 SHL AND OR SWAP1 SSTORE PUSH32 0x9A3F0C0B287BDE0EBEA0BE11740769ECA2FEA70883EF1BD79EAB05F21C062C6A SWAP2 SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0xA0 SHR AND GT ISZERO PUSH2 0x597 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 STOP JUMPDEST PUSH1 0x46 PUSH2 0x5A2 DUP5 PUSH2 0x1577 JUMP JUMPDEST LT PUSH2 0x58C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE DUP1 DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xD0 SHL NOT AND PUSH1 0x1 PUSH1 0xD0 SHL OR SWAP1 SSTORE CALLER SWAP1 DUP5 SWAP1 PUSH32 0xCD88BD92CBB653CB16EEA4A15037DDC18C0B33CF33CB092A44AA993B0684B5A5 SWAP1 DUP1 LOG3 PUSH2 0x58C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x4F2 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x660 JUMPI POP POP DUP5 GT PUSH2 0x647 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x506 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x63A JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP10 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x629 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP9 DUP6 LT PUSH2 0x6BF JUMPI JUMPDEST DUP5 SWAP4 SWAP3 SWAP2 PUSH1 0x1F DUP9 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x6B0 JUMPI POP POP PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x693 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x712 DUP2 DUP4 PUSH2 0x14C6 JUMP JUMPDEST POP SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72B JUMPI PUSH1 0x1 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x10 DUP2 DUP13 ADD MSTORE PUSH16 0x105B1C9958591E48185D1D195CDD1959 PUSH1 0x82 SHL DUP2 DUP6 ADD MSTORE DUP6 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP10 ADD MSTORE PUSH21 0x5175616C697479206D75737420626520302D31303 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x19 DUP2 DUP9 ADD MSTORE PUSH32 0x457870657269656E636520646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x18 DUP2 DUP8 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A65642076616C696461746F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0xFF SWAP2 PUSH2 0x85D SWAP2 PUSH2 0x14C6 JUMP JUMPDEST POP PUSH2 0x8A9 PUSH2 0x86F PUSH1 0x1 DUP4 SLOAD SWAP4 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP6 MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xC0 SHR AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FD JUMPI PUSH2 0x907 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FD JUMPI PUSH2 0x926 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1499 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FD JUMPI PUSH2 0x946 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1499 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH2 0xFFFF DUP4 AND DUP4 SUB PUSH2 0x2FD JUMPI PUSH1 0xE4 CALLDATALOAD SWAP4 PUSH2 0xFFFF DUP6 AND DUP6 SUB PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH4 0xFFFFFFFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0xEF3 JUMPI PUSH1 0x40 MLOAD PUSH2 0x992 DUP2 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH2 0x9A2 CALLDATASIZE DUP10 DUP12 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF TIMESTAMP AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD3F JUMPI PUSH2 0xA0E PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xEAC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE27 JUMPI SWAP4 PUSH1 0xE0 PUSH1 0x4 PUSH2 0xFFFF SWAP12 SWAP11 SWAP9 SWAP6 DUP6 PUSH2 0xAFA SWAP7 PUSH2 0xB03 SWAP11 SWAP7 DUP16 SWAP14 SWAP11 PUSH1 0x0 SWAP3 PUSH2 0xE1C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0xA0 DUP1 DUP7 ADD MLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL SWAP2 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 PUSH1 0xC0 DUP2 DUP2 ADD MLOAD DUP5 SLOAD PUSH2 0xFFFF PUSH1 0xC0 SHL NOT AND SWAP1 DUP13 AND SWAP1 SWAP2 SHL PUSH2 0xFFFF PUSH1 0xC0 SHL AND OR DUP4 SSTORE ADD MLOAD DUP2 SLOAD PUSH1 0xFF PUSH1 0xD0 SHL NOT AND SWAP1 ISZERO ISZERO PUSH1 0xD0 SHL PUSH1 0xFF PUSH1 0xD0 SHL AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP10 PUSH2 0xAF3 DUP12 PUSH2 0x1378 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x1531 JUMP JUMPDEST DUP9 MSTORE CALLDATASIZE SWAP2 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE AND PUSH1 0x40 DUP5 ADD MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD3F JUMPI DUP2 SWAP1 PUSH2 0xB4D DUP6 SLOAD PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xDCC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD60 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xD55 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD3F JUMPI PUSH2 0xBA5 PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCF8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC84 JUMPI SWAP2 DUP1 PUSH1 0x3 SWAP5 SWAP3 PUSH1 0x80 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xC79 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND PUSH1 0x1 SWAP2 DUP3 SHL OR SWAP1 DUP6 ADD SSTORE JUMPDEST PUSH1 0x2 DUP5 ADD PUSH2 0xFFFF PUSH1 0x40 DUP4 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH4 0xFFFF0000 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x10 SHL AND SWAP2 PUSH4 0xFFFFFFFF NOT AND OR OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x60 DUP5 MSTORE DUP2 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0xC8643348AEC2503F08AA01288744BB383830B348039B88A434AE1D5278DDC696 CALLER SWAP3 PUSH1 0x80 DUP2 PUSH1 0x4 CALLDATALOAD SWAP5 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xBCE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xCE0 JUMPI POP SWAP3 PUSH1 0x3 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x80 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xCC8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP6 ADD SSTORE PUSH2 0xBE4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xD38 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xD2C JUMPI POP POP PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD16 JUMP JUMPDEST POP DUP1 PUSH2 0xD16 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xB6D JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xDB1 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xD98 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xB82 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xD8B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xD70 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xE15 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xE06 JUMPI POP POP PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xDF0 JUMP JUMPDEST POP DUP1 PUSH2 0xDEA JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xE94 JUMPI POP PUSH1 0x4 PUSH2 0xFFFF SWAP12 SWAP11 SWAP9 SWAP6 PUSH1 0x1 DUP7 PUSH2 0xB03 SWAP11 SWAP7 DUP16 SWAP14 SWAP11 SWAP7 PUSH1 0xE0 SWAP7 PUSH2 0xAFA SWAP11 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xE7B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0xA5F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xE6B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xEEC JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xEE0 JUMPI POP POP PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xECA JUMP JUMPDEST POP DUP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457870657269656E636520616C72656164792065786973747300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2FD JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x2FD JUMPI PUSH2 0xFB1 SWAP1 PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x2FD JUMPI PUSH2 0x1002 SWAP1 PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x107A PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1047 DUP2 PUSH2 0x13B4 JUMP JUMPDEST SWAP1 PUSH2 0x1054 PUSH1 0x1 DUP3 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x1088 PUSH1 0x3 PUSH2 0xFFFF SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xA0 DUP9 MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x1459 JUMP JUMPDEST SWAP3 DUP2 DUP2 AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x10 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD SWAP4 SWAP3 PUSH2 0x10EA PUSH1 0x5 DUP4 SWAP1 SHL DUP6 ADD DUP7 PUSH2 0x1393 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP6 ADD DUP1 SWAP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1197 JUMPI PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE DUP10 MLOAD DUP2 DUP11 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x5 DUP3 SWAP1 SHL DUP4 ADD DUP2 ADD SWAP2 DUP11 SWAP2 DUP13 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP8 LT PUSH2 0x1134 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x1187 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 PUSH1 0x80 SWAP1 DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND DUP2 MSTORE PUSH4 0xFFFFFFFF DUP6 DUP5 ADD MLOAD AND DUP6 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x1127 JUMP JUMPDEST DUP4 DUP8 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP11 SWAP10 SWAP11 MLOAD PUSH2 0x11AB DUP2 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0xFF DUP7 SLOAD DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0xA0 SHR AND DUP6 DUP5 ADD MSTORE PUSH1 0xC0 SHR AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x11DB DUP6 DUP8 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP6 SWAP7 PUSH2 0x10FD JUMP JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1220 PUSH1 0x1 DUP4 ADD PUSH2 0x13B4 JUMP JUMPDEST SWAP2 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x1251 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH2 0x100 SWAP1 DUP9 MSTORE DUP1 PUSH1 0x20 DUP10 ADD MSTORE DUP8 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0xFFFF DUP2 PUSH1 0xC0 SHR AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x2FD JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH2 0x12CB CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR PUSH1 0x4 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0xA0 SHR AND DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1337 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1321 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x13C7 DUP2 PUSH2 0x1307 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1437 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13F8 JUMPI JUMPDEST POP POP POP PUSH2 0x13F6 SWAP3 POP SUB DUP4 PUSH2 0x1393 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x141F JUMPI POP POP PUSH2 0x13F6 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x13E7 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1406 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x13F6 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1485 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1464 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x2FD JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x2FD JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x2FD JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x14E2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x14FF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x155A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x2FD JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x15DE JUMPI SWAP1 DUP2 DUP1 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x15A1 JUMPI POP POP POP DIV SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xFF PUSH2 0x15B0 DUP6 DUP5 PUSH2 0x14C6 JUMP JUMPDEST POP SLOAD PUSH1 0xC0 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x15CA JUMPI SWAP3 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP2 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0x21 0x1E DUP11 BALANCE 0x27 SWAP10 JUMP 0xD4 PUSH6 0x8C1339662462 PUSH32 0xC138C3316483E4084C2EEF86E943B764736F6C63430008180033000000000000 ","sourceMap":"294:6801:15:-:0;;;;;;;2490:1;294:6801;;-1:-1:-1;;;;;;294:6801:15;2534:10;294:6801;;;-1:-1:-1;;;294:6801:15;;;;-1:-1:-1;294:6801:15;;;2554:20;294:6801;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_available_length_string":{"entryPoint":5425,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":5273,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":5209,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":5044,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4871,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5011,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_20960":{"entryPoint":4929,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_20963":{"entryPoint":4956,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_20964":{"entryPoint":4984,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateAverageQuality":{"entryPoint":5495,"id":7233,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_17d9":{"entryPoint":5368,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_Attestation__dyn":{"entryPoint":5318,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_uint16_to_uint16":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint32_to_uint32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816313f269dd146112e65750806327dee37c1461129557806334f01811146111f157806337e59e36146110a35780633ff34eb91461101a57806340a141ff14610fcc5780634d238c8e14610f7b5780635871416314610f385780637b77044d146108d65780638da5cb5b146108ad578063a78c52bb14610824578063b144d4a31461035f578063bb66dab214610339578063c181b273146103025763ebee03bb146100c457600080fd5b346102fd5760203660031901126102fd57600060e06040516100e58161135c565b828152606060208201528260408201528260608201528260808201528260a08201528260c082015201526000608060405161011f81611378565b606081526060602082015282604082015282606082015201526004356000526000602052604060002060ff6004604051926101598461135c565b80548452610169600182016113b4565b60208501526002810154604085015260038101546060850152015460018060a01b038116608084015263ffffffff8160a01c1660a084015261ffff8160c01c1660c084015260d01c16151560e082015260043560005260016020526040600020906003604051926101d984611378565b6101e2816113b4565b84526101f0600182016113b4565b602085015261ffff6002820154818116604087015260101c16606085015201546080830152610220600435611577565b91604051928392606084528051606085015260e061024f60208301516101006080880152610160870190611459565b91604081015160a0870152606081015160c087015260018060a01b036080820151168287015263ffffffff60a08201511661010087015261ffff60c0820151166101208701520151151561014085015283810360208501526080806102d26102c0865160a0865260a0860190611459565b60208701518582036020870152611459565b9461ffff604082015116604085015261ffff6060820151166060850152015191015260408301520390f35b600080fd5b346102fd5760203660031901126102fd576004356000526000602052602060ff60046040600020015460d01c166040519015158152f35b346102fd5760203660031901126102fd576020610357600435611577565b604051908152f35b346102fd5760603660031901126102fd5760043560249081359160ff83168093036102fd576044906001600160401b0382358181116102fd576103a6903690600401611499565b91336000526020946003865260ff60406000205416156107e057866000526000865263ffffffff908160046040600020015460a01c161561079c5760649060648a116107605760008981526002895260408120805492915b83811061070857505050505086600052600286526040600020936040519161042583611341565b33835261044388840195824216875260408501938c85523691611531565b94606084019586528654680100000000000000008110156106f35761046f9060019889820181556114c6565b9490946106de575184549151935160ff60c01b60c09190911b169290931660a01b63ffffffff60a01b166001600160a01b039093166001600160c81b0319909116179190911717815591518051928401929182116106c95781906104d38454611307565b601f8111610676575b508690601f831160011461061357600092610608575b5050600019600383901b1c191690831b1790555b836000526000835260046040600020019061ffff9283835460c01c16908482146105f45750825461ffff60c01b1916910160c01b61ffff60c01b161790557f9a3f0c0b287bde0ebea0be11740769eca2fea70883ef1bd79eab05f21c062c6a9190836000526000825260046040600020015460c01c1660ff60045460a01c161115610597575b6040519384523393a3005b60466105a284611577565b1061058c57600083815280825260408120600401805460ff60d01b1916600160d01b179055339084907fcd88bd92cbb653cb16eea4a15037ddc18c0b33cf33cb092a44aa993b0684b5a59080a361058c565b634e487b7160e01b60009081526011600452fd5b0151905088806104f2565b90859350601f1983169185600052886000209260005b8a8282106106605750508411610647575b505050811b019055610506565b015160001960f88460031b161c1916905588808061063a565b8385015186558997909501949384019301610629565b9091508360005286600020601f840160051c8101918885106106bf575b84939291601f88920160051c01915b8281106106b05750506104dc565b600081558594508791016106a2565b9091508190610693565b84634e487b7160e01b60005260416004526000fd5b88634e487b7160e01b60005260006004526000fd5b88634e487b7160e01b60005260416004526000fd5b61071281836114c6565b50546001600160a01b0316331461072b576001016103fe565b60405162461bcd60e51b8152600481018c90526010818c01526f105b1c9958591e48185d1d195cdd195960821b818501528590fd5b60405162461bcd60e51b8152600481018990526015818901527405175616c697479206d75737420626520302d31303605c1b6044820152606490fd5b60405162461bcd60e51b8152600481018890526019818801527f457870657269656e636520646f6573206e6f74206578697374000000000000006044820152606490fd5b60405162461bcd60e51b8152600481018790526018818701527f4e6f7420617574686f72697a65642076616c696461746f7200000000000000006044820152606490fd5b346102fd5760403660031901126102fd576024356004356000526002602052604060002080548210156102fd5760ff9161085d916114c6565b506108a961086f6001835493016113b4565b60405193849360018060a01b038116855263ffffffff8160a01c16602086015260c01c166040840152608060608401526080830190611459565b0390f35b346102fd5760003660031901126102fd576004546040516001600160a01b039091168152602090f35b346102fd576101203660031901126102fd576024356001600160401b0381116102fd57610907903690600401611499565b6084356001600160401b0381116102fd57610926903690600401611499565b9060a4356001600160401b0381116102fd57610946903690600401611499565b9060c4359161ffff831683036102fd5760e4359361ffff851685036102fd57600435600052600060205263ffffffff60046040600020015460a01c16610ef3576040516109928161135c565b60043581526109a236898b611531565b60208201526044356040820152606435606082015233608082015263ffffffff421660a0820152600060c0820152600060e0820152600435600052600060205260406000208151815560208201518051906001600160401b038211610d3f57610a0e6001840154611307565b601f8111610eac575b50602090601f8311600114610e27579360e0600461ffff9b9a989585610afa96610b039a968f9d9a600092610e1c575b50508160011b916000199060031b1c19161760018201555b604084015160028201556060840151600382015560808401519101805460a08086015163ffffffff60a01b911b166001600160a01b039093166001600160c01b0319909116179190911781559160c081810151845461ffff60c01b1916908c1690911b61ffff60c01b161783550151815460ff60d01b191690151560d01b60ff60d01b1617905560405199610af38b611378565b3691611531565b88523691611531565b6020860152166040840152166060820152610104356080820152600435600052600160205260406000209080518051906001600160401b038211610d3f578190610b4d8554611307565b601f8111610dcc575b50602090601f8311600114610d6057600092610d55575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b038211610d3f57610ba56001850154611307565b601f8111610cf8575b50602090601f8311600114610c8457918060039492608094600092610c79575b505060001982861b1c1916600191821b17908501555b6002840161ffff60408301511681549063ffff0000606085015160101b169163ffffffff19161717905501519101558060405192606084528160608501526080840137600060808284010152604435602083015260643560408301527fc8643348aec2503f08aa01288744bb383830b348039b88a434ae1d5278ddc696339260808160043594601f80199101168101030190a3005b015190508880610bce565b906001850160005260206000209160005b601f1985168110610ce05750926003949260019260809583601f19811610610cc8575b505050811b016001850155610be4565b015160001983881b60f8161c19169055888080610cb8565b91926020600181928685015181550194019201610c95565b600185016000526020600020601f840160051c810160208510610d38575b601f830160051c82018110610d2c575050610bae565b60008155600101610d16565b5080610d16565b634e487b7160e01b600052604160045260246000fd5b015190508680610b6d565b9250846000526020600020906000935b601f1984168510610db1576001945083601f19811610610d98575b505050811b018255610b82565b015160001960f88460031b161c19169055868080610d8b565b81810151835560209485019460019093019290910190610d70565b909150846000526020600020601f840160051c810160208510610e15575b90849392915b601f830160051c82018110610e06575050610b56565b60008155859450600101610df0565b5080610dea565b015190503880610a47565b906001840160005260206000209160005b601f1985168110610e945750600461ffff9b9a9895600186610b039a968f9d9a9660e096610afa9a601f19811610610e7b575b505050811b016001820155610a5f565b015160001960f88460031b161c19169055388080610e6b565b91926020600181928685015181550194019201610e38565b600184016000526020600020601f840160051c810160208510610eec575b601f830160051c82018110610ee0575050610a17565b60008155600101610eca565b5080610eca565b60405162461bcd60e51b815260206004820152601960248201527f457870657269656e636520616c726561647920657869737473000000000000006044820152606490fd5b346102fd5760203660031901126102fd576004356001600160a01b038116908190036102fd576000526003602052602060ff604060002054166040519015158152f35b346102fd5760203660031901126102fd576004356001600160a01b03818116918290036102fd57610fb1906004541633146114f8565b6000908152600360205260409020805460ff19166001179055005b346102fd5760203660031901126102fd576004356001600160a01b03818116918290036102fd57611002906004541633146114f8565b6000908152600360205260409020805460ff19169055005b346102fd5760203660031901126102fd57600435600052600160205261107a6040600020611047816113b4565b90611054600182016113b4565b600282015491611088600361ffff9201549260405196879660a0885260a0880190611459565b908682036020880152611459565b92818116604086015260101c16606084015260808301520390f35b346102fd576020806003193601126102fd576004356000526002808252604060002080546001600160401b038111610d3f5760405193926110ea600583901b850186611393565b8185528385018093600052846000206000915b84831061119757604080518881528951818a01819052600092600582901b83018101918a918c9085015b8287106111345785850386f35b909192938280611187600193603f198a8203018652885190608090868060a01b03835116815263ffffffff85840151168582015260ff604084015116604082015281606080940151938201520190611459565b9601920196019592919092611127565b838760019260409a999a516111ab81611341565b60ff8654868060a01b038116835263ffffffff8160a01c168584015260c01c1660408201526111db8587016113b4565b60608201528152019201920191909695966110fd565b346102fd5760203660031901126102fd57600435600052600060205260406000208054611220600183016113b4565b9160ff6002820154916004600382015491015490611251604051968796610100908852806020890152870190611459565b936040860152606085015260018060a01b038116608085015263ffffffff8160a01c1660a085015261ffff8160c01c1660c085015260d01c16151560e08301520390f35b346102fd5760203660031901126102fd5760043560ff811681036102fd57600454906112cb336001600160a01b038416146114f8565b60ff60a01b1990911660a09190911b60ff60a01b1617600455005b346102fd5760003660031901126102fd5760209060ff60045460a01c168152f35b90600182811c92168015611337575b602083101461132157565b634e487b7160e01b600052602260045260246000fd5b91607f1691611316565b608081019081106001600160401b03821117610d3f57604052565b61010081019081106001600160401b03821117610d3f57604052565b60a081019081106001600160401b03821117610d3f57604052565b90601f801991011681019081106001600160401b03821117610d3f57604052565b906040519182600082546113c781611307565b9081845260209460019160018116908160001461143757506001146113f8575b5050506113f692500383611393565b565b600090815285812095935091905b81831061141f5750506113f693508201013880806113e7565b85548884018501529485019487945091830191611406565b925050506113f694925060ff191682840152151560051b8201013880806113e7565b919082519283825260005b848110611485575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611464565b9181601f840112156102fd578235916001600160401b0383116102fd57602083818601950101116102fd57565b80548210156114e25760005260206000209060011b0190600090565b634e487b7160e01b600052603260045260246000fd5b156114ff57565b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b6044820152606490fd5b9291926001600160401b038211610d3f576040519161155a601f8201601f191660200184611393565b8294818452818301116102fd578281602093846000960137010152565b600090815260026020526040812080549182156115de57908180915b8483106115a1575050500490565b90919260ff6115b085846114c6565b505460c01c1681018091116115ca57926001019190611593565b634e487b7160e01b83526011600452602483fd5b9150509056fea2646970667358221220e3211e8a31279956d4658c13396624627fc138c3316483e4084c2eef86e943b764736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x13F269DD EQ PUSH2 0x12E6 JUMPI POP DUP1 PUSH4 0x27DEE37C EQ PUSH2 0x1295 JUMPI DUP1 PUSH4 0x34F01811 EQ PUSH2 0x11F1 JUMPI DUP1 PUSH4 0x37E59E36 EQ PUSH2 0x10A3 JUMPI DUP1 PUSH4 0x3FF34EB9 EQ PUSH2 0x101A JUMPI DUP1 PUSH4 0x40A141FF EQ PUSH2 0xFCC JUMPI DUP1 PUSH4 0x4D238C8E EQ PUSH2 0xF7B JUMPI DUP1 PUSH4 0x58714163 EQ PUSH2 0xF38 JUMPI DUP1 PUSH4 0x7B77044D EQ PUSH2 0x8D6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0xA78C52BB EQ PUSH2 0x824 JUMPI DUP1 PUSH4 0xB144D4A3 EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xBB66DAB2 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0xC181B273 EQ PUSH2 0x302 JUMPI PUSH4 0xEBEE03BB EQ PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x0 PUSH1 0xE0 PUSH1 0x40 MLOAD PUSH2 0xE5 DUP2 PUSH2 0x135C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x11F DUP2 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x159 DUP5 PUSH2 0x135C JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH2 0x169 PUSH1 0x1 DUP3 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0xFFFF DUP2 PUSH1 0xC0 SHR AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1D9 DUP5 PUSH2 0x1378 JUMP JUMPDEST PUSH2 0x1E2 DUP2 PUSH2 0x13B4 JUMP JUMPDEST DUP5 MSTORE PUSH2 0x1F0 PUSH1 0x1 DUP3 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0xFFFF PUSH1 0x2 DUP3 ADD SLOAD DUP2 DUP2 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x10 SHR AND PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x220 PUSH1 0x4 CALLDATALOAD PUSH2 0x1577 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x60 DUP5 MSTORE DUP1 MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xE0 PUSH2 0x24F PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x100 PUSH1 0x80 DUP9 ADD MSTORE PUSH2 0x160 DUP8 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND DUP3 DUP8 ADD MSTORE PUSH4 0xFFFFFFFF PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0xFFFF PUSH1 0xC0 DUP3 ADD MLOAD AND PUSH2 0x120 DUP8 ADD MSTORE ADD MLOAD ISZERO ISZERO PUSH2 0x140 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 DUP1 PUSH2 0x2D2 PUSH2 0x2C0 DUP7 MLOAD PUSH1 0xA0 DUP7 MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x1459 JUMP JUMPDEST SWAP5 PUSH2 0xFFFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xFFFF PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xD0 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x20 PUSH2 0x357 PUSH1 0x4 CALLDATALOAD PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0xFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x2FD JUMPI PUSH1 0x44 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2FD JUMPI PUSH2 0x3A6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1499 JUMP JUMPDEST SWAP2 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x3 DUP7 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x7E0 JUMPI DUP7 PUSH1 0x0 MSTORE PUSH1 0x0 DUP7 MSTORE PUSH4 0xFFFFFFFF SWAP1 DUP2 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x79C JUMPI PUSH1 0x64 SWAP1 PUSH1 0x64 DUP11 GT PUSH2 0x760 JUMPI PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x2 DUP10 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP2 JUMPDEST DUP4 DUP2 LT PUSH2 0x708 JUMPI POP POP POP POP POP DUP7 PUSH1 0x0 MSTORE PUSH1 0x2 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x425 DUP4 PUSH2 0x1341 JUMP JUMPDEST CALLER DUP4 MSTORE PUSH2 0x443 DUP9 DUP5 ADD SWAP6 DUP3 TIMESTAMP AND DUP8 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 DUP13 DUP6 MSTORE CALLDATASIZE SWAP2 PUSH2 0x1531 JUMP JUMPDEST SWAP5 PUSH1 0x60 DUP5 ADD SWAP6 DUP7 MSTORE DUP7 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x6F3 JUMPI PUSH2 0x46F SWAP1 PUSH1 0x1 SWAP9 DUP10 DUP3 ADD DUP2 SSTORE PUSH2 0x14C6 JUMP JUMPDEST SWAP5 SWAP1 SWAP5 PUSH2 0x6DE JUMPI MLOAD DUP5 SLOAD SWAP2 MLOAD SWAP4 MLOAD PUSH1 0xFF PUSH1 0xC0 SHL PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHL AND SWAP3 SWAP1 SWAP4 AND PUSH1 0xA0 SHL PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC8 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR OR DUP2 SSTORE SWAP2 MLOAD DUP1 MLOAD SWAP3 DUP5 ADD SWAP3 SWAP2 DUP3 GT PUSH2 0x6C9 JUMPI DUP2 SWAP1 PUSH2 0x4D3 DUP5 SLOAD PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x676 JUMPI JUMPDEST POP DUP7 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x613 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x608 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH2 0xFFFF SWAP3 DUP4 DUP4 SLOAD PUSH1 0xC0 SHR AND SWAP1 DUP5 DUP3 EQ PUSH2 0x5F4 JUMPI POP DUP3 SLOAD PUSH2 0xFFFF PUSH1 0xC0 SHL NOT AND SWAP2 ADD PUSH1 0xC0 SHL PUSH2 0xFFFF PUSH1 0xC0 SHL AND OR SWAP1 SSTORE PUSH32 0x9A3F0C0B287BDE0EBEA0BE11740769ECA2FEA70883EF1BD79EAB05F21C062C6A SWAP2 SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xC0 SHR AND PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0xA0 SHR AND GT ISZERO PUSH2 0x597 JUMPI JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 STOP JUMPDEST PUSH1 0x46 PUSH2 0x5A2 DUP5 PUSH2 0x1577 JUMP JUMPDEST LT PUSH2 0x58C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE DUP1 DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xD0 SHL NOT AND PUSH1 0x1 PUSH1 0xD0 SHL OR SWAP1 SSTORE CALLER SWAP1 DUP5 SWAP1 PUSH32 0xCD88BD92CBB653CB16EEA4A15037DDC18C0B33CF33CB092A44AA993B0684B5A5 SWAP1 DUP1 LOG3 PUSH2 0x58C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x4F2 JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP11 DUP3 DUP3 LT PUSH2 0x660 JUMPI POP POP DUP5 GT PUSH2 0x647 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x506 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x63A JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP10 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x629 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP9 DUP6 LT PUSH2 0x6BF JUMPI JUMPDEST DUP5 SWAP4 SWAP3 SWAP2 PUSH1 0x1F DUP9 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x6B0 JUMPI POP POP PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x6A2 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x693 JUMP JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x712 DUP2 DUP4 PUSH2 0x14C6 JUMP JUMPDEST POP SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72B JUMPI PUSH1 0x1 ADD PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP13 SWAP1 MSTORE PUSH1 0x10 DUP2 DUP13 ADD MSTORE PUSH16 0x105B1C9958591E48185D1D195CDD1959 PUSH1 0x82 SHL DUP2 DUP6 ADD MSTORE DUP6 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP10 ADD MSTORE PUSH21 0x5175616C697479206D75737420626520302D31303 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x19 DUP2 DUP9 ADD MSTORE PUSH32 0x457870657269656E636520646F6573206E6F7420657869737400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x18 DUP2 DUP8 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A65642076616C696461746F720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2FD JUMPI PUSH1 0xFF SWAP2 PUSH2 0x85D SWAP2 PUSH2 0x14C6 JUMP JUMPDEST POP PUSH2 0x8A9 PUSH2 0x86F PUSH1 0x1 DUP4 SLOAD SWAP4 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP6 MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xC0 SHR AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH2 0x120 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FD JUMPI PUSH2 0x907 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FD JUMPI PUSH2 0x926 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1499 JUMP JUMPDEST SWAP1 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FD JUMPI PUSH2 0x946 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1499 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH2 0xFFFF DUP4 AND DUP4 SUB PUSH2 0x2FD JUMPI PUSH1 0xE4 CALLDATALOAD SWAP4 PUSH2 0xFFFF DUP6 AND DUP6 SUB PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH4 0xFFFFFFFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0xEF3 JUMPI PUSH1 0x40 MLOAD PUSH2 0x992 DUP2 PUSH2 0x135C JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH2 0x9A2 CALLDATASIZE DUP10 DUP12 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE PUSH4 0xFFFFFFFF TIMESTAMP AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD3F JUMPI PUSH2 0xA0E PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xEAC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xE27 JUMPI SWAP4 PUSH1 0xE0 PUSH1 0x4 PUSH2 0xFFFF SWAP12 SWAP11 SWAP9 SWAP6 DUP6 PUSH2 0xAFA SWAP7 PUSH2 0xB03 SWAP11 SWAP7 DUP16 SWAP14 SWAP11 PUSH1 0x0 SWAP3 PUSH2 0xE1C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0xA0 DUP1 DUP7 ADD MLOAD PUSH4 0xFFFFFFFF PUSH1 0xA0 SHL SWAP2 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP2 PUSH1 0xC0 DUP2 DUP2 ADD MLOAD DUP5 SLOAD PUSH2 0xFFFF PUSH1 0xC0 SHL NOT AND SWAP1 DUP13 AND SWAP1 SWAP2 SHL PUSH2 0xFFFF PUSH1 0xC0 SHL AND OR DUP4 SSTORE ADD MLOAD DUP2 SLOAD PUSH1 0xFF PUSH1 0xD0 SHL NOT AND SWAP1 ISZERO ISZERO PUSH1 0xD0 SHL PUSH1 0xFF PUSH1 0xD0 SHL AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP10 PUSH2 0xAF3 DUP12 PUSH2 0x1378 JUMP JUMPDEST CALLDATASIZE SWAP2 PUSH2 0x1531 JUMP JUMPDEST DUP9 MSTORE CALLDATASIZE SWAP2 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE AND PUSH1 0x40 DUP5 ADD MSTORE AND PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x104 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD3F JUMPI DUP2 SWAP1 PUSH2 0xB4D DUP6 SLOAD PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xDCC JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD60 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xD55 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD3F JUMPI PUSH2 0xBA5 PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCF8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC84 JUMPI SWAP2 DUP1 PUSH1 0x3 SWAP5 SWAP3 PUSH1 0x80 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xC79 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 DUP7 SHL SHR NOT AND PUSH1 0x1 SWAP2 DUP3 SHL OR SWAP1 DUP6 ADD SSTORE JUMPDEST PUSH1 0x2 DUP5 ADD PUSH2 0xFFFF PUSH1 0x40 DUP4 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH4 0xFFFF0000 PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x10 SHL AND SWAP2 PUSH4 0xFFFFFFFF NOT AND OR OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x60 DUP5 MSTORE DUP2 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0xC8643348AEC2503F08AA01288744BB383830B348039B88A434AE1D5278DDC696 CALLER SWAP3 PUSH1 0x80 DUP2 PUSH1 0x4 CALLDATALOAD SWAP5 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xBCE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xCE0 JUMPI POP SWAP3 PUSH1 0x3 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x80 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xCC8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP6 ADD SSTORE PUSH2 0xBE4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xD38 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xD2C JUMPI POP POP PUSH2 0xBAE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xD16 JUMP JUMPDEST POP DUP1 PUSH2 0xD16 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0xB6D JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xDB1 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xD98 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xB82 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0xD8B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xD70 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xE15 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xE06 JUMPI POP POP PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0xDF0 JUMP JUMPDEST POP DUP1 PUSH2 0xDEA JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xA47 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xE94 JUMPI POP PUSH1 0x4 PUSH2 0xFFFF SWAP12 SWAP11 SWAP9 SWAP6 PUSH1 0x1 DUP7 PUSH2 0xB03 SWAP11 SWAP7 DUP16 SWAP14 SWAP11 SWAP7 PUSH1 0xE0 SWAP7 PUSH2 0xAFA SWAP11 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xE7B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0xA5F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xE6B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0xEEC JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0xEE0 JUMPI POP POP PUSH2 0xA17 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xECA JUMP JUMPDEST POP DUP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x457870657269656E636520616C72656164792065786973747300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2FD JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x2FD JUMPI PUSH2 0xFB1 SWAP1 PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x2FD JUMPI PUSH2 0x1002 SWAP1 PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x107A PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1047 DUP2 PUSH2 0x13B4 JUMP JUMPDEST SWAP1 PUSH2 0x1054 PUSH1 0x1 DUP3 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x1088 PUSH1 0x3 PUSH2 0xFFFF SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0xA0 DUP9 MSTORE PUSH1 0xA0 DUP9 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x1459 JUMP JUMPDEST SWAP3 DUP2 DUP2 AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x10 SHR AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD SWAP4 SWAP3 PUSH2 0x10EA PUSH1 0x5 DUP4 SWAP1 SHL DUP6 ADD DUP7 PUSH2 0x1393 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP6 ADD DUP1 SWAP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1197 JUMPI PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE DUP10 MLOAD DUP2 DUP11 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x5 DUP3 SWAP1 SHL DUP4 ADD DUP2 ADD SWAP2 DUP11 SWAP2 DUP13 SWAP1 DUP6 ADD JUMPDEST DUP3 DUP8 LT PUSH2 0x1134 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x1187 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD SWAP1 PUSH1 0x80 SWAP1 DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND DUP2 MSTORE PUSH4 0xFFFFFFFF DUP6 DUP5 ADD MLOAD AND DUP6 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 ADD MLOAD AND PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP1 SWAP5 ADD MLOAD SWAP4 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x1127 JUMP JUMPDEST DUP4 DUP8 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP11 SWAP10 SWAP11 MLOAD PUSH2 0x11AB DUP2 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0xFF DUP7 SLOAD DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP4 MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0xA0 SHR AND DUP6 DUP5 ADD MSTORE PUSH1 0xC0 SHR AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x11DB DUP6 DUP8 ADD PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP6 SWAP7 PUSH2 0x10FD JUMP JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1220 PUSH1 0x1 DUP4 ADD PUSH2 0x13B4 JUMP JUMPDEST SWAP2 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x1251 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH2 0x100 SWAP1 DUP9 MSTORE DUP1 PUSH1 0x20 DUP10 ADD MSTORE DUP8 ADD SWAP1 PUSH2 0x1459 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH2 0xFFFF DUP2 PUSH1 0xC0 SHR AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x2FD JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH2 0x12CB CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP2 AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR PUSH1 0x4 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2FD JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FD JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x4 SLOAD PUSH1 0xA0 SHR AND DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1337 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1321 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0xD3F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x13C7 DUP2 PUSH2 0x1307 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1437 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13F8 JUMPI JUMPDEST POP POP POP PUSH2 0x13F6 SWAP3 POP SUB DUP4 PUSH2 0x1393 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x141F JUMPI POP POP PUSH2 0x13F6 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x13E7 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1406 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x13F6 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1485 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1464 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x2FD JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x2FD JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x2FD JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x14E2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x14FF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xD3F JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x155A PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x1393 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x2FD JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x15DE JUMPI SWAP1 DUP2 DUP1 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x15A1 JUMPI POP POP POP DIV SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xFF PUSH2 0x15B0 DUP6 DUP5 PUSH2 0x14C6 JUMP JUMPDEST POP SLOAD PUSH1 0xC0 SHR AND DUP2 ADD DUP1 SWAP2 GT PUSH2 0x15CA JUMPI SWAP3 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP2 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 0x21 0x1E DUP11 BALANCE 0x27 SWAP10 JUMP 0xD4 PUSH6 0x8C1339662462 PUSH32 0xC138C3316483E4084C2EEF86E943B764736F6C63430008180033000000000000 ","sourceMap":"294:6801:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6173:32;294:6801;;6173:32;:::i;:::-;294:6801;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;;7057:29;294:6801;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;;;;;:::i;:::-;2775:10;;294:6801;;;;2754:20;294:6801;;;;;;;;;;;;;;;;;;;;;;;;4176:30;294:6801;;;;4176:34;294:6801;;4269:3;4258:14;4269:3;4258:14;;294:6801;;;;;;4409:12;294:6801;;;;;;;;4445:10;4457:31;;;;;;294:6801;;;;;;;;4409:12;294:6801;;;;;;;;;;;;:::i;:::-;2775:10;294:6801;;;4641:162;;;4720:15;;;294:6801;;;;4641:162;;294:6801;;;;;;;:::i;:::-;4641:162;294:6801;4641:162;;294:6801;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;;;-1:-1:-1;;;294:6801:15;-1:-1:-1;;;;;294:6801:15;;;-1:-1:-1;;;;;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;4440:156;294:6801;;;;;;;;;;;;;;;-1:-1:-1;;;;2754:20:15;294:6801;;;;;;;;;;;;;;;;;;;;;;;4823:33;294:6801;;;;;;;;;;;;;;;-1:-1:-1;294:6801:15;;-1:-1:-1;;;;294:6801:15;;;;;-1:-1:-1;;;294:6801:15;;;;5273:48;;294:6801;;;;;;;;;;;4952:33;294:6801;;;;;;;;;;-1:-1:-1;4952:52:15;4948:302;;294:6801;;;;;;2775:10;5273:48;;294:6801;4948:302;5105:2;5041:32;;;:::i;:::-;5091:16;4948:302;5087:153;294:6801;;;;;;;;;;;5127:29;294:6801;;-1:-1:-1;;;;294:6801:15;-1:-1:-1;;;294:6801:15;;;2775:10;;294:6801;;5186:39;;294:6801;5186:39;4948:302;;294:6801;-1:-1:-1;;;294:6801:15;;;;;;;;;;;;-1:-1:-1;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;294:6801:15;;;;;;;;;;;;;;;;;;;;2754:20;294:6801;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;294:6801:15;;;;;;;;-1:-1:-1;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4490:3;4517:23;;;;:::i;:::-;-1:-1:-1;294:6801:15;-1:-1:-1;;;;;294:6801:15;2775:10;4517:47;294:6801;;;;4445:10;;294:6801;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;;;;-1:-1:-1;;;294:6801:15;;;;4269:3;;294:6801;;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;2215:53;294:6801;;;;;;;2215:53;;;;;294:6801;2215:53;;;;:::i;:::-;294:6801;;2215:53;294:6801;;;2215:53;;;:::i;:::-;294:6801;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3219:30;294:6801;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;3326:281;;294:6801;;;;3326:281;;294:6801;;;;3326:281;;294:6801;3480:10;294:6801;3326:281;;294:6801;;3522:15;294:6801;;3326:281;;294:6801;;;3326:281;;294:6801;;;3326:281;;294:6801;;;;;;;;;;;;;;;;3326:281;;294:6801;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:281;;294:6801;;;;;;3326:281;;294:6801;;;;;;3326:281;;294:6801;;;;;;3326:281;;;294:6801;-1:-1:-1;;;294:6801:15;;;-1:-1:-1;;;;;294:6801:15;;;-1:-1:-1;;;;;;294:6801:15;;;;;;;;;;;;3326:281;;;294:6801;;;-1:-1:-1;;;;294:6801:15;;;;;;;-1:-1:-1;;;294:6801:15;;;;3326:281;294:6801;;;-1:-1:-1;;;;294:6801:15;;;;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;3648:214;;294:6801;;;3648:214;;294:6801;;;3648:214;;294:6801;;;;3648:214;;294:6801;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3648:214;;294:6801;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;294:6801:15;;;;;;;;;;;;;;;;;;;;;3648:214;;294:6801;;;;3648:214;294:6801;;3648:214;;294:6801;;;;;;;;;;;;3648:214;294:6801;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3886:66;3480:10;294:6801;;;;;;;;;;;;;;3886:66;;;;294:6801;;;;;-1:-1:-1;294:6801:15;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;294:6801:15;;;;;;;;;;;;;;;;;;;-1:-1:-1;294:6801:15;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;294:6801:15;;;;;-1:-1:-1;294:6801:15;;;;;;;-1:-1:-1;294:6801:15;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;294:6801:15;;;;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;2274:52;294:6801;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;2641:42;294:6801;;;;2649:10;:19;2641:42;:::i;:::-;294:6801;;;;6533:20;294:6801;;;;;;;-1:-1:-1;;294:6801:15;6567:4;294:6801;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;2641:42;294:6801;;;;2649:10;:19;2641:42;:::i;:::-;294:6801;;;;6708:20;294:6801;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;2159:50;;;:::i;:::-;;;294:6801;2159:50;;;:::i;:::-;;;;294:6801;;;2159:50;294:6801;2159:50;;294:6801;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6381:12;;294:6801;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;2104:49;294:6801;2104:49;;;:::i;:::-;;294:6801;2104:49;;;294:6801;2104:49;294:6801;2104:49;;;294:6801;2104:49;;294:6801;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;2641:42;2649:10;-1:-1:-1;;;;;294:6801:15;;2649:19;2641:42;:::i;:::-;-1:-1:-1;;;;294:6801:15;;;;;;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;:::o;:::-;;;;;;-1:-1:-1;294:6801:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;294:6801:15;;;;;;;;-1:-1:-1;;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;294:6801:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;294:6801:15;;-1:-1:-1;294:6801:15;;;;;;-1:-1:-1;294:6801:15;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;;;-1:-1:-1;;;294:6801:15;;;;;;;;;;;-1:-1:-1;;;;;294:6801:15;;;;;;;;;;;-1:-1:-1;;294:6801:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;294:6801:15;;;;;;:::o;5404:350::-;-1:-1:-1;294:6801:15;;;5523:12;294:6801;;;;;;;5558:16;;;5554:30;;5603:15;;5633:10;5628:86;5645:15;;;;;;294:6801;;;;5404:350;:::o;5662:3::-;5688:7;;;294:6801;5688:7;;;;:::i;:::-;294:6801;;;;;;;;;;;;5681:22;294:6801;;;5633:10;;;294:6801;-1:-1:-1;;;294:6801:15;;;;;;;;5554:30;5576:8;;;;:::o"},"methodIdentifiers":{"addValidator(address)":"4d238c8e","attestExperience(bytes32,uint8,string)":"b144d4a3","attestations(bytes32,uint256)":"a78c52bb","authorizedValidators(address)":"58714163","calculateAverageQuality(bytes32)":"bb66dab2","experiences(bytes32)":"34f01811","getAttestations(bytes32)":"37e59e36","getExperience(bytes32)":"ebee03bb","isVerified(bytes32)":"c181b273","minAttestations()":"13f269dd","owner()":"8da5cb5b","removeValidator(address)":"40a141ff","setMinAttestations(uint8)":"27dee37c","strategies(bytes32)":"3ff34eb9","submitExperience(bytes32,string,bytes32,uint256,string,string,uint16,uint16,bytes32)":"7b77044d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quality\",\"type\":\"uint8\"}],\"name\":\"ExperienceAttested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"}],\"name\":\"ExperienceSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"verifier\",\"type\":\"address\"}],\"name\":\"ExperienceVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"addValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quality\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"notes\",\"type\":\"string\"}],\"name\":\"attestExperience\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"attestations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"quality\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"notes\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedValidators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"}],\"name\":\"calculateAverageQuality\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"experiences\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"attestations\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"}],\"name\":\"getAttestations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"quality\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"notes\",\"type\":\"string\"}],\"internalType\":\"struct ExperienceRegistry.Attestation[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"}],\"name\":\"getExperience\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"attestations\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"verified\",\"type\":\"bool\"}],\"internalType\":\"struct ExperienceRegistry.Experience\",\"name\":\"exp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"strategyType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modelUsed\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"nanobotCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tumorRadius\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"datasetHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct ExperienceRegistry.StrategyMeta\",\"name\":\"strategy\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"avgQuality\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAttestations\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"removeValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"min\",\"type\":\"uint8\"}],\"name\":\"setMinAttestations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"strategies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"strategyType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modelUsed\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"nanobotCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tumorRadius\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"datasetHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"runHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"ipfsCid\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"strategyType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modelUsed\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"nanobotCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"tumorRadius\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"datasetHash\",\"type\":\"bytes32\"}],\"name\":\"submitExperience\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getExperience(bytes32)\":{\"details\":\"Off-chain indexer should be used for efficient queries\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addValidator(address)\":{\"notice\":\"Add an authorized validator\"},\"attestExperience(bytes32,uint8,string)\":{\"notice\":\"Attest to the quality of an experience\"},\"calculateAverageQuality(bytes32)\":{\"notice\":\"Calculate average quality score for an experience\"},\"getAttestations(bytes32)\":{\"notice\":\"Get all attestations for an experience\"},\"getExperience(bytes32)\":{\"notice\":\"Query top experiences by score for a specific strategy type\"},\"isVerified(bytes32)\":{\"notice\":\"Check if an experience is verified\"},\"removeValidator(address)\":{\"notice\":\"Remove an authorized validator\"},\"setMinAttestations(uint8)\":{\"notice\":\"Update minimum attestations required\"},\"submitExperience(bytes32,string,bytes32,uint256,string,string,uint16,uint16,bytes32)\":{\"notice\":\"Submit a new simulation experience\"}},\"notice\":\"Experience Registry for continual learning and knowledge sharing.         Stores simulation run metadata, IPFS pointers, and quality attestations.         Enables agents to learn from previous successful strategies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ExperienceRegistry.sol\":\"ExperienceRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/ExperienceRegistry.sol\":{\"keccak256\":\"0x5b523b25b9d263ce412cb66dd6322b739b4655e686653551be9528e680e400b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8131407563d48f202f5c4ba675c7a267108e849aec009b8389288cbf96066203\",\"dweb:/ipfs/QmZq4am6GrFMjQAzSJusUT5XncaDy9P571sK1VrZvC4twx\"]}},\"version\":1}"}},"contracts/FoodToken.sol":{"FoodToken":{"abi":[{"inputs":[{"internalType":"address","name":"_colony","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"colony","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":868,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080346200035f57601f601f196001600160401b03620011d238819003848101841686018381118782101762000349578692829160405283396020958691810103126200035f57516001600160a01b03811693908490036200035f576200006562000364565b92601084526f105b9d195b1b1a59d95b98d9519bdbd960821b868501526200008c62000364565b9060048252631193d3d160e21b8783015284519084821162000349576000918254966001978881811c911680156200033e575b8b8210146200032a57908187849311620002d7575b508a908783116001146200027457859262000268575b5050600019600383901b1c191690871b1782555b8251948511620002545785548681811c9116801562000249575b898210146200023557848111620001ed575b50879385116001146200018857508394959650926200017c575b5050600019600383901b1c191690821b1790555b600780546001600160a01b031916919091179055604051610e4d9081620003858239f35b01519050388062000144565b8493929193169685845280842093905b888210620001d55750508385969710620001bb575b505050811b01905562000158565b015160001960f88460031b161c19169055388080620001ad565b80878596829496860151815501950193019062000198565b8683528883208580880160051c8201928b89106200022b575b0160051c019087905b8281106200021f5750506200012a565b8481550187906200020f565b9250819262000206565b634e487b7160e01b83526022600452602483fd5b90607f169062000118565b634e487b7160e01b82526041600452602482fd5b015190503880620000ea565b90848a9416918680528c8720928d88905b828210620002bf5750508411620002a5575b505050811b018255620000fe565b015160001960f88460031b161c1916905538808062000297565b8385015186558d979095019493840193018e62000285565b9091508480528a85208780850160051c8201928d861062000320575b918b91869594930160051c01915b82811062000311575050620000d4565b8781558594508b910162000301565b92508192620002f3565b634e487b7160e01b85526022600452602485fd5b90607f1690620000bf565b634e487b7160e01b600052604160045260246000fd5b600080fd5b60408051919082016001600160401b03811183821017620003495760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461096e5750816306fdde03146108a1578163081812fc14610865578163095ea7b31461078857816323b872dd14610770578163349ff7701461074757816342842e0e1461071857816361b8ce8c146106f95781636352211e146106c85781636a6278421461042557816370a08231146103d057816395d89b41146102b3578163a22cb46514610211578163b88d4fde14610177578163c87b56dd14610125575063e985e9c5146100d557600080fd5b3461012157806003193601126101215760ff816020936100f3610a19565b6100fb610a34565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b838334610121576020366003190112610121576101456101739335610c8e565b5081815161015281610a7f565b5280519161015f83610a7f565b8252519182916020835260208301906109d9565b0390f35b9190503461020d57608036600319011261020d57610193610a19565b61019b610a34565b60443591856064359567ffffffffffffffff8711610121573660238801121561012157860135956101d76101ce88610ad3565b96519687610ab1565b8686523660248883010111610121578661020a976024602093018389013786010152610204838383610aef565b33610cc9565b80f35b8280fd5b9190503461020d578060031936011261020d5761022c610a19565b90602435918215158093036102af576001600160a01b031692831561029a5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b8480fd5b8284346103cd57806003193601126103cd5781519181600192600154938460011c91600186169586156103c3575b60209687851081146103b0578899509688969785829a52918260001461038957505060011461032d575b505050610173929161031e910385610ab1565b519282849384528301906109d9565b9190869350600183527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610371575050508201018161031e61017361030b565b8054848a018601528895508794909301928101610358565b60ff19168782015293151560051b8601909301935084925061031e9150610173905061030b565b634e487b7160e01b835260228a52602483fd5b92607f16926102e1565b80fd5b8284346103cd5760203660031901126103cd576001600160a01b036103f3610a19565b169283156104105750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b9190503461020d57602090816003193601126106c457610443610a19565b6007546001600160a01b039391908416330361068a576006549060001990818314610677576001830160065584519161047b83610a7f565b88835286821696871561066057878591828c5260028852888c205416801515938461062e575b50818c5260038852888c2080546001019055828c5260028852888c2080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c80a4610617573b6104fe578680f35b8261053691855180938192630a85bd0160e11b96878452338c8501528c602485015260448401526080606484015260848301906109d9565b03818a895af18791816105d3575b506105a05750503d15610597573d61055b81610ad3565b9061056884519283610ab1565b81528095823d92013e5b8451948561059157505051633250574960e11b81529182015260249150fd5b85925001fd5b60609450610572565b6001600160e01b0319160390506105be575050503880808080808680f35b51633250574960e11b81529182015260249150fd5b9091508381813d8311610610575b6105eb8183610ab1565b8101031261060c57516001600160e01b03198116810361060c579038610544565b8780fd5b503d6105e1565b84516339e3563760e11b8152808801899052602490fd5b600084815260046020526040902080546001600160a01b0319169055818d5260038952898d20908154019055386104a1565b8651633250574960e11b8152808a018b9052602490fd5b634e487b7160e01b885260118752602488fd5b825162461bcd60e51b8152808601839052601460248201527313db9b1e4818dbdb1bdb9e481b585e481b5a5b9d60621b6044820152606490fd5b8380fd5b8284346103cd5760203660031901126103cd57506106e860209235610c8e565b90516001600160a01b039091168152f35b5050346101215781600319360112610121576020906006549051908152f35b5050346101215761020a9061072c36610a4a565b9192519261073984610a7f565b858452610204838383610aef565b50503461012157816003193601126101215760075490516001600160a01b039091168152602090f35b83346103cd5761020a61078236610a4a565b91610aef565b9190503461020d578060031936011261020d576107a3610a19565b916024356107b081610c8e565b33151580610852575b80610829575b610813576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff16156107bf565b506001600160a01b0381163314156107b9565b90503461020d57602036600319011261020d5791826020933561088781610c8e565b50825283528190205490516001600160a01b039091168152f35b8284346103cd57806003193601126103cd578151918182549260018460011c9160018616958615610964575b60209687851081146103b0578899509688969785829a52918260001461038957505060011461090957505050610173929161031e910385610ab1565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061094c575050508201018161031e61017361030b565b8054848a018601528895508794909301928101610933565b92607f16926108cd565b84913461020d57602036600319011261020d573563ffffffff60e01b811680910361020d57602092506380ac58cd60e01b81149081156109c8575b81156109b7575b5015158152f35b6301ffc9a760e01b149050836109b0565b635b5e139f60e01b811491506109a9565b919082519283825260005b848110610a05575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016109e4565b600435906001600160a01b0382168203610a2f57565b600080fd5b602435906001600160a01b0382168203610a2f57565b6060906003190112610a2f576001600160a01b03906004358281168103610a2f57916024359081168103610a2f579060443590565b6020810190811067ffffffffffffffff821117610a9b57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a9b57604052565b67ffffffffffffffff8111610a9b57601f01601f191660200190565b6001600160a01b039182169290918315610c7557600092828452826020956002875260409684888820541696879133151580610bdf575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610bac575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610b8b5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610b52565b91939450915080610c34575b15610bfb57859291879138610b26565b878688610c18576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015610c59575b80610beb5750858252600481523385898420541614610beb565b5086825260058152878220338352815260ff8883205416610c3f565b604051633250574960e11b815260006004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115610cb1575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b610cdb575b5050505050565b604051630a85bd0160e11b8082526001600160a01b039384166004830152958316602482015260448101919091526080606482015294921692602092918590610d289060848301906109d9565b039483816000978189895af1869181610dd3575b50610d9d575050503d600014610d94573d610d5681610ad3565b90610d646040519283610ab1565b81528093823d92013e5b82519283610d8f57604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250610d6e565b919450915063ffffffff60e01b1603610dbb57503880808080610cd4565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311610e10575b610deb8183610ab1565b81010312610e0c57516001600160e01b031981168103610e0c579038610d3c565b8680fd5b503d610de156fea2646970667358221220030bb0ab0cebcac86070c08722d292e566fdb848a8a44344a4059c57cb7e7cbb64736f6c63430008180033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0x35F JUMPI PUSH1 0x1F PUSH1 0x1F NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH3 0x11D2 CODESIZE DUP2 SWAP1 SUB DUP5 DUP2 ADD DUP5 AND DUP7 ADD DUP4 DUP2 GT DUP8 DUP3 LT OR PUSH3 0x349 JUMPI DUP7 SWAP3 DUP3 SWAP2 PUSH1 0x40 MSTORE DUP4 CODECOPY PUSH1 0x20 SWAP6 DUP7 SWAP2 DUP2 ADD SUB SLT PUSH3 0x35F JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH3 0x35F JUMPI PUSH3 0x65 PUSH3 0x364 JUMP JUMPDEST SWAP3 PUSH1 0x10 DUP5 MSTORE PUSH16 0x105B9D195B1B1A59D95B98D9519BDBD9 PUSH1 0x82 SHL DUP7 DUP6 ADD MSTORE PUSH3 0x8C PUSH3 0x364 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 MSTORE PUSH4 0x1193D3D1 PUSH1 0xE2 SHL DUP8 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 DUP5 DUP3 GT PUSH3 0x349 JUMPI PUSH1 0x0 SWAP2 DUP3 SLOAD SWAP7 PUSH1 0x1 SWAP8 DUP9 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x33E JUMPI JUMPDEST DUP12 DUP3 LT EQ PUSH3 0x32A JUMPI SWAP1 DUP2 DUP8 DUP5 SWAP4 GT PUSH3 0x2D7 JUMPI JUMPDEST POP DUP11 SWAP1 DUP8 DUP4 GT PUSH1 0x1 EQ PUSH3 0x274 JUMPI DUP6 SWAP3 PUSH3 0x268 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP8 SHL OR DUP3 SSTORE JUMPDEST DUP3 MLOAD SWAP5 DUP6 GT PUSH3 0x254 JUMPI DUP6 SLOAD DUP7 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x249 JUMPI JUMPDEST DUP10 DUP3 LT EQ PUSH3 0x235 JUMPI DUP5 DUP2 GT PUSH3 0x1ED JUMPI JUMPDEST POP DUP8 SWAP4 DUP6 GT PUSH1 0x1 EQ PUSH3 0x188 JUMPI POP DUP4 SWAP5 SWAP6 SWAP7 POP SWAP3 PUSH3 0x17C JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0xE4D SWAP1 DUP2 PUSH3 0x385 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x144 JUMP JUMPDEST DUP5 SWAP4 SWAP3 SWAP2 SWAP4 AND SWAP7 DUP6 DUP5 MSTORE DUP1 DUP5 KECCAK256 SWAP4 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH3 0x1D5 JUMPI POP POP DUP4 DUP6 SWAP7 SWAP8 LT PUSH3 0x1BB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x158 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1AD JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x198 JUMP JUMPDEST DUP7 DUP4 MSTORE DUP9 DUP4 KECCAK256 DUP6 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP10 LT PUSH3 0x22B JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP8 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x21F JUMPI POP POP PUSH3 0x12A JUMP JUMPDEST DUP5 DUP2 SSTORE ADD DUP8 SWAP1 PUSH3 0x20F JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x206 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x118 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xEA JUMP JUMPDEST SWAP1 DUP5 DUP11 SWAP5 AND SWAP2 DUP7 DUP1 MSTORE DUP13 DUP8 KECCAK256 SWAP3 DUP14 DUP9 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x2BF JUMPI POP POP DUP5 GT PUSH3 0x2A5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH3 0xFE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x297 JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP14 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD DUP15 PUSH3 0x285 JUMP JUMPDEST SWAP1 SWAP2 POP DUP5 DUP1 MSTORE DUP11 DUP6 KECCAK256 DUP8 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP14 DUP7 LT PUSH3 0x320 JUMPI JUMPDEST SWAP2 DUP12 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x311 JUMPI POP POP PUSH3 0xD4 JUMP JUMPDEST DUP8 DUP2 SSTORE DUP6 SWAP5 POP DUP12 SWAP2 ADD PUSH3 0x301 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xBF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x349 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x96E JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x8A1 JUMPI DUP2 PUSH4 0x81812FC EQ PUSH2 0x865 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x788 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x770 JUMPI DUP2 PUSH4 0x349FF770 EQ PUSH2 0x747 JUMPI DUP2 PUSH4 0x42842E0E EQ PUSH2 0x718 JUMPI DUP2 PUSH4 0x61B8CE8C EQ PUSH2 0x6F9 JUMPI DUP2 PUSH4 0x6352211E EQ PUSH2 0x6C8 JUMPI DUP2 PUSH4 0x6A627842 EQ PUSH2 0x425 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x3D0 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x2B3 JUMPI DUP2 PUSH4 0xA22CB465 EQ PUSH2 0x211 JUMPI DUP2 PUSH4 0xB88D4FDE EQ PUSH2 0x177 JUMPI DUP2 PUSH4 0xC87B56DD EQ PUSH2 0x125 JUMPI POP PUSH4 0xE985E9C5 EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH2 0xF3 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xFB PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x5 DUP8 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x145 PUSH2 0x173 SWAP4 CALLDATALOAD PUSH2 0xC8E JUMP JUMPDEST POP DUP2 DUP2 MLOAD PUSH2 0x152 DUP2 PUSH2 0xA7F JUMP JUMPDEST MSTORE DUP1 MLOAD SWAP2 PUSH2 0x15F DUP4 PUSH2 0xA7F JUMP JUMPDEST DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x9D9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH2 0x193 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x19B PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 DUP6 PUSH1 0x64 CALLDATALOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT PUSH2 0x121 JUMPI CALLDATASIZE PUSH1 0x23 DUP9 ADD SLT ISZERO PUSH2 0x121 JUMPI DUP7 ADD CALLDATALOAD SWAP6 PUSH2 0x1D7 PUSH2 0x1CE DUP9 PUSH2 0xAD3 JUMP JUMPDEST SWAP7 MLOAD SWAP7 DUP8 PUSH2 0xAB1 JUMP JUMPDEST DUP7 DUP7 MSTORE CALLDATASIZE PUSH1 0x24 DUP9 DUP4 ADD ADD GT PUSH2 0x121 JUMPI DUP7 PUSH2 0x20A SWAP8 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE PUSH2 0x204 DUP4 DUP4 DUP4 PUSH2 0xAEF JUMP JUMPDEST CALLER PUSH2 0xCC9 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH2 0x22C PUSH2 0xA19 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x2AF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x29A JUMPI POP CALLER DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST DUP4 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xB611743 PUSH1 0xE3 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x3CD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CD JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x1 SWAP3 PUSH1 0x1 SLOAD SWAP4 DUP5 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x3C3 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x3B0 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x389 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x32D JUMPI JUMPDEST POP POP POP PUSH2 0x173 SWAP3 SWAP2 PUSH2 0x31E SWAP2 SUB DUP6 PUSH2 0xAB1 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x9D9 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x1 DUP4 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0x371 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x31E PUSH2 0x173 PUSH2 0x30B JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH2 0x31E SWAP2 POP PUSH2 0x173 SWAP1 POP PUSH2 0x30B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2E1 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x3CD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3CD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3F3 PUSH2 0xA19 JUMP JUMPDEST AND SWAP3 DUP4 ISZERO PUSH2 0x410 JUMPI POP DUP1 PUSH1 0x20 SWAP4 DUP4 SWAP3 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C4 JUMPI PUSH2 0x443 PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP2 SWAP1 DUP5 AND CALLER SUB PUSH2 0x68A JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 DUP2 DUP4 EQ PUSH2 0x677 JUMPI PUSH1 0x1 DUP4 ADD PUSH1 0x6 SSTORE DUP5 MLOAD SWAP2 PUSH2 0x47B DUP4 PUSH2 0xA7F JUMP JUMPDEST DUP9 DUP4 MSTORE DUP7 DUP3 AND SWAP7 DUP8 ISZERO PUSH2 0x660 JUMPI DUP8 DUP6 SWAP2 DUP3 DUP13 MSTORE PUSH1 0x2 DUP9 MSTORE DUP9 DUP13 KECCAK256 SLOAD AND DUP1 ISZERO ISZERO SWAP4 DUP5 PUSH2 0x62E JUMPI JUMPDEST POP DUP2 DUP13 MSTORE PUSH1 0x3 DUP9 MSTORE DUP9 DUP13 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP3 DUP13 MSTORE PUSH1 0x2 DUP9 MSTORE DUP9 DUP13 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP13 DUP1 LOG4 PUSH2 0x617 JUMPI EXTCODESIZE PUSH2 0x4FE JUMPI DUP7 DUP1 RETURN JUMPDEST DUP3 PUSH2 0x536 SWAP2 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP7 DUP8 DUP5 MSTORE CALLER DUP13 DUP6 ADD MSTORE DUP13 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x9D9 JUMP JUMPDEST SUB DUP2 DUP11 DUP10 GAS CALL DUP8 SWAP2 DUP2 PUSH2 0x5D3 JUMPI JUMPDEST POP PUSH2 0x5A0 JUMPI POP POP RETURNDATASIZE ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH2 0x55B DUP2 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 PUSH2 0x568 DUP5 MLOAD SWAP3 DUP4 PUSH2 0xAB1 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP6 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP5 MLOAD SWAP5 DUP6 PUSH2 0x591 JUMPI POP POP MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST DUP6 SWAP3 POP ADD REVERT JUMPDEST PUSH1 0x60 SWAP5 POP PUSH2 0x572 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB SWAP1 POP PUSH2 0x5BE JUMPI POP POP POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP7 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP2 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x610 JUMPI JUMPDEST PUSH2 0x5EB DUP2 DUP4 PUSH2 0xAB1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x60C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x60C JUMPI SWAP1 CODESIZE PUSH2 0x544 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x5E1 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP2 DUP14 MSTORE PUSH1 0x3 DUP10 MSTORE DUP10 DUP14 KECCAK256 SWAP1 DUP2 SLOAD ADD SWAP1 SSTORE CODESIZE PUSH2 0x4A1 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP8 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP4 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E4818DBDB1BDB9E481B585E481B5A5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x3CD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3CD JUMPI POP PUSH2 0x6E8 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0xC8E JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x121 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x121 JUMPI PUSH2 0x20A SWAP1 PUSH2 0x72C CALLDATASIZE PUSH2 0xA4A JUMP JUMPDEST SWAP2 SWAP3 MLOAD SWAP3 PUSH2 0x739 DUP5 PUSH2 0xA7F JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH2 0x204 DUP4 DUP4 DUP4 PUSH2 0xAEF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x121 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x7 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x3CD JUMPI PUSH2 0x20A PUSH2 0x782 CALLDATASIZE PUSH2 0xA4A JUMP JUMPDEST SWAP2 PUSH2 0xAEF JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH2 0x7A3 PUSH2 0xA19 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0x7B0 DUP2 PUSH2 0xC8E JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x852 JUMPI JUMPDEST DUP1 PUSH2 0x829 JUMPI JUMPDEST PUSH2 0x813 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 DUP3 SWAP2 DUP7 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP9 DUP1 LOG4 DUP5 MSTORE PUSH1 0x20 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP6 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP7 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP5 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP4 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7BF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI SWAP2 DUP3 PUSH1 0x20 SWAP4 CALLDATALOAD PUSH2 0x887 DUP2 PUSH2 0xC8E JUMP JUMPDEST POP DUP3 MSTORE DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x3CD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CD JUMPI DUP2 MLOAD SWAP2 DUP2 DUP3 SLOAD SWAP3 PUSH1 0x1 DUP5 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x964 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x3B0 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x389 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x909 JUMPI POP POP POP PUSH2 0x173 SWAP3 SWAP2 PUSH2 0x31E SWAP2 SUB DUP6 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP DUP3 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x94C JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x31E PUSH2 0x173 PUSH2 0x30B JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x933 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x8CD JUMP JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x20D JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x9C8 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x9B7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x9B0 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x9A9 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xA05 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA2F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA2F JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xA2F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xA2F JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xA2F JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA9B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA9B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA9B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0xBDF JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0xBAC JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0xB8B JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0xB52 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0xC34 JUMPI JUMPDEST ISZERO PUSH2 0xBFB JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0xB26 JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0xC18 JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0xC59 JUMPI JUMPDEST DUP1 PUSH2 0xBEB JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0xBEB JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xCB1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP4 EXTCODESIZE PUSH2 0xCDB JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP5 SWAP3 AND SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP6 SWAP1 PUSH2 0xD28 SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x9D9 JUMP JUMPDEST SUB SWAP5 DUP4 DUP2 PUSH1 0x0 SWAP8 DUP2 DUP10 DUP10 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0xDD3 JUMPI JUMPDEST POP PUSH2 0xD9D JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0xD94 JUMPI RETURNDATASIZE PUSH2 0xD56 DUP2 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 PUSH2 0xD64 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xAB1 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP4 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0xD6E JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0xDBB JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE10 JUMPI JUMPDEST PUSH2 0xDEB DUP2 DUP4 PUSH2 0xAB1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE0C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0xE0C JUMPI SWAP1 CODESIZE PUSH2 0xD3C JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xDE1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SIGNEXTEND 0xB0 0xAB 0xC 0xEB 0xCA 0xC8 PUSH1 0x70 0xC0 DUP8 0x22 0xD2 SWAP3 0xE5 PUSH7 0xFDB848A8A44344 LOG4 SDIV SWAP13 JUMPI 0xCB PUSH31 0x7CBB64736F6C63430008180033000000000000000000000000000000000000 ","sourceMap":"269:375:16:-:0;;;;;-1:-1:-1;;;;;;;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;269:375:16;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;269:375:16;;;;;;:::i;:::-;;;;;-1:-1:-1;;;269:375:16;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;;;;;;;;;;;-1:-1:-1;;;;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;269:375:16;;;;;;;;;;;;;;475:16;269:375;;-1:-1:-1;;;;;;269:375:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;269:375:16;;;;;;;;;;;;;;;;-1:-1:-1;;;269:375:16;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;;;;;;;;;-1:-1:-1;;;269:375:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;-1:-1:-1;269:375:16;;-1:-1:-1;269:375:16;;;;;;;;;;-1:-1:-1;;;;;269:375:16;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2612,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_8703":{"entryPoint":2585,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":2634,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_string":{"entryPoint":2521,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":2771,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2737,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_15828":{"entryPoint":2687,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":null,"id":1026,"parameterSlots":1,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":3273,"id":1332,"parameterSlots":5,"returnSlots":0},"fun_requireOwned":{"entryPoint":3214,"id":1092,"parameterSlots":1,"returnSlots":1},"fun_transferFrom":{"entryPoint":2799,"id":453,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461096e5750816306fdde03146108a1578163081812fc14610865578163095ea7b31461078857816323b872dd14610770578163349ff7701461074757816342842e0e1461071857816361b8ce8c146106f95781636352211e146106c85781636a6278421461042557816370a08231146103d057816395d89b41146102b3578163a22cb46514610211578163b88d4fde14610177578163c87b56dd14610125575063e985e9c5146100d557600080fd5b3461012157806003193601126101215760ff816020936100f3610a19565b6100fb610a34565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b838334610121576020366003190112610121576101456101739335610c8e565b5081815161015281610a7f565b5280519161015f83610a7f565b8252519182916020835260208301906109d9565b0390f35b9190503461020d57608036600319011261020d57610193610a19565b61019b610a34565b60443591856064359567ffffffffffffffff8711610121573660238801121561012157860135956101d76101ce88610ad3565b96519687610ab1565b8686523660248883010111610121578661020a976024602093018389013786010152610204838383610aef565b33610cc9565b80f35b8280fd5b9190503461020d578060031936011261020d5761022c610a19565b90602435918215158093036102af576001600160a01b031692831561029a5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b8480fd5b8284346103cd57806003193601126103cd5781519181600192600154938460011c91600186169586156103c3575b60209687851081146103b0578899509688969785829a52918260001461038957505060011461032d575b505050610173929161031e910385610ab1565b519282849384528301906109d9565b9190869350600183527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610371575050508201018161031e61017361030b565b8054848a018601528895508794909301928101610358565b60ff19168782015293151560051b8601909301935084925061031e9150610173905061030b565b634e487b7160e01b835260228a52602483fd5b92607f16926102e1565b80fd5b8284346103cd5760203660031901126103cd576001600160a01b036103f3610a19565b169283156104105750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b9190503461020d57602090816003193601126106c457610443610a19565b6007546001600160a01b039391908416330361068a576006549060001990818314610677576001830160065584519161047b83610a7f565b88835286821696871561066057878591828c5260028852888c205416801515938461062e575b50818c5260038852888c2080546001019055828c5260028852888c2080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c80a4610617573b6104fe578680f35b8261053691855180938192630a85bd0160e11b96878452338c8501528c602485015260448401526080606484015260848301906109d9565b03818a895af18791816105d3575b506105a05750503d15610597573d61055b81610ad3565b9061056884519283610ab1565b81528095823d92013e5b8451948561059157505051633250574960e11b81529182015260249150fd5b85925001fd5b60609450610572565b6001600160e01b0319160390506105be575050503880808080808680f35b51633250574960e11b81529182015260249150fd5b9091508381813d8311610610575b6105eb8183610ab1565b8101031261060c57516001600160e01b03198116810361060c579038610544565b8780fd5b503d6105e1565b84516339e3563760e11b8152808801899052602490fd5b600084815260046020526040902080546001600160a01b0319169055818d5260038952898d20908154019055386104a1565b8651633250574960e11b8152808a018b9052602490fd5b634e487b7160e01b885260118752602488fd5b825162461bcd60e51b8152808601839052601460248201527313db9b1e4818dbdb1bdb9e481b585e481b5a5b9d60621b6044820152606490fd5b8380fd5b8284346103cd5760203660031901126103cd57506106e860209235610c8e565b90516001600160a01b039091168152f35b5050346101215781600319360112610121576020906006549051908152f35b5050346101215761020a9061072c36610a4a565b9192519261073984610a7f565b858452610204838383610aef565b50503461012157816003193601126101215760075490516001600160a01b039091168152602090f35b83346103cd5761020a61078236610a4a565b91610aef565b9190503461020d578060031936011261020d576107a3610a19565b916024356107b081610c8e565b33151580610852575b80610829575b610813576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff16156107bf565b506001600160a01b0381163314156107b9565b90503461020d57602036600319011261020d5791826020933561088781610c8e565b50825283528190205490516001600160a01b039091168152f35b8284346103cd57806003193601126103cd578151918182549260018460011c9160018616958615610964575b60209687851081146103b0578899509688969785829a52918260001461038957505060011461090957505050610173929161031e910385610ab1565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061094c575050508201018161031e61017361030b565b8054848a018601528895508794909301928101610933565b92607f16926108cd565b84913461020d57602036600319011261020d573563ffffffff60e01b811680910361020d57602092506380ac58cd60e01b81149081156109c8575b81156109b7575b5015158152f35b6301ffc9a760e01b149050836109b0565b635b5e139f60e01b811491506109a9565b919082519283825260005b848110610a05575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016109e4565b600435906001600160a01b0382168203610a2f57565b600080fd5b602435906001600160a01b0382168203610a2f57565b6060906003190112610a2f576001600160a01b03906004358281168103610a2f57916024359081168103610a2f579060443590565b6020810190811067ffffffffffffffff821117610a9b57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a9b57604052565b67ffffffffffffffff8111610a9b57601f01601f191660200190565b6001600160a01b039182169290918315610c7557600092828452826020956002875260409684888820541696879133151580610bdf575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610bac575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610b8b5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610b52565b91939450915080610c34575b15610bfb57859291879138610b26565b878688610c18576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015610c59575b80610beb5750858252600481523385898420541614610beb565b5086825260058152878220338352815260ff8883205416610c3f565b604051633250574960e11b815260006004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115610cb1575090565b60249060405190637e27328960e01b82526004820152fd5b90939192833b610cdb575b5050505050565b604051630a85bd0160e11b8082526001600160a01b039384166004830152958316602482015260448101919091526080606482015294921692602092918590610d289060848301906109d9565b039483816000978189895af1869181610dd3575b50610d9d575050503d600014610d94573d610d5681610ad3565b90610d646040519283610ab1565b81528093823d92013e5b82519283610d8f57604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250610d6e565b919450915063ffffffff60e01b1603610dbb57503880808080610cd4565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311610e10575b610deb8183610ab1565b81010312610e0c57516001600160e01b031981168103610e0c579038610d3c565b8680fd5b503d610de156fea2646970667358221220030bb0ab0cebcac86070c08722d292e566fdb848a8a44344a4059c57cb7e7cbb64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x96E JUMPI POP DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x8A1 JUMPI DUP2 PUSH4 0x81812FC EQ PUSH2 0x865 JUMPI DUP2 PUSH4 0x95EA7B3 EQ PUSH2 0x788 JUMPI DUP2 PUSH4 0x23B872DD EQ PUSH2 0x770 JUMPI DUP2 PUSH4 0x349FF770 EQ PUSH2 0x747 JUMPI DUP2 PUSH4 0x42842E0E EQ PUSH2 0x718 JUMPI DUP2 PUSH4 0x61B8CE8C EQ PUSH2 0x6F9 JUMPI DUP2 PUSH4 0x6352211E EQ PUSH2 0x6C8 JUMPI DUP2 PUSH4 0x6A627842 EQ PUSH2 0x425 JUMPI DUP2 PUSH4 0x70A08231 EQ PUSH2 0x3D0 JUMPI DUP2 PUSH4 0x95D89B41 EQ PUSH2 0x2B3 JUMPI DUP2 PUSH4 0xA22CB465 EQ PUSH2 0x211 JUMPI DUP2 PUSH4 0xB88D4FDE EQ PUSH2 0x177 JUMPI DUP2 PUSH4 0xC87B56DD EQ PUSH2 0x125 JUMPI POP PUSH4 0xE985E9C5 EQ PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x121 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0xFF DUP2 PUSH1 0x20 SWAP4 PUSH2 0xF3 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0xFB PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x5 DUP8 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x121 JUMPI PUSH2 0x145 PUSH2 0x173 SWAP4 CALLDATALOAD PUSH2 0xC8E JUMP JUMPDEST POP DUP2 DUP2 MLOAD PUSH2 0x152 DUP2 PUSH2 0xA7F JUMP JUMPDEST MSTORE DUP1 MLOAD SWAP2 PUSH2 0x15F DUP4 PUSH2 0xA7F JUMP JUMPDEST DUP3 MSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x9D9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI PUSH2 0x193 PUSH2 0xA19 JUMP JUMPDEST PUSH2 0x19B PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 DUP6 PUSH1 0x64 CALLDATALOAD SWAP6 PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT PUSH2 0x121 JUMPI CALLDATASIZE PUSH1 0x23 DUP9 ADD SLT ISZERO PUSH2 0x121 JUMPI DUP7 ADD CALLDATALOAD SWAP6 PUSH2 0x1D7 PUSH2 0x1CE DUP9 PUSH2 0xAD3 JUMP JUMPDEST SWAP7 MLOAD SWAP7 DUP8 PUSH2 0xAB1 JUMP JUMPDEST DUP7 DUP7 MSTORE CALLDATASIZE PUSH1 0x24 DUP9 DUP4 ADD ADD GT PUSH2 0x121 JUMPI DUP7 PUSH2 0x20A SWAP8 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE PUSH2 0x204 DUP4 DUP4 DUP4 PUSH2 0xAEF JUMP JUMPDEST CALLER PUSH2 0xCC9 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH2 0x22C PUSH2 0xA19 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 SWAP4 SUB PUSH2 0x2AF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 ISZERO PUSH2 0x29A JUMPI POP CALLER DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 DUP4 DUP6 MSTORE PUSH1 0x20 MSTORE DUP1 DUP5 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST DUP4 PUSH1 0x24 SWAP3 MLOAD SWAP2 PUSH4 0xB611743 PUSH1 0xE3 SHL DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x3CD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CD JUMPI DUP2 MLOAD SWAP2 DUP2 PUSH1 0x1 SWAP3 PUSH1 0x1 SLOAD SWAP4 DUP5 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x3C3 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x3B0 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x389 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x32D JUMPI JUMPDEST POP POP POP PUSH2 0x173 SWAP3 SWAP2 PUSH2 0x31E SWAP2 SUB DUP6 PUSH2 0xAB1 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x9D9 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP PUSH1 0x1 DUP4 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP3 DUP5 LT PUSH2 0x371 JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x31E PUSH2 0x173 PUSH2 0x30B JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP8 DUP3 ADD MSTORE SWAP4 ISZERO ISZERO PUSH1 0x5 SHL DUP7 ADD SWAP1 SWAP4 ADD SWAP4 POP DUP5 SWAP3 POP PUSH2 0x31E SWAP2 POP PUSH2 0x173 SWAP1 POP PUSH2 0x30B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 DUP11 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2E1 JUMP JUMPDEST DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x3CD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3CD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3F3 PUSH2 0xA19 JUMP JUMPDEST AND SWAP3 DUP4 ISZERO PUSH2 0x410 JUMPI POP DUP1 PUSH1 0x20 SWAP4 DUP4 SWAP3 MSTORE PUSH1 0x3 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6C4 JUMPI PUSH2 0x443 PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP2 SWAP1 DUP5 AND CALLER SUB PUSH2 0x68A JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 DUP2 DUP4 EQ PUSH2 0x677 JUMPI PUSH1 0x1 DUP4 ADD PUSH1 0x6 SSTORE DUP5 MLOAD SWAP2 PUSH2 0x47B DUP4 PUSH2 0xA7F JUMP JUMPDEST DUP9 DUP4 MSTORE DUP7 DUP3 AND SWAP7 DUP8 ISZERO PUSH2 0x660 JUMPI DUP8 DUP6 SWAP2 DUP3 DUP13 MSTORE PUSH1 0x2 DUP9 MSTORE DUP9 DUP13 KECCAK256 SLOAD AND DUP1 ISZERO ISZERO SWAP4 DUP5 PUSH2 0x62E JUMPI JUMPDEST POP DUP2 DUP13 MSTORE PUSH1 0x3 DUP9 MSTORE DUP9 DUP13 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP3 DUP13 MSTORE PUSH1 0x2 DUP9 MSTORE DUP9 DUP13 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP13 DUP1 LOG4 PUSH2 0x617 JUMPI EXTCODESIZE PUSH2 0x4FE JUMPI DUP7 DUP1 RETURN JUMPDEST DUP3 PUSH2 0x536 SWAP2 DUP6 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP7 DUP8 DUP5 MSTORE CALLER DUP13 DUP6 ADD MSTORE DUP13 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x9D9 JUMP JUMPDEST SUB DUP2 DUP11 DUP10 GAS CALL DUP8 SWAP2 DUP2 PUSH2 0x5D3 JUMPI JUMPDEST POP PUSH2 0x5A0 JUMPI POP POP RETURNDATASIZE ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH2 0x55B DUP2 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 PUSH2 0x568 DUP5 MLOAD SWAP3 DUP4 PUSH2 0xAB1 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP6 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP5 MLOAD SWAP5 DUP6 PUSH2 0x591 JUMPI POP POP MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST DUP6 SWAP3 POP ADD REVERT JUMPDEST PUSH1 0x60 SWAP5 POP PUSH2 0x572 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB SWAP1 POP PUSH2 0x5BE JUMPI POP POP POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP7 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST SWAP1 SWAP2 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x610 JUMPI JUMPDEST PUSH2 0x5EB DUP2 DUP4 PUSH2 0xAB1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x60C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x60C JUMPI SWAP1 CODESIZE PUSH2 0x544 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x5E1 JUMP JUMPDEST DUP5 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP9 ADD DUP10 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP2 DUP14 MSTORE PUSH1 0x3 DUP10 MSTORE DUP10 DUP14 KECCAK256 SWAP1 DUP2 SLOAD ADD SWAP1 SSTORE CODESIZE PUSH2 0x4A1 JUMP JUMPDEST DUP7 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP12 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x11 DUP8 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP4 SWAP1 MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x13DB9B1E4818DBDB1BDB9E481B585E481B5A5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x3CD JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x3CD JUMPI POP PUSH2 0x6E8 PUSH1 0x20 SWAP3 CALLDATALOAD PUSH2 0xC8E JUMP JUMPDEST SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x121 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x121 JUMPI PUSH2 0x20A SWAP1 PUSH2 0x72C CALLDATASIZE PUSH2 0xA4A JUMP JUMPDEST SWAP2 SWAP3 MLOAD SWAP3 PUSH2 0x739 DUP5 PUSH2 0xA7F JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH2 0x204 DUP4 DUP4 DUP4 PUSH2 0xAEF JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x121 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x121 JUMPI PUSH1 0x7 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x3CD JUMPI PUSH2 0x20A PUSH2 0x782 CALLDATASIZE PUSH2 0xA4A JUMP JUMPDEST SWAP2 PUSH2 0xAEF JUMP JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x20D JUMPI PUSH2 0x7A3 PUSH2 0xA19 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD PUSH2 0x7B0 DUP2 PUSH2 0xC8E JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x852 JUMPI JUMPDEST DUP1 PUSH2 0x829 JUMPI JUMPDEST PUSH2 0x813 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 DUP3 SWAP2 DUP7 SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP9 DUP1 LOG4 DUP5 MSTORE PUSH1 0x20 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP6 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP7 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP5 DUP8 KECCAK256 CALLER DUP9 MSTORE SWAP1 MSTORE DUP4 DUP7 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7BF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x7B9 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI SWAP2 DUP3 PUSH1 0x20 SWAP4 CALLDATALOAD PUSH2 0x887 DUP2 PUSH2 0xC8E JUMP JUMPDEST POP DUP3 MSTORE DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x3CD JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3CD JUMPI DUP2 MLOAD SWAP2 DUP2 DUP3 SLOAD SWAP3 PUSH1 0x1 DUP5 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP7 AND SWAP6 DUP7 ISZERO PUSH2 0x964 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT DUP2 EQ PUSH2 0x3B0 JUMPI DUP9 SWAP10 POP SWAP7 DUP9 SWAP7 SWAP8 DUP6 DUP3 SWAP11 MSTORE SWAP2 DUP3 PUSH1 0x0 EQ PUSH2 0x389 JUMPI POP POP PUSH1 0x1 EQ PUSH2 0x909 JUMPI POP POP POP PUSH2 0x173 SWAP3 SWAP2 PUSH2 0x31E SWAP2 SUB DUP6 PUSH2 0xAB1 JUMP JUMPDEST SWAP2 SWAP1 DUP7 SWAP4 POP DUP3 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 JUMPDEST DUP3 DUP5 LT PUSH2 0x94C JUMPI POP POP POP DUP3 ADD ADD DUP2 PUSH2 0x31E PUSH2 0x173 PUSH2 0x30B JUMP JUMPDEST DUP1 SLOAD DUP5 DUP11 ADD DUP7 ADD MSTORE DUP9 SWAP6 POP DUP8 SWAP5 SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x933 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x8CD JUMP JUMPDEST DUP5 SWAP2 CALLVALUE PUSH2 0x20D JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20D JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x20D JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x9C8 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x9B7 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x9B0 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x9A9 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xA05 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA2F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA2F JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0xA2F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0xA2F JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xA2F JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA9B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA9B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA9B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 SWAP1 SWAP2 DUP4 ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 SWAP3 DUP3 DUP5 MSTORE DUP3 PUSH1 0x20 SWAP6 PUSH1 0x2 DUP8 MSTORE PUSH1 0x40 SWAP7 DUP5 DUP9 DUP9 KECCAK256 SLOAD AND SWAP7 DUP8 SWAP2 CALLER ISZERO ISZERO DUP1 PUSH2 0xBDF JUMPI JUMPDEST POP SWAP1 PUSH1 0x2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP5 PUSH2 0xBAC JUMPI JUMPDEST DUP6 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE MSTORE DUP10 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 AND SWAP3 DUP4 DUP4 SUB PUSH2 0xB8B JUMPI POP POP POP POP JUMP JUMPDEST PUSH1 0x64 SWAP5 POP MLOAD SWAP3 PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE DUP12 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0xB52 JUMP JUMPDEST SWAP2 SWAP4 SWAP5 POP SWAP2 POP DUP1 PUSH2 0xC34 JUMPI JUMPDEST ISZERO PUSH2 0xBFB JUMPI DUP6 SWAP3 SWAP2 DUP8 SWAP2 CODESIZE PUSH2 0xB26 JUMP JUMPDEST DUP8 DUP7 DUP9 PUSH2 0xC18 JUMPI PUSH1 0x24 SWAP2 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 MLOAD SWAP1 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER DUP8 EQ DUP1 ISZERO PUSH2 0xC59 JUMPI JUMPDEST DUP1 PUSH2 0xBEB JUMPI POP DUP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE CALLER DUP6 DUP10 DUP5 KECCAK256 SLOAD AND EQ PUSH2 0xBEB JUMP JUMPDEST POP DUP7 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE DUP8 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE PUSH1 0xFF DUP9 DUP4 KECCAK256 SLOAD AND PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xCB1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP4 SWAP2 SWAP3 DUP4 EXTCODESIZE PUSH2 0xCDB JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP6 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP5 SWAP3 AND SWAP3 PUSH1 0x20 SWAP3 SWAP2 DUP6 SWAP1 PUSH2 0xD28 SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x9D9 JUMP JUMPDEST SUB SWAP5 DUP4 DUP2 PUSH1 0x0 SWAP8 DUP2 DUP10 DUP10 GAS CALL DUP7 SWAP2 DUP2 PUSH2 0xDD3 JUMPI JUMPDEST POP PUSH2 0xD9D JUMPI POP POP POP RETURNDATASIZE PUSH1 0x0 EQ PUSH2 0xD94 JUMPI RETURNDATASIZE PUSH2 0xD56 DUP2 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 PUSH2 0xD64 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xAB1 JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP4 DUP3 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP3 MLOAD SWAP3 DUP4 PUSH2 0xD8F JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0xD6E JUMP JUMPDEST SWAP2 SWAP5 POP SWAP2 POP PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND SUB PUSH2 0xDBB JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xE10 JUMPI JUMPDEST PUSH2 0xDEB DUP2 DUP4 PUSH2 0xAB1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xE0C JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0xE0C JUMPI SWAP1 CODESIZE PUSH2 0xD3C JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xDE1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SIGNEXTEND 0xB0 0xAB 0xC 0xEB 0xCA 0xC8 PUSH1 0x70 0xC0 DUP8 0x22 0xD2 SWAP3 0xE5 PUSH7 0xFDB848A8A44344 LOG4 SDIV SWAP13 JUMPI 0xCB PUSH31 0x7CBB64736F6C63430008180033000000000000000000000000000000000000 ","sourceMap":"269:375:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;269:375:16;;;;;3776:18:1;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;269:375:16;;;;2618:22:1;269:375:16;;;2618:22:1;:::i;:::-;;269:375:16;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;269:375:16;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;4851:4:1;269:375:16;;;;;;;;;;;;;4766:7:1;;;;;:::i;:::-;735:10:6;4851:4:1;:::i;:::-;269:375:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;269:375:16;;15418:22:1;;15414:91;;735:10:6;;269:375:16;;15514:18:1;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;15575:41:1;269:375:16;735:10:6;15575:41:1;;269:375:16;;15414:91:1;269:375:16;;;;15463:31:1;;;;;;;;269:375:16;15463:31:1;269:375:16;;;;;;;;;;;;;;;;;;;;;;2473:7:1;269:375:16;2473:7:1;269:375:16;;;2473:7:1;269:375:16;;2473:7:1;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;2473:7:1;269:375:16;;;;;;;;;-1:-1:-1;;;269:375:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;;;;;;;-1:-1:-1;;269:375:16;;;;;;;;;;;;;;;;-1:-1:-1;269:375:16;;-1:-1:-1;269:375:16;;-1:-1:-1;269:375:16;;-1:-1:-1;269:375:16;;;-1:-1:-1;;;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;269:375:16;;;;-1:-1:-1;;;;;269:375:16;;:::i;:::-;;1947:19:1;;;1943:87;;269:375:16;;;;;;;2046:9:1;269:375:16;;;;;;;;;;1943:87:1;269:375:16;;-1:-1:-1;;;1989:30:1;;;;;269:375:16;;;1989:30:1;269:375:16;;;;;;;;;;;;;;;;;;;:::i;:::-;571:6;269:375;-1:-1:-1;;;;;269:375:16;;;;;557:10;:20;269:375;;626:8;269:375;;-1:-1:-1;;269:375:16;;;;;;;;;626:8;269:375;;;;;;;:::i;:::-;;;;;;;9691:16:1;;;9687:87;;269:375:16;;;;;;5470:7:1;269:375:16;;;;;;;8830:18:1;;;8826:256;;;;269:375:16;-1:-1:-1;269:375:16;;;9156:9:1;269:375:16;;;;;;;;;;;;;;5470:7:1;269:375:16;;;;;;;-1:-1:-1;;;;;;269:375:16;;;;;9246:27:1;269:375:16;;9246:27:1;9849:96;;1173:14:5;1169:744;;269:375:16;;;1169:744:5;269:375:16;;;;;;;;;;;;1211:67:5;;;;557:10:16;1211:67:5;;;269:375:16;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:5;;;;;;;;;;;1169:744;-1:-1:-1;1207:696:5;;-1:-1:-1;;269:375:16;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1568:18:5;;;-1:-1:-1;;269:375:16;-1:-1:-1;;;1672:39:5;;;;;269:375:16;;;-1:-1:-1;1672:39:5;1564:325;1758:113;;;;;269:375:16;;;-1:-1:-1;269:375:16;;1207:696:5;-1:-1:-1;;;;;;269:375:16;1325:51:5;;-1:-1:-1;1321:182:5;;1207:696;;;1169:744;;;;;;269:375:16;;;1321:182:5;269:375:16;-1:-1:-1;;;1445:39:5;;;;;269:375:16;;;-1:-1:-1;1445:39:5;1211:67;;;;;;;;;;;;;;;;;:::i;:::-;;;269:375:16;;;;;-1:-1:-1;;;;;;269:375:16;;;;;;1211:67:5;;;;269:375:16;;;;1211:67:5;;;;;9849:96:1;269:375:16;;-1:-1:-1;;;9903:31:1;;;;;269:375:16;;;;;9903:31:1;8826:256;269:375:16;;;;15066:15:1;269:375:16;;;;;;;-1:-1:-1;;;;;;269:375:16;;;;;;9037:9:1;269:375:16;;;;;;;;;;;8826:256:1;;;9687:87;269:375:16;;-1:-1:-1;;;9730:33:1;;;;;269:375:16;;;;;9730:33:1;269:375:16;-1:-1:-1;;;269:375:16;;;;;;;;;;;-1:-1:-1;;;269:375:16;;;;;;;;;;;;;-1:-1:-1;;;269:375:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;269:375:16;;;;;2192:22:1;269:375:16;;;2192:22:1;:::i;:::-;269:375:16;;-1:-1:-1;;;;;269:375:16;;;;;;;;;;;;;;;;;;;;;;304:21;269:375;;;;;;;;;;;;;4851:4:1;269:375:16;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4766:7:1;;;;;:::i;269:375:16:-;;;;;;;;;;;;;;331:21;269:375;;;-1:-1:-1;;;;;269:375:16;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;14663:22:1;;;:::i;:::-;735:10:6;14813:18:1;;:35;;;269:375:16;14813:69:1;;;269:375:16;14809:142:1;;-1:-1:-1;;;;;269:375:16;;;;;;;;;15003:28:1;;;;269:375:16;;;;;;;;-1:-1:-1;;;;;;269:375:16;;;;;;;;14809:142:1;269:375:16;;-1:-1:-1;;;14909:27:1;;735:10:6;14909:27:1;;;269:375:16;;;14909:27:1;14813:69;-1:-1:-1;;;;;;269:375:16;;;;3776:18:1;269:375:16;;;;;;;735:10:6;269:375:16;;;;;;;;;;14852:30:1;14813:69;;:35;-1:-1:-1;;;;;;269:375:16;;735:10:6;14835:13:1;;14813:35;;269:375:16;;;;;;;;-1:-1:-1;;269:375:16;;;;;;;;;3385:22:1;;;:::i;:::-;-1:-1:-1;269:375:16;;;;;;;;;;-1:-1:-1;;;;;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;269:375:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;269:375:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1664:40:1;;;:104;;;;269:375:16;1664:156:1;;;;269:375:16;;;;;;;1664:156:1;-1:-1:-1;;;829:40:9;;-1:-1:-1;1664:156:1;;;:104;-1:-1:-1;;;1720:48:1;;;-1:-1:-1;1664:104:1;;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;269:375:16;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;269:375:16;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;269:375:16;;;;:::o;3852:578:1:-;-1:-1:-1;;;;;269:375:16;;;;3852:578:1;;3946:16;;3942:87;;-1:-1:-1;269:375:16;;;;;;;5470:7:1;269:375:16;;;;;;;;;;735:10:6;;;;8704:18:1;;8700:86;;;3852:578;8830:18;;5470:7;9246:27;8830:18;;8826:256;;3852:578;269:375:16;;;9156:9:1;269:375:16;;;;;;;9096:16:1;269:375:16;;;;;;;;;;;;-1:-1:-1;;;;;;269:375:16;;;;;;9246:27:1;269:375:16;4319:21:1;;;;4315:109;;3852:578;;;;:::o;4315:109::-;269:375:16;;;;4363:50:1;;;;;;;;;269:375:16;;;;;;;;;4363:50:1;8826:256;269:375:16;;;;15066:15:1;269:375:16;;;;;;;-1:-1:-1;;;;;;269:375:16;;;;;;9037:9:1;269:375:16;;;;;;;-1:-1:-1;;269:375:16;;;8826:256:1;;8700:86;6185:127;;;;;;;;;8700:86;6862:39;6858:255;;8700:86;;;;;;;;6858:255;6921:19;;;269:375:16;;;;;6967:31:1;;;;;;;;;269:375:16;6967:31:1;6917:186;269:375:16;;;7044:44:1;;;;;;735:10:6;7044:44:1;;;269:375:16;;;;;7044:44:1;6185:127;735:10:6;;6223:16:1;;:52;;;;6185:127;6223:88;6185:127;6223:88;269:375:16;;;;5705:15:1;269:375:16;;735:10:6;269:375:16;;;;;;6279:32:1;6185:127;;6223:52;269:375:16;;;;3776:18:1;269:375:16;;;;;735:10:6;269:375:16;;;;;;;;;;6223:52:1;;3942:87;269:375:16;;-1:-1:-1;;;3985:33:1;;3960:1;3985:33;;;269:375:16;;;3985:33:1;15858:241;-1:-1:-1;269:375:16;;;5470:7:1;269:375:16;;;;;;-1:-1:-1;;;;;269:375:16;;15987:19:1;;15983:88;;16080:12;15858:241;:::o;15983:88::-;269:375:16;;;;6967:31:1;;;;16029;;;;;269:375:16;16029:31:1;993:926:5;;;;;1173:14;;1169:744;;993:926;;;;;;:::o;1169:744::-;269:375:16;;-1:-1:-1;;;1211:67:5;;;-1:-1:-1;;;;;269:375:16;;;1211:67:5;;;269:375:16;;;;;;;;;;;;;;;;;;;;;;;;1211:67:5;;269:375:16;;;;;;;;;;:::i;:::-;1211:67:5;1190:1;;;;1211:67;;;;;;;;;;;1169:744;-1:-1:-1;1207:696:5;;1518:385;;;269:375:16;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1568:18:5;;;269:375:16;;-1:-1:-1;;;1672:39:5;;1211:67;1672:39;;269:375:16;;;;;1672:39:5;1564:325;1758:113;;-1:-1:-1;1758:113:5;269:375:16;;;-1:-1:-1;269:375:16;;1207:696:5;269:375:16;;;;;;;;;1325:51:5;1321:182;;1207:696;1169:744;;;;;;;1321:182;269:375:16;;;;9730:33:1;;;;1445:39:5;;1211:67;1445:39;;269:375:16;1445:39:5;1211:67;;;;;;;;;;;;;;;;;:::i;:::-;;;269:375:16;;;;;-1:-1:-1;;;;;;269:375:16;;;;;;1211:67:5;;;;269:375:16;;;;1211:67:5;;;;"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","colony()":"349ff770","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mint(address)":"6a627842","name()":"06fdde03","nextId()":"61b8ce8c","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_colony\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"colony\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 that represents a single piece of food in the grid.        Minted by the simulation and transferred to the ant that picks it up.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FoodToken.sol\":\"FoodToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/FoodToken.sol\":{\"keccak256\":\"0x322dc2ceed396c8d155e2f7efd03aced25b36c7c07d406fb0b63a1d42faa56cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1838f78b2d6ced0225b1f84ba826d7eff3784c6aa74e048fcf149bb3571c7f3d\",\"dweb:/ipfs/QmQQD37Qs7FtTmAv6h7pyFLojoaZRESm3dEGy8tHYuFpEG\"]}},\"version\":1}"}}}}}