 # Antelligence Environment Configuration
# Copy this file to .env and fill in your actual values

# ============================================
# DATA SOURCES
# ============================================

# Synapse Authentication Token for BraTS Data Access
# Get from: https://www.synapse.org/ (Account Settings -> Personal Access Tokens)
# Required for downloading BraTS datasets from Synapse
SYNAPSE_AUTH_TOKEN=your_synapse_auth_token_here

# ============================================
# AI MODEL API KEYS
# ============================================

# IO.NET API Key (Required for Llama, DeepSeek models)
# Get from: https://io.net
IO_SECRET_KEY=your_io_net_api_key_here

# OpenAI API Key (Optional - for GPT-4o, GPT-4o Mini)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your_openai_api_key_here

# Google Gemini API Key (Optional - for Gemini 1.5 Flash, Pro)
# Get from: https://ai.google.dev/
GEMINI_API_KEY=your_gemini_api_key_here

# Mistral AI API Key (Optional - for Mistral Small, Large)
# Get from: https://console.mistral.ai/
MISTRAL_API_KEY=your_mistral_api_key_here

# GROQ API Key (Optional - for ultra-fast Llama 3.1 8B, Llama Guard)
# Get from: https://console.groq.com/
GROQ_API_KEY=your_groq_api_key_here

# GAIA API Key (Optional - for Gemma 3, Yi 1.5, Qwen 3, MiniCPM-V)
# Get from: https://www.gaianet.ai/
# NOTE: GAIA requires a specific node ID. Without it, GAIA models will use fallback.
GAIA_API_KEY=your_gaia_api_key_here
GAIA_NODE_ID=your_gaia_node_id_here

# ============================================
# BLOCKCHAIN CONFIGURATION (Base Sepolia Testnet)
# ============================================

# Base Sepolia RPC URL
# Option 1: Alchemy (recommended)
BASE_SEPOLIA_RPC_URL=https://base-sepolia.g.alchemy.com/v2/YOUR_ALCHEMY_KEY
# Option 2: Infura
# BASE_SEPOLIA_RPC_URL=https://base-sepolia.infura.io/v3/YOUR_INFURA_PROJECT_ID

# Private Key for blockchain transactions
# IMPORTANT: This should be a Base Sepolia testnet wallet only!
# - Can include or omit the '0x' prefix
# - Get Base Sepolia ETH from: https://bridge.base.org/deposit or https://faucet.quicknode.com/base/sepolia
# - NEVER use a mainnet wallet with real funds!
PRIVATE_KEY=your_private_key_here

# Smart Contract Addresses
# These will be generated when you deploy contracts
# Run: cd blockchain && npx hardhat run scripts/deploy.js --network baseSepolia
FOOD_ADDR=0x...
MEMORY_ADDR=0x...
EXPERIENCE_REGISTRY_ADDR=0x...

# ============================================
# LOCAL DEVELOPMENT (Optional)
# ============================================

# Local Hardhat node (for development/testing)
CHAIN_RPC=http://127.0.0.1:8545

# ============================================
# NOTES
# ============================================

# 1. Minimum setup (Rule-Based simulations only):
#    - No API keys needed
#    - Blockchain will use simulated transactions
#
# 2. For LLM-Powered simulations:
#    - At least one AI API key required (IO_SECRET_KEY recommended)
#
# 3. For real blockchain integration:
#    - BASE_SEPOLIA_RPC_URL required
#    - PRIVATE_KEY with Base Sepolia ETH required
#    - FOOD_ADDR and MEMORY_ADDR from contract deployment
#
# 4. Security:
#    - Never commit .env file to git
#    - .env is in .gitignore by default
#    - Use testnet keys only
#    - Keep API keys confidential

# ============================================
# SETUP CHECKLIST
# ============================================

# [ ] Copy this file to .env
# [ ] Add at least IO_SECRET_KEY for LLM features
# [ ] (Optional) Add OPENAI_API_KEY, GEMINI_API_KEY, MISTRAL_API_KEY, GROQ_API_KEY, GAIA_API_KEY
# [ ] Get Base Sepolia RPC URL from Alchemy or Infura
# [ ] Get Base Sepolia ETH from faucet
# [ ] Deploy contracts: npx hardhat run scripts/deploy.js --network baseSepolia
# [ ] Update FOOD_ADDR and MEMORY_ADDR from deployment output
# [ ] Install GROQ library: pip install groq
# [ ] Run ./verify-setup.sh to check configuration
# [ ] Start backend: cd backend && python -m uvicorn main:app --reload
# [ ] Start frontend: cd frontend && npm run dev

